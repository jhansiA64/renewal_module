[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2023-12-10 18:32:43.302431",
  "module": "Renewal Module",
  "name": "Item-Form",
  "script": "frappe.ui.form.on('Item',  {\n\trefresh(frm) {\n\t\t// your code here\n\t\tfrappe.call({\n\t        method:\"frappe.client.get_list\",\n\t        args:{\n\t            doctype: \"Item Tax Template\",\n\t            fields:[\"rate\"]\n\t            \n\t        },\n\t        callback: function(r){\n\t            console.log(r);\n\t            var data = r.message;\n\t            var rate_list = [];\n\t            data.forEach(function(each){\n\t               // console.log(each.rate);\n\t                var r = each.rate;\n\t                \n\t                if(rate_list.includes(r)){\n\t                    //pass\n\t                }\n\t                else{\n\t                    rate_list.push(r);\n\t                }\n\t            });\n\t            console.log(rate_list);\n\t            set_field_options(\"tax_rate\", rate_list);\n\t        }\n\t\t});     \n\t},\n\t\n\ttax_rate:function(frm){\n\t    frm.doc.taxes = [];\n\t    var rate = frm.doc.tax_rate;\n\t    if(rate !== undefined){\n\t        frappe.call({\n    \t        method:\"frappe.client.get_list\",\n    \t        args:{\n    \t            doctype: \"Item Tax Template\",\n    \t            filters: {\n                        \"rate\": frm.doc.tax_rate\n                        \n                    },\n    \t            fields:[\"name\",\"rate\",\"tax_category\"]\n    \t            \n    \t        },\n    \t        callback: function(r){\n    \t            console.log(r);\n    \t            var data = r.message;\n    \t            data.reverse()\n    \t            \n    \t            data.forEach(function(each){\n    \t                console.log(each.name);\n    \t                \n    \t                var r = each.rate;\n    \t                var category = each.tax_category;\n    \t                console.log(category);\n    \t                \n    \t                if(r == rate){\n    \t                    var child = frm.add_child(\"taxes\");\n    \t                    console.log(each.name);\n    \t                    child.item_tax_template = each.name;\n    \t                    child.tax_category = category;\n    \t                    frm.refresh_field(\"taxes\");\n    \t                    frm.save();\n    \t                }\n    \t                \n    \t            });    \n    \t        }\n    \t\t});  \n\t    }\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Renewal List",
  "enabled": 1,
  "modified": "2023-03-26 13:46:17.211213",
  "module": "Renewal Module",
  "name": "Renewal List-Form",
  "script": "frappe.ui.form.on('Renewal List', {\n  \n\trefresh(frm) {\n\t    \n\t    if(frm.doc.__islocal && frm.doc.opportunity_id !== undefined){\n\t        setTimeout(function() {\n    \t        frappe.call({\n    \t            method:\"frappe.client.get\",\n        \t        args:{\n        \t            doctype:\"Opportunity\",\n        \t            filters:{\n        \t                \"name\":frm.doc.opportunity_id\n        \t            }\n        \t        },\n        \t        callback:function(r){\n        \t            console.log(r.message);\n        \t            frm.doc.contact_list = [];\n        \t            let contact_list = r.message.contact_list;\n                  \t    contact_list.forEach(function(each){\n                  \t        var child = frm.add_child(\"contact_list\");\n                  \t        child.user_name = each.user_name;\n                  \t        child.email_id = each.email_id;\n                  \t        child.mobile_no = each.mobile_no;\n                  \t        child.designation = each.designation;\n                  \t        frm.refresh_field(\"contact_list\");\n                  \t    }) ;\n                  \t    \n                  \t    let items = r.message.items;\n                  \t    items.forEach(function(each){\n                  \t        var child = frm.add_child(\"items\");\n                  \t        //console.log(each)\n                  \t        \n                  \t        \n                  \t        \n                  \t        child.amount = each.amount;\n                  \t        child.base_amount = each.base_amount;\n                  \t        \n                  \t        \n                  \t        child.base_rate = each.base_rate;\n                  \t        \n                  \t        \n                  \t        child.brand = each.brand;\n                  \t        child.conversion_factor = each.conversion_factor;\n                  \t        child.customer_item_code = each.customer_item_code;\n                  \t        child.description = each.description;\n                  \t        \n                  \t        \n                  \t        \n                  \t        \n                  \t        child.item_code = each.item_code;\n                  \t        child.item_group = each.item_group;\n                  \t        child.item_name = each.item_name;\n                  \t        \n                  \t        \n                  \t        \n                  \t        child.qty = each.qty;\n                  \t        child.rate = each.rate;\n                  \t        \n                  \t        \n                  \t        \n                  \t        child.uom = each.uom;\n                  \t        \n                  \t        frm.refresh_field(\"items\");\n                  \t        \n                  \t        \n                  \t        \n                  \t        \n                  \t    })\n                  \t    \n                  \t    var sales_user = r.message.sales_team[0].sales_person;\n                  \t    var team_lead = r.message.sales_team[0].team_name;\n                  \t    var renewal_owner = r.message.opportunity_owner;\n                  \t    frm.set_value(\"sales_user\",sales_user);\n                  \t    frm.set_value(\"sales_team\",team_lead);\n                  \t    frm.set_value(\"renewal_owner\",renwal_owner);\n        \t        }\n    \t        })\n\t        }, 10000); \n\t    }\n\t    \n\t    \n\t    \n\t  let creator= \"\" ;\n        let name_of_team =\"\";\n        let email_user= \"\" ;\n        if ( frm.doc.__islocal ){\n            if(frm.doc.customer_name !== undefined){\n                setTimeout(function() {\n        \t        frappe.call({\n            \t        method:\"frappe.client.get\",\n            \t        args:{\n            \t            doctype: \"Customer\",\n            \t            filters: {\n            \t                \"name\": frm.doc.customer_name\n            \t            }\n            \t        },\n            \t        callback: function(r){\n            \t            \n            \t           // console.log(r.message);\n            \t            //console.log(r.message.sales_team[0].sales_person)\n            \t            cur_frm.set_value(\"sales_user\", r.message.sales_team[0].sales_person);\n            \t            cur_frm.set_value(\"sales_team\", r.message.sales_team[0].team_name);\n            \t            cur_frm.set_value(\"renewal_owner\",r.message.account_manager);\n            \t            frm.refresh_field(\"sales_userl\");\n            \t            frm.refresh_field(\"sales_team\");\n            \t            frm.refresh_field(\"renewal_owner\");\n        \n            \t        }\n            \t        \n            \t        \n            \t        \n            \t        \n            \t    });\n                  }, 1000);  \n            }\n            else{\n                \n                \n                console.log(\"this is if cond\");\n                email_user=frappe.user_info().email;\n                console.log(email_user);\n                frappe.model.get_value('Employee',{'user_id':email_user},['employee_name'],function(d){\n                    console.log(d);\n                    \n                    \n                frappe.model.get_value('Sales Person',{'employee':d.name},['parent_sales_person'],function(s){\n                //console.log('Employee Name', d.employee_name,s,s.sales_person_name);\n                name_of_team = s.parent_sales_person;\n                console.log(name_of_team);\n                \n                cur_frm.set_value(\"sales_user\", d.employee_name);\n    \t        cur_frm.set_value(\"sales_team\", name_of_team);\n    \t        cur_frm.set_value(\"renewal_owner\",email_user);\n                \n        \t\t\n        \t\t\n                    \n                    });\n                    \n                 });\n             \n            } \n             \n         }\n\t    \n         \n        if (frm.doc.customer_name !== undefined){\n              //get_contact_list(frm.doc.customer_name);\n              frm.set_query(\"user_name\",\"contact_list\",function(doc,cdt,cdn){\n              return{\n                  filters:{\n                      company_name: frm.doc.customer_name\n                  }\n              }\n          })\n          \n           \n            \n        } \n          \n          \n        if(!frm.doc.__islocal){\n            frm.fields_dict[\"items\"].grid.add_custom_button(__('Additional'), \n\t\t\tfunction() {\n\t\t\t\t//frappe.msgprint(__(\"Hello\"));\n\t\t\t\tif(frm.is_new()){\n\t\t\t\t    frappe.msgprint(\"There Is No Active Subscription.Please Click 'Add Row' button\");\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t    \n\t\t\t\tconsole.log(frm.doc.name)\n    \t\t\t\t// frappe.call({\n    \t\t\t\t// \tmethod: \n    \t\t\t\t// \t\"renewal_module.renewal_module.doctype.subscription_list.api.cancel_and_amend\",\n    \t\t\t\t// \targs: {\n        //       \t\t\t\t\"name\": frm.doc.name\n        //       \t\t\t},\n    \t\t\t\t// \tcallback: function (r){\n    \t\t\t\t// \t    console.log(\"server_script\")\n    \t\t\t\t// \t\tconsole.log(r);\n    \t\t\t\t// \t},\n    \t\t\t\t// });\n    \t\t\t\t$(\".grid-add-row\").hide();\n    \t\t\t\tvar data = frm.doc.items;\n    \t\t\t\tconsole.log(data);\n    \t\t\t\tvar child = frm.add_child('items');\n    \t\t\t\t\n    \t\t\t\t//child.item_code = frm.doc.product_name;\n    \t\t\t\tchild.new_add = \"Additional\"\n    \t\t\t\tfrm.refresh_field('items')\n\t\t\t\t}\t\n\t\t\t\t\n        });\n        frm.fields_dict[\"items\"].grid.grid_buttons.find('.btn-custom').removeClass('btn-default').addClass('btn-primary');\n        }  \n        \n        \n\t},\n\t\n\tcustomer_name:function(frm){\n\t    frm.doc.contact_list = [];\n\t     var customer = frm.doc.customer_name;\n\t    if(customer !== undefined){\n\t        frappe.call({\n\t        method:\"frappe.client.get\",\n\t        args:{\n\t            doctype: \"Customer\",\n\t            filters: {\n\t                \"name\": frm.doc.customer_name\n\t            }\n\t        },\n\t        callback: function(r){\n\t            console.log(r.message);\n\t            cur_frm.set_value(\"sales_user\", r.message.sales_person);\n\t            cur_frm.set_value(\"sales_team\", r.message.team_name);\n\t            cur_frm.set_value(\"renewal_owner\",r.message.account_manager)\n\t        }\n\t        \n\t        \n\t        \n\t        \n\t    });\n\t    \n\t    frm.set_query(\"user_name\",\"contact_list\",function(doc,cdt,cdn){\n              return{\n                  filters:{\n                      company_name: frm.doc.customer_name\n                  }\n              }\n          })\n\t    \n\t    //get_contact_list(customer);\n\t    }\n\t    \n\t    \n  \t\t\n\t},\n\t\n\t\n\n\tbefore_save:function(frm){\n\t    var total_qty = 0;\n\t    var final_amount = 0;\n\t    frm.doc.items.forEach(function(each){\n\t        console.log(each);\n\t        console.log(cur_frm.doc.total_quantity);\n    \t    console.log(cur_frm.doc.total_amount);\n\t        total_qty =  total_qty + parseInt(each.qty);\n    \t    final_amount = final_amount + parseInt(each.amount);\n    \t    \n    \t    cur_frm.set_value(\"total_quantity\", total_qty);\n    \t    cur_frm.set_value(\"total_amount\", final_amount);\n    \t    cur_frm.refresh_field(\"total_quantity\");\n    \t    cur_frm.refresh_field(\"total_amount\");\n    \t    cur_frm.set_value(\"product_name\",each.item_name);\n    \t    cur_frm.refresh_field(\"prodcut_name\");\n    \t    cur_frm.set_value(\"end_date\",each.end_date);\n    \t    cur_frm.refresh_field(\"end_date\");\n    \t    if(each.idx == \"1\"){\n    \t        cur_frm.set_value(\"start_date\",each.start_date);\n    \t        cur_frm.refresh_field(\"start_date\")\n    \t    }\n\t    })\n\t},\n\t\n\tsales_user:function(frm){\n\t    var sales_person = frm.doc.sales_user\n\t    if(sales_person !== undefined){\n\t        frappe.call({\n                method:\"frappe.client.get\",\n\t            args: {\n\t                doctype:\"User\",\n\t\t            filters: {'full_name': sales_person\n\t    \t         },\n\t            },\n\t        callback: function(r) {\n\t            var email_user = r.message.name;\n\t            \n\t            console.log(email_user);\n\t            \n\t            \n\t                 frappe.model.get_value('Employee',{'user_id':email_user},'name',function(d){\n\t                     //console.log(d);\n\t                     //console.log(d.name);\n\t                     \n    \t               frappe.model.get_value('Sales Person',{'employee':d.name},['parent_sales_person'],function(s){\n                        console.log(s);\n                        //console.log('Employee Name', d.name,d.employee_name,s,s.sales_person_name);\n                        var name_of_team = s.parent_sales_person;\n                        //console.log(name_of_team)\n                        cur_frm.set_value('sales_team',name_of_team);\n                \t\tcur_frm.refresh_fields(\"sales_team\");\n                \t\tcur_frm.set_value(\"renewal_owner\", email_user);\n                \t\tcur_frm.refresh_fields(\"renewal_owner\");\n                \t\t\n\t\t\n        \n                        \n                        });\n                     });\n                }\n          });\n\t    }\n\t}\n\t\n\t\n});\n\nfrappe.ui.form.on('Renewal Item', {\n   item_code:function(frm,cdt, cdn) {\n        \n        \n        var start_date = frappe.datetime.get_today();\n        console.log(start_date);\n        \n    \tvar child = locals[cdt][cdn];\n    \tconsole.log(child.item_code);\n    \t\n        // \tif (cur_frm.product_name !== undefined ){\n    \t    if (child.item_code !== \"\"  ){\n    \t    //console.log(child);\n        \t\n        \tvar newadd = child.new_add;\n        \t//console.log(newadd);\n        \n        \tvar item_code = child.item_code;\n        \tvar item_name = child.item_name;\n        \t//console.log(item_code);\n    \t    \n        \t\n        \tfrappe.call({\n        \t        method:\"frappe.client.get\",\n        \t        args:{\n        \t            doctype:\"Item Price\",\n        \t            filters:{\n        \t                \"item_code\":item_code,\n        \t                \"price_list\":\"Standard Selling\"\n        \t            }\n        \t        },\n        \t        callback:function(r){\n        \t            \n                \t    \n                \t    if(child.new_add === \"New\"){\n                \t       \n            \t            console.log(child.item_name);\n            \t            cur_frm.set_value(\"product_name\",r.message.item_name);\n                            cur_frm.refresh_field(\"product_name\");\n                \t    }\n                \t    \n                \t    if(child.new_add === \"Additional\" && cur_frm.doc.product_name !== r.message.item_name){\n                \t        console.log(\"child\" + child);\n                \t        frappe.throw(\"Please Check Item Code Must be same as Product Name \");\n                \t    }\n                \t    \n                \t    var price = r.message.price_list_rate;\n        \t            child.rate = price;\n        \t            frm.refresh_field(\"items\") ;\n        \t            var total = parseFloat(price) * parseFloat(child.qty);\n                \t    child.amount = total;\n                \t    frm.refresh_field(\"items\");\n                \t    \n                \t    \n        \t            \n        \t        }\n        \t    });\n        \t    \n        \t    \n        \t    \n        \t   // child.start_date = [];\n            //     child.end_date = [];\n        \n        \t\n        \t    frappe.call({\n        \t        method:\"frappe.client.get\",\n        \t        args:{\n        \t            doctype:\"Item\",\n        \t            filters:{\n        \t                \"name\":item_code\n        \t            }\n        \t        },\n        \t        callback:function(r){\n        \t            //console.log(r.message);\n        \t            var data = r.message;\n        \t            var renewal = data.renewal_option;\n        \t            var tenure = data.tenure;\n        \t            var months = data.months;\n        \t             var years = data.years;\n        \t             \n        \t            if (renewal === \"Yes\"){\n        \t                var new_date = start_date.split(\"-\");\n        \t                 \n        \t                 var final_year = \"\";\n        \t                if(tenure === \"Years\" && years !== \"0\"){\n        \t                        \n        \t                        final_year = get_year_end_date(new_date, years);\n        \t                        \n                                  \n                                     console.log(final_year);\n                                     \n                                     if(child.new_add === \"Additional\"){\n                                          child.start_date = start_date;\n                                          child.end_date = frm.doc.end_date\n                                          frm.refresh_field(\"items\") ;\n                                     }\n                                     if(child.new_add === \"New\"){\n                                         child.start_date = start_date;\n                                         child.end_date = final_year;\n                                         \n                                         cur_frm.set_value(\"end_date\",final_year);\n                                         cur_frm.set_value(\"start_date\",start_date);\n                                          cur_frm.refresh_field(\"end_date\");\n                                         cur_frm.refresh_field(\"start_date\");\n                                         frm.refresh_field(\"items\") ;\n                                     }\n                                frm.refresh_field(\"items\") ;     \n        \n        \n                                \t                        \n        \t                }\n        \t                if (tenure === \"Months\" && months !==\"0\"){\n        \t                    final_year = get_month_end_date(new_date, months)\n        \t                \n                                console.log(final_year);\n                                \n                                \n                                if(child.new_add === \"Additional\"){\n                                      child.start_date = start_date;\n                                      child.end_date = frm.doc.end_date;\n                                      frm.refresh_field(\"items\") ;\n                                 }\n                                 if(child.new_add === \"New\"){\n                                     child.start_date = start_date;\n                                     child.end_date = final_year;\n                                     \n                                     cur_frm.set_value(\"end_date\",final_year);\n                                     cur_frm.set_value(\"start_date\",start_date);\n                                      frm.refresh_field(\"end_date\");\n                                      frm.refresh_field(\"start_date\");\n                                     frm.refresh_field(\"items\") ;\n                                 }\n                                \n                                frm.refresh_field(\"items\") ;\n                            }\n                                \t                \n        \t           }\n        \t            else{\n        \t               \n                            frappe.msgprint(\"This Product Have No Subscription\")\n        \t            }\n        \t             cur_frm.refresh_field(\"end_date\");\n    \t                cur_frm.refresh_field(\"start_date\");\n    \t                child.item_name = data.item_name;\n    \t                console.log(data)\n    \t                console.log(data.uoms[0].uom)\n    \t                child.description = data.description;\n    \t                child.uom = data.uoms[0].uom;\n    \t                child.conversion_factor = data.uoms[0].conversion_factor;\n    \t               // if(cur_frm.doc.invoice_no === undefined){\n    \t               //     child.invoice_no = \"InV123\"\n    \t               // }\n    \t               // else{\n    \t               //     child.invoice_no = cur_frm.doc.invoice_no\n    \t               // }\n    \t                \n    \t                frm.refresh_field(\"items\") ;\n        \t        }\n        \t    });\n        \t    \n        \t    \n        \n    \t}\t\n    \t\n        \telse{\n        \t    frappe.msgprint(\"Please Select Product Name and Item Code Must be Same.\")\n        \t}\n    // \t}\t\n    // \telse{\n    \t    \n    // \t    frappe.throw(\"Please Select Product Name\")\n    \t    \n    // \t}\n\t},\n\t\n\tbefore_items_remove:function(frm, cdt, cdn){\n\t    console.log(\"remove row\")\n\t},\n\t\n\tstart_date:function(frm,cdt, cdn){\n\t    var child = locals[cdt][cdn];\n\t    \n\t   \n\t    \n\t    \n\t    if (child.item_code !== \"\"  && child.start_date !== undefined){\n\t            var date = child.start_date;\n        \t    console.log(date)\n        \t    frappe.call({\n        \t        method:\"frappe.client.get\",\n        \t        args:{\n        \t            doctype:\"Item\",\n        \t            filters:{\n        \t                \"name\":child.item_code\n        \t            }\n        \t        },\n        \t        callback:function(r){\n        \t            console.log(r.message);\n        \t            var data = r.message;\n        \t            var renewal = data.renewal_option;\n        \t            var tenure = data.tenure;\n        \t            var months = data.months;\n        \t            var years = data.years;\n        \t             \n        \t            var new_date = date.split(\"-\");\n        \t            \n        \t            if (renewal === \"Yes\" && tenure === \"Years\" && years !== \"0\"){\n                    \t    var final_year = get_year_end_date(new_date, years)\n                            //console.log(final_year);\n                            \n                                \n                            if(child.new_add === \"Additional\"){\n                                      \n                                  child.end_date = cur_frm.doc.end_date\n                                  frm.refresh_field(\"items\") ;\n                             }\n                             else{\n                                 \n                                 child.end_date = final_year;\n                                 \n                                 cur_frm.set_value(\"end_date\",final_year);\n                                 cur_frm.set_value(\"start_date\",date);\n                                  cur_frm.refresh_field(\"end_date\");\n                                 cur_frm.refresh_field(\"start_date\");\n                                 frm.refresh_field(\"items\") ;\n                             }\n                             \n    \t                }\n    \t                else if (renewal === \"Yes\" && tenure === \"Months\" && months !==\"0\"){\n    \t                     var final_date = get_month_end_date(new_date, months)\n                            //console.log(final_year);\n                            // child.start_date = start_date;\n                             \n                                \n                            if(child.new_add === \"Additional\"){\n                                    console.log(cur_fr.doc.end_date)  \n                                  child.end_date = cur_frm.doc.end_date\n                                  frm.refresh_field(\"items\") ;\n                             }\n                             else{\n                                 \n                                 child.end_date = final_date;\n                                 \n                                 cur_frm.set_value(\"end_date\",final_date);\n                                 \n                                 cur_frm.set_value(\"start_date\",date);\n                                 cur_frm.refresh_field(\"end_date\");\n                                 cur_frm.refresh_field(\"start_date\");\n                                 \n                             }\n                             frm.refresh_field(\"items\") ;\n    \t                }     \n    \t                else{\n    \t                    //child.end_date = date;\n    \t                    frappe.msgprint(\"This Product Have No Subscription\")\n    \t                }\n    \t                frm.refresh_field(\"items\") ;\n    \t                frm.refresh_field(\"end_date\");\n    \t                frm.refresh_field(\"start_date\");\n        \t                \n        \t       }   \n        \t    });  \n\t    }\t    \n\n\t},\n    rate:function(frm,cdt, cdn) {\n        \n    \tvar data = locals[cdt][cdn];\n    \t\n\t    if(data.rate!== \"\"){\n    \t    console.log(data.rate);\n    \t    var total = parseFloat(data.rate) * parseFloat(data.qty);\n    \t    data.amount = total;\n    \t    frm.refresh_field(\"items\");\n\t        var total_qty = parseFloat(cur_frm.doc.total_quantity) + parseFloat(data.qty)\n    \t    var final_amount =parseFloat(cur_frm.doc.total_amount) + parseFloat(total)\n    \t    frm.refresh_field(\"items\")\n    \t   \n\t    }     \n    \t \n    \n    \n    \t\n    },\n    \n    \n    \n    qty:function(frm,cdt, cdn) {\n        \n    \tvar data = locals[cdt][cdn];\n    \tif(data.qty !== \"\"){\n    \t    console.log(data.qty)\n        \tvar total = parseFloat(data.rate) * parseFloat(data.qty)\n    \t    console.log(total)\n    \t    data.amount = total;\n    \t    var total_qty = parseFloat(cur_frm.doc.total_quantity) + parseFloat(data.qty)\n    \t    var final_amount = parseFloat(cur_frm.doc.total_amount) + parseFloat(total)\n    \t    frm.refresh_field(\"items\")\n    \t    \n    \t    \n    \t\n    \t}\n    \t\n    \n\t   \n\t },\n    \n    \n});\n\nfrappe.ui.form.on('Renewal Item', {\n\titems_add:function(frm) {\n\t\t// your code here\n\t\tif(!frm.is_new()){\n            frappe.throw(__(\"Please Click Additional\"))\n        }\n\t}\n});\n\n\nfrappe.ui.form.on('Renewal Contacts',{\n    user_name:function(frm,cdt, cdn) {\n        \n        \n        var child = locals[cdt][cdn];\n\t\n\t    let person = child.user_name\n\t    \n  \t\tvar name_list = [];\t\t\n\t    if(person !== undefined){\n  \t\t\t\t    //console.log(\"hello\")\n  \t\t\t\t    //console.log(frm.doc.contact_person)\n  \t\t\t\t    frappe.call({\n  \t\t\t\t        method: \"frappe.client.get\",\n              \t\t\targs: {\n              \t\t\t\tdoctype: \"Contact\",\n              \t\t\t\tfilters: {\n              \t\t\t\t\t\"name\": person\n              \t\t\t\t}\n              \t\t\t\t\n              \t\t\t},\n              \t\t\tcallback: function(r){\n              \t\t\t    console.log(frm.doc.contact_list)\n              \t\t\t    //console.log(r);\n              \t\t\t   // if (frm.doc.renewal_contact !== undefined){\n              \t\t\t   //     console.log(\"hello\")\n              \t\t\t   //     console.log(frm.doc.contact_list);\n              \t\t\t   //     frm.doc.contact_list.forEach(function(each){\n                  \t\t// \t        console.log(each.name1);\n                  \t\t// \t        name_list.push(each.name1)\n                  \t\t\t       \n                  \t\t// \t    });\n              \t\t\t   // }\n          \t\t\t    \n              \t\t\t    \n              \t\t\t    \n              \t\t\t    \n              \t\t\t   // if (name_list.includes(r.message.first_name)){\n              \t\t\t   //     //pass\n              \t\t\t   // }\n              \t\t\t   // else{\n              \t\t\t   //     console.log(\"name_list\"+ name_list);\n              \t\t\t        //name_list.push(r.message.first_name);\n              \t\t\t        \n                                \n                                child.mobile_no = r.message.phone;\n                                child.email_id = r.message.email_id;\n                                child.designation = r.message.designation;\n                                cur_frm.refresh_field(\"contact_list\");\n                  \t\t\t    \n                                \n              \t\t\t    //}\n              \t\t\t    \n              \t\t\t    \n  \t\t\t\t\n              \t\t\t}\n  \t\t\t\t    });\n  \t\t\t\t}\n\t}\n});\n\n// function get_contact_list(customer){\n//     console.log(customer)\n//     frappe.call({\n//   \t    method: \"frappe.client.get_list\",\n//   \t\targs: {\n//   \t\t\tdoctype: \"Contact\",\n//   \t\t\tfilters: {\n//   \t\t\t\t\"company_name\": customer\n//   \t\t\t},\n  \t\t\t\n//   \t\t},\n//   \t\tcallback: function(r) {\n//   \t\t    var contacts = r.message;\n//   \t\t    var contact_list = [];\n//   \t\t    for(let i in contacts){\n//   \t\t        //console.log(contacts);\n  \t\t        \n//                 contact_list.push(contacts[i].name);\n               \n//                 //console.log(contact_list)\n  \t\t        \n//   \t\t    }\n  \t\t\t\n//   \t\t\t//set_field_options(\"contact_person\",contact_list);\n//   \t\t\tvar df = frappe.meta.get_docfield(\"Renewal Contacts\",\"user_name\", cur_frm.doc.name);\n//             df.options = contact_list;\n  \t\t\t\n  \t\t\t\n//   \t\t}\n//   \t});\n// }\n\nfunction get_year_end_date(new_date, years){\n    var new_year = \"\";\n    var end_date = \"\";\n    if(new_date[2] == \"01\"){\n    \t                            \n        if(new_date[1] === \"03\" ){\n             new_year = parseInt(new_date[0]) + parseInt(years) ;\n             if (new_year % 100 === 0 ){\n                 if(new_year % 400 === 0){\n                     new_date[2] = \"29\";\n                 } \n                 else{\n                     new_date[2] = \"28\";\n                 }\n             }\n             else if(new_year % 4 === 0){\n                 new_date[2] = \"29\";\n             }\n             else{\n                 new_date[2] = \"28\";\n             }\n             new_date[0] = new_year.toString();\n             new_date[1] = (parseInt(new_date[1]) - 1).toString();\n         }\n         else if(new_date[1] === \"01\" || new_date[1] ===\"02\" || new_date[1] ===\"04\" ||new_date[1] ===\"06\" || new_date[1] ===\"08\" || new_date[1] ===\"09\" ||  new_date[1] ===\"11\"){\n             if (new_date[1] === \"01\"){\n                 new_year = parseInt(new_date[0]) + parseInt(years) - 1 ;\n                \n                 new_date[0] = new_year.toString();\n                 new_date[1] = \"12\";\n             }\n             else{\n                 new_year = parseInt(new_date[0]) + parseInt(years) ;\n                 \n                 new_date[0] = new_year.toString();\n                 new_date[1] = (parseInt(new_date[1]) - 1).toString();\n             }\n             new_date[2] = \"31\";\n         }\n         else if(new_date[1] === \"05\" ||  new_date[1] ===\"07\" ||  new_date[1] ===\"10\" ||  new_date[1] ===\"12\") {\n             new_year = parseInt(new_date[0]) + parseInt(years) ;\n             \n             new_date[0] = new_year.toString();\n             new_date[1] = (parseInt(new_date[1]) - 1).toString();\n             new_date[2] = \"30\";\n             \n         }\n         end_date = new_date.join(\"-\");\n         return end_date;\n         \n     \n   }\n   \n    else{\n        new_year = parseInt(new_date[0]) + parseInt(years) ;\n        new_date[0] = new_year.toString();\n        new_date[2] = (parseInt(new_date[2]) - 1).toString();\n        new_date[1] = parseInt(new_date[1]).toString();\n        end_date = new_date.join(\"-\");\n        return end_date;\n        \n    }  \n}\n\nfunction get_month_end_date(new_date, months){\n    var month_date = []\n   Date.isLeapYear = function (year) { \n        return (((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0)); \n    };\n    \n    Date.getDaysInMonth = function (year, month) {\n        return [31, (Date.isLeapYear(year) ? 29 : 28), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month];\n    };\n    \n    Date.prototype.isLeapYear = function () { \n        return Date.isLeapYear(this.getFullYear()); \n    };\n    \n    Date.prototype.getDaysInMonth = function () { \n        return Date.getDaysInMonth(this.getFullYear(), this.getMonth());\n    };\n    \n    Date.prototype.addMonths = function (value) {\n        var n = this.getDate();\n        //console.log(typeof(value), value)\n        //console.log(n)\n        this.setDate(1);\n        if (value === 1 && n === 1){\n            console.log(\"error\")\n            this.setMonth(this.getMonth());\n            \n            var month = this.getMonth()\n            var year = this.getFullYear()\n            var new_month = \"\"\n            switch(month){\n            case 1:\n              new_date = Date.isLeapYear(year) ? 29 : 28;\n              break;\n            case 3: case 5: case 8: case 10:\n              new_date = 30;\n              break;\n            default:\n              new_date = 31;\n          }\n          console.log(new_date)\n          this.setDate(Math.min(new_date, this.getDaysInMonth()));\n          return this;\n        }\n        \n        else{\n            this.setMonth(this.getMonth() + value);\n            var new_value = this.getDaysInMonth()\n            console.log(\"new_value:\" + typeof(new_value))\n            this.setDate(Math.min(n-1, this.getDaysInMonth()));\n            return this;\n        }\n        \n    };\n    var myDate = new Date(new_date);\n    var result1 = myDate.addMonths(parseInt(months));\n    // console.log(result1)\n    \n    month_date.push(result1.getFullYear());\n    month_date.push(result1.getMonth()+ 1);\n    month_date.push(result1.getDate());\n    \n    var final_year = month_date.join(\"-\");\n    \n    return final_year;\n}\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customize Form",
  "enabled": 1,
  "modified": "2023-03-26 13:48:27.408369",
  "module": "Renewal Module",
  "name": "Customize Form-Form",
  "script": "frappe.ui.form.on('Customize Form', {\n\trefresh: function(frm) {\n        cur_frm.fields_dict.fields.grid.grid_pagination.page_length = 250;\n        cur_frm.refresh_fields('fields');\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "DocType",
  "enabled": 1,
  "modified": "2023-03-26 13:47:54.289221",
  "module": "Renewal Module",
  "name": "DocType-Form",
  "script": "frappe.ui.form.on('DocType', {\n\trefresh: function(frm) {\n        cur_frm.fields_dict.fields.grid.grid_pagination.page_length = 250\n        cur_frm.refresh_fields('fields')\n    }\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Issue",
  "enabled": 1,
  "modified": "2024-01-31 18:16:06.714473",
  "module": "Renewal Module",
  "name": "Issue-Form",
  "script": "frappe.ui.form.on('Issue', {\n    \n\tcustomer:function(frm){\n\t    var customer = frm.doc.customer;\n\t    //console.log(customer);\n\t    //console.log(frappe.session.user);\n\t    \n\t    cur_frm.doc.issue_contact_list = [];\n\t    cur_frm.refresh_field(\"issue_contact_list\");\n  \t\n  \t\tfrappe.call({\n\t        method:\"frappe.client.get\",\n\t        args:{\n\t            doctype: \"Customer\",\n\t            filters: {\n\t                \"customer_name\": customer\n\t            }\n\t        },\n\t        callback: function(r){\n\t            console.log(r.message.sales_person);\n\t            cur_frm.set_value(\"sales_person\", r.message.account_manager);\n\t        }\n\t    });\n  \t\t\n  \t\t//get_options_list(customer);\n  \t\t\n  \t\tif(customer !== undefined){\n  \t\t    frm.set_query(\"user_name\",\"issue_contact_list\",function(doc,cdt,cdn){\n              return{\n                  filters:{\n                      company_name: frm.doc.customer\n                  }\n              }\n          })\n          \n          \n          \n  \t\t}\n  \t\n  \t\t\n  \t\t\n  \t\t\n  \t\tfrappe.call({\n  \t\t    method: \"frappe.client.get_list\",\n  \t\t    \n  \t\t\targs: {\n  \t\t\t\tdoctype: \"Renewal List\",\n  \t\t\t\tfields:[\"product_name\"],\n  \t\t\t\tfilters: [\n  \t\t\t\t    [\"Renewal List\", \"customer_name\", \"=\", cur_frm.doc.customer],\n  \t\t\t\t    [\"Renewal List\", \"status\",\"in\", ['Active','Cofed']],\n  \t\t\t\t    \n  \t\t\t\t    ],\n  \t\t\t\t\n  \t\t\t},\n  \t\t\tcallback: function(r) {\n  \t\t\t    var data = r.message;\n  \t\t\t    \n  \t\t\t    //console.log(r);\n  \t\t\t   \n  \t\t\t    var active_items = [];\n  \t\t\t    data.forEach(function(item){\n  \t\t\t        //console.log(\"item \"+item.product_name)\n  \t\t\t        if (active_items.includes(item.product_name)) {\n                      //pass\n                    }\n                    else{\n                       active_items.push(item.product_name);\n                    }\n                  \n                  \n                 \n  \t\t\t    });\n  \t\t\t    console.log(\"d\"+active_items);\n  \t\t\t    set_field_options(\"active_subscription\",active_items);\n  \t\t\t    \n  \t\t\t    \n            }\n                \n  \t\t\t\n  \t\t});\n\t   \n\t},\n\trefresh:function(frm){\n\t    if(frm.doc.customer!== undefined){\n\t        //get_options_list(frm.doc.customer);\n\t        \n\t        frm.set_query(\"user_name\",\"issue_contact_list\",function(doc,cdt,cdn){\n              return{\n                  filters:{\n                      company_name: frm.doc.customer\n                  }\n              }\n          })\n          \n          \n            \tfrappe.call({\n          \t\t    method: \"frappe.client.get_list\",\n          \t\t    \n          \t\t\targs: {\n          \t\t\t\tdoctype: \"Renewal List\",\n          \t\t\t\tfields:[\"product_name\"],\n          \t\t\t\tfilters: [\n  \t\t\t\t    [\"Renewal List\", \"customer_name\", \"=\", cur_frm.doc.customer],\n  \t\t\t\t    [\"Renewal List\", \"status\",\"in\", ['Active','Cofed']],\n  \t\t\t\t    \n  \t\t\t\t    ],\n          \t\t\t\t\n          \t\t\t},\n          \t\t\tcallback: function(r) {\n          \t\t\t    var data = r.message;\n          \t\t\t    \n          \t\t\t    //console.log(r);\n          \t\t\t   \n          \t\t\t    var active_items = [];\n          \t\t\t    data.forEach(function(item){\n          \t\t\t        //console.log(\"item \"+item.product_name)\n          \t\t\t        if (active_items.includes(item.product_name)) {\n                              //pass\n                            }\n                            else{\n                               active_items.push(item.product_name);\n                            }\n                          \n                          \n                         \n          \t\t\t    });\n          \t\t\t    console.log(\"d\"+active_items);\n          \t\t\t    set_field_options(\"active_subscription\",active_items);\n          \t\t\t    \n          \t\t\t    \n                    }\n                        \n          \t\t\t\n          \t\t});\n\t    }\n\t},\n\t\n\n\t\n\tactive_subscription:function(frm){\n\t    let item_name = frm.doc.active_subscription;\n\t    if(item_name !== undefined){\n\t        frappe.call({\n\t            method: \"frappe.client.get\",\n  \t\t    \n      \t\t\targs: {\n      \t\t\t\tdoctype: \"Renewal List\",\n      \t\t\t\t\n      \t\t\t\tfilters: [\n          \t\t\t\t    [\"Renewal List\", \"customer_name\", \"=\", cur_frm.doc.customer],\n          \t\t\t\t    [\"Renewal List\", \"product_name\", \"=\", item_name],\n          \t\t\t\t    [\"Renewal List\", \"status\", \"in\", [\"Active\",\"Cofed\"]],\n          \t\t\t\t    \n          \t\t\t\t],\n      \t\t\t},\n      \t\t\tcallback: function(r){\n      \t\t\t    //console.log(r.message)\n      \t\t\t    active_renewals(r.message.name);\n      \t\t\t}\n\t        });\n\t    }\n\t},\n\tonload: function(frm) {\n\n        frm.get_field('active_renewals').grid.cannot_add_rows = true;\n        \n    }, \n});\n\n\nfrappe.ui.form.on('Issue Contact List', {\n    \n\tuser_name:function(frm, cdt, cdn){\n\t    var child = locals[cdt][cdn];\n\t    let person = child.user_name;\n\t    console.log(person);\n\t    console.log(\"hello\");\n  \t\tvar name_list = [];\t\t\n\t    if(person !== undefined && cur_frm.doc.customer !== undefined){\n  \t\t\t\t    \n  \t\t    frappe.call({\n  \t\t        method: \"frappe.client.get\",\n      \t\t\targs: {\n      \t\t\t\tdoctype: \"Contact\",\n      \t\t\t\tfilters: {\n      \t\t\t\t\t\"name\": person\n      \t\t\t\t}\n      \t\t\t\t\n      \t\t\t},\n      \t\t\tcallback: function(r){\n      \t\t\t    //console.log(r.message);\n      \t\t\t    var data = r.message;\n      \t\t\t    \n      \t\t\t    child.mobile_no = data.phone;\n      \t\t\t    child.email_id = data.email_id;\n      \t\t\t    child.designation = data.designation;\n      \t\t\t    cur_frm.refresh_field(\"issue_contact_list\");\n      \t\t\t}\n      \t\t\t\n  \t\t    });\n  \t\t}\n\t},\n});\n\n// function get_options_list(customer){\n//     frappe.call({\n//   \t    method: \"frappe.client.get_list\",\n//   \t\targs: {\n//   \t\t\tdoctype: \"Contact\",\n//   \t\t\tfilters: {\n//   \t\t\t\t\"company_name\": customer\n//   \t\t\t},\n  \t\t\t\n//   \t\t},\n//   \t\tcallback: function(r) {\n//   \t\t    var contacts = r.message;\n//   \t\t    var contact_list = [];\n//   \t\t    for(let i in contacts){\n  \t\t        \n//                 contact_list.push(contacts[i].name);\n  \t\t        \n//   \t\t    }\n  \t\t\t\n  \t\t\t\n//   \t\t\tvar df = frappe.meta.get_docfield(\"Issue Contact List\",\"person_name\", cur_frm.doc.name);\n//             df.options = contact_list;\n  \t\t\t\n  \t\t\t\n//   \t\t}\n//   \t});\n// }\n\n\n\n\n\n\nfunction active_renewals(name){\n    cur_frm.doc.active_renewals = [];\n    frappe.call({\n        method: \"frappe.client.get\",\n        args:{\n            doctype: \"Renewal List\",\n      \t\tfilters: {\n      \t\t\t\"name\": name\n      \t\t\n      \t\t}\n          \n          },\n         \n          callback:function(res){\n              //console.log(res)\n              \n              var item = res.message;\n              var child = cur_frm.add_child(\"active_renewals\");\n              child.item = item.product_name;\n              child.end_date = item.end_date;\n              child.quantity = item.total_quantity;\n              cur_frm.refresh_field(\"active_renewals\");\n          }\n    });\n}\n\n\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Contact",
  "enabled": 1,
  "modified": "2023-03-29 15:07:49.585310",
  "module": "Renewal Module",
  "name": "Contact-Form",
  "script": "frappe.ui.form.on('Contact', {\n\trefresh(frm) {\n\t\t// your code here\n\t\tconsole.log(frm.doc);\n\t\tconsole.log(frm.doc.links[0]);\n\t\tif (frm.doc.links[0].link_name !== \"\"){\n\t\t    var name = frm.doc.links[0].link_name;\n\t\t    cur_frm.set_value(\"company_name\",name);\n\t\t    cur_frm.refresh_field(\"company_name\");\n\t\t}\n\t\t\n\t\t\n\t\t\n        let email_user= \"\" ;\n\t\tif ( frm.doc.__islocal ){\n\t\t    email_user=frappe.user_info().email;\n            console.log(email_user);\n            cur_frm.set_value('user',email_user);\n    \t\tcur_frm.refresh_fields(\"user\");\n\t\t}\n\t\t\n\t\tcur_frm.set_value('status',\"Open\");\n    \tcur_frm.refresh_fields(\"status\");\n\t\t\n\t},\n// \tzone:function(frm){\n// \t    let zone = frm.doc.zone;\n// \t    let states = \"\";\n// \t    if(zone === \"East Zone\"){\n// \t        states = \"Bihar\\n\\Sikkim\\n\\Arunachal Pradesh\\n\\Nagaland\\n\\Manipur\\n\\Mizoram\\n\\Tripura\\n\\Meghalaya\\n\\Assam\\n\\West Bengal\\n\\Jharkhand\\n\\Odisha\\n\\Chhattisgarh\";\n// \t        cur_frm.set_value(\"states_list\",states);\n// \t        cur_frm.refresh_field(\"states_list\");\n// \t    }\n// \t    if(zone === \"West Zone\"){\n// \t        states = \"Rajasthan\\n\\Madhya Pradesh\\n\\Gujarat\\n\\Maharashtra\\n\\Goa\";\n// \t        cur_frm.set_value(\"states_list\",states);\n// \t        cur_frm.refresh_field(\"states_list\");\n// \t    }\n// \t    if(zone === \"South Zone\"){\n// \t        states = \"Andhra Pradesh\\n\\Karnataka\\n\\Lakshadweep\\n\\Kerala\\n\\Tamil Nadu\";\n// \t        cur_frm.set_value(\"states_list\",states);\n// \t        cur_frm.refresh_field(\"states_list\");\n// \t    }\n// \t    if(zone === \"North Zone\"){\n// \t        states = \"Jammu & Kashmir\\n\\Himachal Pradesh\\n\\Punjab\\n\\Chandigarh\\n\\Uttarakhand\\n\\Haryana\\n\\Delhi\\n\\Uttar Pradesh\";\n// \t        cur_frm.set_value(\"states_list\",states);\n// \t        cur_frm.refresh_field(\"states_list\");\n// \t    }\n// \t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Address",
  "enabled": 1,
  "modified": "2023-03-26 13:46:25.679523",
  "module": "Renewal Module",
  "name": "Address-Form",
  "script": "frappe.ui.form.on('Address', {\n\tstate:function(frm){\n\t    if(frm.doc.state !== undefined){\n\t        //console.log(frm.doc.links[0].link_name);\n\t        frm.doc.tax_category = \"\";\n\t        //console.log(frm.doc.state);\n\t        cur_frm.set_value(\"gst_state\", frm.doc.state);\n\t        cur_frm.refresh_field(\"gst_state\");\n\t        \n\t        var state = frm.doc.state;\n\t        \n\t        if(frm.doc.links[0].link_name !== \"\"){\n\t            console.log(\"hello\")\n\t            var customer = frm.doc.links[0].link_name;\n\t            frappe.model.get_value(\"Customer\",{'customer_name':customer},'gst_category',function(s){\n      \t\t\t   //console.log(s);\n      \t\t\t   \n      \t\t\t   \n      \t\t\t       frappe.call({\n        \t\t        method: \"frappe.client.get_list\",\n              \t\t\targs: {\n              \t\t\t\tdoctype: \"Company\"\n              \t\t\t\t\n              \t\t\t\t\n              \t\t\t},\n              \t\t\tcallback: function(r){\n              \t\t\t    //console.log(r.message);\n              \t\t\t    var state_list = [];\n              \t\t\t    \n              \t\t\t        var i = 0;\n              \t\t\t    r.message.forEach(function(each){\n              \t\t\t        var company = each.name + \"-Billing\";\n              \t\t\t        console.log(company);\n              \t\t\t        //var company_state = get_state(company)\n              \t\t\t        frappe.model.get_value('Address',{'name':company},'state',function(d){\n              \t\t\t            console.log(d)\n              \t\t\t            console.log(typeof(d.state));\n              \t\t\t            console.log(typeof(frm.doc.state));\n              \t\t\t            \n              \t\t\t             i = i + 1;\n              \t\t\t             \n              \t\t\t            \n              \t\t\t            \n              \t\t\t            if(d.state == frm.doc.state){\n              \t\t\t                console.log(\"hello hey\")\n              \t\t\t                var list_a = each.name.split(\" - \");\n                                            console.log(list_a);\n                                            state_list.push(d.state);\n                                            var tax_category = \"\";\n              \t\t\t                if(s.gst_category === \"SEZ\" || s.gst_category === \"Overseas\"){\n              \t\t\t                    tax_category = \"Out-State-No-Tax- \" + list_a[1];\n      \t\t\t                        }\n      \t\t\t                        else{\n      \t\t\t                            \n                                            \n                                            tax_category = \"In-State - \" + list_a[1];\n                                            \n      \t\t\t                        }    \n      \t\t\t                        cur_frm.set_value(\"tax_category\",tax_category);\n                                        cur_frm.refresh_fields(\"tax_category\");\n                                        \n                                    }\n                                    else if (i === parseInt(r.message.length) && state_list.length === 0){\n                                        console.log(\"error\");\n                                        //list_of_gst_states(\"64 Network Security - TG\",\"Telangana\")\n                                        var tax_category1 = \"\";\n                                        if(s.gst_category === \"SEZ\" || s.gst_category === \"Overseas\"){\n              \t\t\t                    tax_category1 = \"Out-State-No-Tax - TG\" ;\n      \t\t\t                        }\n      \t\t\t                        else{\n      \t\t\t                            tax_category1 = \"Out-State - \" + \"TG\";\n      \t\t\t                        }\n                                        \n                                        cur_frm.set_value(\"tax_category\",tax_category1);\n                                        cur_frm.refresh_fields(\"tax_category\");\n                                    }\n              \t\t\t        });\n              \t\t\t        \n              \t\t\t        \n              \t\t\t    });\n              \t\t\t    \n              \t\t\t    \n              \t\t\t}\n        \t        \n        \t        });\n      \t\t\t  \n      \t\t\t   \n\t            \n\t            });\n\t        }\n\t    }\n\t}\n\t\n\t\n\t\n});\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Opportunity",
  "enabled": 1,
  "modified": "2023-06-12 12:24:58.320972",
  "module": "Renewal Module",
  "name": "Opportunity-Form",
  "script": "frappe.ui.form.on('Opportunity', {\n\trefresh(frm) {\n\n\n\t\tif(frm.doc.party_name !== undefined){\n\t\t    \n\t\t    //get_contact_person(frm.doc.party_name);\n\t\t    \n\t\t    \n\t\t    var start_date = frappe.datetime.get_today();\n\t\t   frm.fields_dict[\"items\"].grid.add_custom_button(__('Additional'),function() {\n    \t\t\t    \n    \t\t\t    new frappe.ui.form.MultiSelectDialog({\n                        doctype: \"Renewal List\",\n                        \n                        target: this.cur_frm,\n                        \n                        setters: {\n                            product_name: null,\n                            status: 'Active',\n                            end_date:null\n                           \n                           \n                        },\n                        add_filters_group: 1,\n                        \n                        child_fieldname: \"items\",\n                        child_columns: [\"item_name\",\"item_code\", \"service_end_date\"],\n                        get_query() {\n                           \n                            return {\n                              filters: {\n                                  \"customer_name\": ['=', frm.doc.party_name],\n                                  docstatus: ['!=', 2]\n                                 \n                              }\n                            }\n                            \n                        },\n                        action(selections, args) {\n                            //console.log(args); // list of selected item names\n                            console.log(\"Selections \"+ selections);\n                            //console.log(len(child))\n                            var items = [];\n                            \n                            $.each(selections,function(i, d){\n                                \n                                var child = frm.add_child('items');\n                                console.log(\"d \"+d);\n                                frappe.call({\n                                    method:\"frappe.client.get\",\n                                    args:{\n                                        doctype:\"Renewal List\",\n                                        filters:{\n                                            \"name\":d\n                                        }\n                                    },\n                                    callback:function(res){\n                                        console.log(res.message);\n                                        var data = res.message;\n                                        var item_data = data.items[0];\n                                        //console.log(item_data);\n                                        var end_date = res.message.end_date;\n                                        console.log(\"items\"+frm.doc.items);\n                                        var item_list = frm.doc.items;\n                                        console.log(item_list);\n                                        if (start_date < end_date){\n                                            $.each(item_list,function(i, d){\n                                                console.log(\"r\"+ d);\n                                            });\n                                            \n                                            child.item_code = item_data.item_code;\n                                            \n                                            child.item_name = item_data.item_name;\n                                            child.end_date = end_date;\n                                            \n                                            child.opportunity_type =  \"Additional\";\n                                            \n                                            //getting price\n                                            getting_item_price(child);\n                                            child.renewal_id = d;\n                                            \n                                            child.uom = item_data.uom;\n                                            \n                                            \n                                            child.description = item_data.description;\n                                            cur_frm.refresh_field(\"items\");\n                                            \n                                        }\n                                        \n                                        cur_frm.refresh_field(\"items\");\n                                         \n                                    }\n                                });\n                            });\n                            \n                        }\n                    });\n    \t\t\t    \n            });\n            frm.fields_dict[\"items\"].grid.grid_buttons.find('.btn-custom').removeClass('btn-default').addClass('btn-primary');\n          \n          \n          frm.fields_dict[\"items\"].grid.add_custom_button(__('Renewal'),function(){\n\t\t      \n\t\t      new frappe.ui.form.MultiSelectDialog({\n                        doctype: \"Renewal List\",\n                        \n                        target: this.cur_frm,\n                        \n                        setters: {\n                            product_name: null,\n                            status: 'Active',\n                            end_date:null\n                           \n                           \n                        },\n                        add_filters_group: 1,\n                        \n                        child_fieldname: \"items\",\n                        child_columns: [\"item_name\",\"item_code\", \"service_end_date\"],\n                        get_query() {\n                           \n                            return {\n                              filters: {\n                                  \"customer_name\": ['=', frm.doc.party_name],\n                                  docstatus: ['!=', 2]\n                                 \n                              }\n                            }\n                            \n                        },\n                        action(selections, args) {\n                            console.log(args); // list of selected item names\n                            console.log(\"Selections \"+ selections);\n                            //console.log(len(child))\n                            var items = [];\n                            \n                            $.each(selections,function(i, d){\n                                \n                                var child = frm.add_child('items');\n                                console.log(\"d \"+d);\n                                frappe.call({\n                                    method:\"frappe.client.get\",\n                                    args:{\n                                        doctype: \"Renewal List\",\n                                        \"name\":d\n                                        \n                                    },\n                                    callback:function(res){\n                                        console.log(res.message);\n                                        var data = res.message;\n                                        var item_data = data.items[0];\n                                        console.log(item_data);\n                                        var end_date = res.message.end_date;\n                                        console.log(\"items\"+frm.doc.items);\n                                        var item_list = frm.doc.items;\n                                        console.log(item_list);\n                                        //if (start_date < end_date){\n                                            $.each(item_list,function(i, d){\n                                                console.log(\"r\"+ d);\n                                            });\n                                            \n                                            child.item_code = item_data.item_code;\n                                            child.qty = res.message.total_quantity;\n                                            child.item_name = item_data.item_name;\n                                            child.expected_date = end_date;\n                                            \n                                            child.opportunity_type = \"Renewal\";\n                                            \n                                            //getting price\n                                            getting_item_price(child);\n                                            \n                                            child.uom = item_data.uom;\n                                            child.renewal_id = d;\n                                            \n                                            child.description = item_data.description;\n                                            frm.refresh_field(\"items\");\n                                                \n                                                \n                                                \n                                                \n                                             \n                                            \n                                        //}\n                                        \n                                        frm.refresh_field(\"items\");\n                                         \n                                    }\n                                });\n                            });\n                            \n                        }\n                    });\n\t\t \n\t        });\n           frm.fields_dict[\"items\"].grid.grid_buttons.find('.btn-custom').removeClass('btn-default').addClass('btn-primary');\n          \n       \n          \n          \n          frm.set_query(\"user_name\",\"contact_list\",function(doc,cdt,cdn){\n              return{\n                  filters:{\n                      company_name: frm.doc.party_name\n                  }\n              }\n          })\n          \n          \n\t\t}\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t//let creator= \"\" ;\n        let name_of_team =\"\";\n        let email_user= \"\" ;\n\t\t   \n\t\tif ( frm.doc.__islocal ){\n\t\t    console.log(\"hello\");\n\t\t    email_user=frappe.user_info().email;\n            frappe.model.get_value('Employee',{'user_id':email_user},['employee_name','cell_number'],function(d){\n                frappe.model.get_value('Sales Person',{'employee':d.name},['parent_sales_person'],function(s){\n                \n                    name_of_team = s.parent_sales_person;\n                    console.log(name_of_team);\n                    console.log(d)\n                    cur_frm.set_value('team_name',name_of_team);\n            \t\tcur_frm.refresh_fields(\"team_name\");\n            \t\tcur_frm.set_value(\"sales_person\", d.employee_name);\n            \t\tcur_frm.refresh_fields(\"sales_person\");\n            \t\tcur_frm.set_value(\"opportunity_owner\",email_user)\n            \t\tcur_frm.refresh_fields(\"opportunity_owner\")\n            \t\n            \t\t\n            \t\tfrm.doc.sales_team = [];\n            \t\tvar child = frm.add_child(\"sales_team\");\n            \t\tchild.sales_person = d.employee_name;\n            \t\tchild.team_name = name_of_team;\n            \t\tchild.mobile_no = d.cell_number;\n                    child.email_id = email_user;\n            \t\tchild.allocated_percentage = 100;\n            \t\tfrm.refresh_field('sales_team');\n                });\n            });\n\t\t}\n\t\telse{\n\t\t    console.log(frm.doc.sales_team[0].sales_person);\n            var user = frm.doc.sales_team[0].sales_person;\n            console.log(frm.doc.sales_person);\n            console.log(frm.doc.team_name);\n\t\t}\n\t\t\n    },\n    \n    party_name:function(frm){\n        console.log(\"i am  in party name\");\n        if(frm.doc.party_name !== undefined){\n            frm.doc.contact_list = [];\n            //get_contact_person(frm.doc.party_name);\n            \n            \n    //         setTimeout(function() {\n    // \t\t    frappe.call({\n    // \t\t        method: \"frappe.client.get\",\n    //       \t\t\targs: {\n    //       \t\t\t\tdoctype: \"Customer\",\n    //       \t\t\t\tfilters: {\n    //       \t\t\t\t\t\"customer_name\": frm.doc.party_name\n          \t\t\t\t\t\n    //       \t\t\t\t},\n          \t\t\t\t\n    //       \t\t\t},\n    //       \t\t\tcallback: function(r){\n    //       \t\t\t    console.log(r.message);\n    //       \t\t\t    //console.log(frm.doc)\n    //       \t\t\t    var gst_category = r.message.gst_category;\n    //       \t\t\t    console.log(gst_category);\n          \t\t\t   \n          \t\t\t        \n    //           \t\t\t    var data = r.message;\n    //           \t\t\t    var company = data.accounts[0].company;\n    //           \t\t\t    var address = company + \"-Billing\";\n    //           \t\t\t    console.log(company);\n    //           \t\t\t   // cur_frm.set_value(\"tax_category\",r.message.tax_category);\n    //           \t\t\t   // cur_frm.refresh_field(\"tax_category\");\n    //           \t\t\t    cur_frm.set_value(\"company\",company);\n    //           \t\t\t    cur_frm.refresh_field(\"company\");\n    //           \t\t\t    cur_frm.set_value(\"company_address\",address);\n    //           \t\t\t    cur_frm.refresh_field(\"company_address\");\n    //           \t\t\t   // cur_frm.set_value(\"gst_treatment\",data.gst_category);\n    //           \t\t\t   // cur_frm.refresh_field(\"gst_treatment\");\n              \t\t\t    \n    //           \t\t\t    setTimeout(function() {\n    //           \t\t\t        console.log(frm.doc.company_gst)\n    //                           \tif(frm.doc.company_address === \"64 Network Security - TN-Billing\"){\n    //                 \t\t        cur_frm.set_value(\"tc_name\",\"TN - Terms and Conditions\");\n    //                 \t\t        cur_frm.refresh_field(\"tc_name\");\n    //                 \t\t    }\n    //                 \t\t    else{\n    //                 \t\t        cur_frm.set_value(\"tc_name\",\"Standard_Terms and Conditions\");\n    //                 \t\t        cur_frm.refresh_field(\"tc_name\");\n    //                 \t\t    }\n                \t\t    \n    //                       \t}, 2000);    \n\t\t    \n          \t\t\t     \n          \t\t\t    \n    //       \t\t\t}\n    // \t\t    });\n    \t\t    \n\t\t  //  }, 2000);  \n        }\n        \n    },\n    \n   \n\t\n\tsales_stage: function(frm){\n\t    \n\t    let sales_stages = {\n            \"Prospecting\": 20,\n            \"Qualification\": 30,\n            \"Need Analysis\":40,\n            \"Proposal Sent\":60,\n            \"Negotiation/Review\": 80,\n            \"Closed Won\" : 100,\n            \"Closed Lost\": 0,\n            \"Dead\":0\n        }\n        \n        \n\t    \n\t    if(frm.doc.sales_stage !== undefined){\n\t       Object.entries(sales_stages).forEach(k => {\n\t           \n\t           if(frm.doc.sales_stage == k[0]){\n\t               \n\t               frm.set_value(\"probability\",k[1]);\n\t               frm.refresh_field(\"probability\");\n\t           }\n\t        \n\t       }); \n\t    }\n\t    \n\t    if(frm.doc.sales_stage === \"Closed Lost\"){\n\t        \n\t        let d = new frappe.ui.Dialog({\n                title: 'Enter details',\n                fields: [\n                    {\n                        label: 'Lost Reason',\n                        fieldname: 'lost_reason',\n                        fieldtype: 'Data'\n                    }\n                    // {\n                    //     label: 'Detailed Reason',\n                    //     fieldname: 'detailed_reason',\n                    //     fieldtype: 'Small Text'\n                    // }\n                ],\n                primary_action_label: 'Submit',\n                primary_action(values) {\n                    console.log(values);\n                    \n                    d.hide();\n                    cur_frm.set_value(\"opp_lost_reason\",values.lost_reason);\n                    //cur_frm.set_value(\"detailed_reason\",values.detailed_reason);\n                    cur_frm.refresh_field(\"opp_lost_reason\");\n                    //cur_frm.refresh_field(\"detailed_reason\");\n                    \n                }\n            });\n            \n            d.show();\n\t    }\n\t    \n\t},\n\t\n\tbefore_save:function(frm){\n        var amount = 0;\n        let won_list = []\n        let inc_list = []\n        frm.doc.items.forEach(function(each){\n            console.log(each);\n            \n    \t    console.log(cur_frm.doc.opportunity_amount);\n            \n    \t    if(each.sales_stage === \"Closed Won\" && each.forecast ===\"Include\"){\n    \t        console.log(\"hellooooo\")\n    \t        won_list.push(each.amount)\n    \t       // amount = amount + parseInt(each.amount);\n        \t    \n    \t    }\n    \t    else if(each.forecast ===\"Include\" && each.sales_stage !== \"Closed Won\"){\n    \t        console.log(\"HIHIHI\")\n    \t        inc_list.push(each.amount)\n    \t       // amount = amount + parseInt(each.amount);\n    \t    }\n    \t   // cur_frm.set_value(\"opportunity_amount\", amount);\n        \t    \n        // \tcur_frm.refresh_field(\"opportunity_amount\");\n        });\n        if(won_list.length == 0){\n            console.log(\"entered\")\n            inc_list.forEach(function(each){\n                console.log(each)\n                amount = amount + parseFloat(each)\n            })\n            \n        }\n        else{\n            won_list.forEach(function(each){\n                console.log(each)\n                amount = amount + parseFloat(each)\n            })\n        }\n        console.log(won_list.length)\n        console.log(inc_list)\n        cur_frm.set_value(\"opportunity_amount\", amount);\n        \t    \n        cur_frm.refresh_field(\"opportunity_amount\");\n        \n    }\n\n});\n\nfrappe.ui.form.on('Opportunity Item', {\n    \n\titem_code:function(frm, cdt, cdn){\n\t    var child = locals[cdt][cdn];\n\t    console.log(child);\n\t    if (child.item_code !== \"\"){\n\t        \n\t        getting_item_price(child);\n\t        \n\t        \t\n        \t    \n\t    }\n\t},\n\t\n\trate:function(frm,cdt, cdn) {\n        \n    \tvar data = locals[cdt][cdn];\n    \t\n\t    if(data.price!== \"\"){\n    \t    console.log(data.rate);\n    \t    var total = parseFloat(data.rate) * parseFloat(data.qty);\n    \t    var rate1 =parseFloat(data.rate)\n    \t    data.amount = total;\n    \t    data.price = rate1;\n    \t    frm.refresh_field(\"items\");\n\t        var total_qty = parseFloat(cur_frm.doc.total_quantity) + parseFloat(data.qty);\n    \t    var final_amount = parseFloat(cur_frm.doc.total_amount) + parseFloat(total);\n    \t    frm.refresh_field(\"items\")\n    \t  \n    \t    \n\t    } \n    \t\n    },\n    \n    \n    \n    qty:function(frm,cdt, cdn) {\n        \n    \tvar data = locals[cdt][cdn];\n    \tconsole.log(data)\n    \tif(data.qty !== \"\"){\n    \t    console.log(data.qty);\n        \tvar total = parseFloat(data.rate) * parseFloat(data.qty);\n    \t    console.log(total);\n    \t    data.amount = total;\n    \t    var total_qty = parseFloat(cur_frm.doc.total_quantity) + parseFloat(data.qty);\n    \t    var final_amount = parseFloat(cur_frm.doc.total_amount) + parseFloat(total);\n    \t    frm.refresh_field(\"items\");\n    \t    \n    \t    \n    \t\n    \t}\n    \t\n    \n\t   \n\t },\n\t \n\texpected_date:function(frm,cdt,cdn){\n\t    var data = locals[cdt][cdn];\n\t    if(data.expected_date !== \"\"){\n\t        var date = data.expected_date;\n\t        cur_frm.set_value(\"expected_closing\", date);\n\t        cur_frm.refrsh_field(\"expected_closing\");\n\t    }\n\t} ,\n\t\n\tsales_stage:function(frm,cdt,cdn){\n\t    var data = locals[cdt][cdn];\n\t    console.log(data.sales_stage)\n\t    console.log(frm.doc.items);\n\t    \n\t    let sales_stages = {\n                \"Identifying Decision Makers\": 20,\n                \"Prospecting\":10,\n                \"Qualification\": 30,\n                \"Needs Analysis\":40,\n                \"Proposal/Price Quote\":60,\n                \"Negotiation/Review\": 80,\n                \"Closed Won\" : 100,\n                \"Closed Lost\": 0\n                \n            }\n            \n\t    \n\t     var sales_stage_value = [0]\n\t    cur_frm.doc.items.forEach(function(each){\n            console.log(each);\n            \n            \n    \t   \n    \t    if(frm.doc.sales_stage !== undefined){\n    \t       Object.entries(sales_stages).forEach(k => {\n    \t           \n    \t           if(each.sales_stage == k[0]){\n    \t               console.log(sales_stage_value[0])\n    \t               console.log(k[1])\n    \t               if(parseInt(sales_stage_value[0] )< parseInt(k[1])){\n    \t                   sales_stage_value[0] = k[1]\n    \t                   console.log(\"error\")\n    \t               }\n    \t               \n    \t           }\n    \t        \n    \t       }); \n    \t    }\n    \t    \n            \n    \t    \n        });\n\t    console.log(sales_stage_value);\n\t    \n\t    Object.entries(sales_stages).forEach(k => {\n    \t           \n            if(sales_stage_value == k[1]){\n                cur_frm.set_value(\"sales_stage\",k[0]);\n\t            cur_frm.refresh_field(\"sales_stage\");\n               \n           }\n        \n       }); \n\n\t    \n\t}\n})   \n\nfrappe.ui.form.on('Renewal Contacts',{\n    user_name:function(frm,cdt, cdn) {\n        \n        \n        var child = locals[cdt][cdn];\n\t\n\t    let person = child.user_name\n\t    \n  \t\tvar name_list = [];\t\t\n\t    if(person !== undefined){\n  \t\t\t\t    //console.log(\"hello\")\n  \t\t\t\t    //console.log(frm.doc.contact_person)\n  \t\t\t\t    frappe.call({\n  \t\t\t\t        method: \"frappe.client.get\",\n              \t\t\targs: {\n              \t\t\t\tdoctype: \"Contact\",\n              \t\t\t\tfilters: {\n              \t\t\t\t\t\"name\": person\n              \t\t\t\t}\n              \t\t\t\t\n              \t\t\t},\n              \t\t\tcallback: function(r){\n              \t\t\t    console.log(frm.doc.contact_list)\n              \t\t\t    \n              \t\t\t        \n                                \n                                child.mobile_no = r.message.phone;\n                                child.email_id = r.message.email_id;\n                                child.designation = r.message.designation;\n                                cur_frm.refresh_field(\"contact_list\");\n                  \t\t\t    \n                                \n        \n              \t\t\t}\n  \t\t\t\t    });\n  \t\t\t\t}\n\t}\n});\n\n\n\nfunction getting_item_price(child){\n    frappe.call({\n        method:\"frappe.client.get\",\n        args:{\n            doctype:\"Item Price\",\n            filters:{\n                \"item_code\":child.item_code,\n                \"price_list\":\"Standard Selling\"\n            }\n        },\n        callback:function(r){\n            \n    \t    console.log(r)\n    \t    var price = r.message.price_list_rate;\n    \t    child.price = price;\n    \t    child.rate = price;\n    \t    child.base_rate=price;\n    \t    \n    \t    cur_frm.refresh_fields(\"items\");\n            var total = parseFloat(price) * parseFloat(child.qty);\n            \n    \t    child.amount = total;\n    \t    child.base_amount = total;\n    \t    cur_frm.refresh_field(\"items\");\n    \t    \n    \t    \n        }\n    });\n}",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer Order Form",
  "enabled": 1,
  "modified": "2024-01-29 15:49:35.801696",
  "module": "Renewal Module",
  "name": "Customer Order Form-Form",
  "script": "frappe.ui.form.on('Customer Order Form', {\n\trefresh(frm) {\n\t\t// your code here\n\t\tconsole.log(frm.doc.customer);\n\t\tconsole.log(frm.doc.quotation_id);\n\t\tif(frm.doc.quotation_id !== undefined && frm.doc.__islocal){\n\t\t    let id = frm.doc.quotation_id;\n\t\t    console.log(id);\n\t\t    frappe.call({\n\t\t        method: \"frappe.client.get\",\n      \t\t\targs: {\n      \t\t\t\tdoctype: \"Quotation\",\n      \t\t\t\tfilters: {\n      \t\t\t\t\t\"name\": id\n      \t\t\t\t\t\n      \t\t\t\t},\n      \t\t\t\t\n      \t\t\t},\n      \t\t\tcallback: function(r){\n      \t\t\t    console.log(r.message);\n      \t\t\t    //let data = r.message;\n      \t\t\t    let data = r.message\n      \t\t        frappe.call({\n      \t\t            method: \"frappe.client.get\",\n      \t\t            args: {\n      \t\t                doctype: \"Opportunity\",\n      \t\t                filters: {\n      \t\t                    \"name\": data.opportunity\n      \t\t                }\n      \t\t            },\n      \t\t            callback: function(s){\n      \t\t                if(s.message.sales_stage !== \"Closed Won\"){\n      \t\t                    frappe.throw(\"Please change the Opportunity sales stage\");\n      \t\t                }\n      \t\t                else{\n                  \t\t\t    cur_frm.set_value(\"company_name\",data.company);\n                          \t    cur_frm.refresh_field(\"company_name\");\n                          \t    cur_frm.set_value(\"customer\",data.party_name);\n                          \t    cur_frm.refresh_field(\"customer\");\n                          \t    cur_frm.set_value(\"customer_address\",data.customer_address);\n                          \t    cur_frm.refresh_field(\"customer_address\");\n                          \t    \n                          \t    //get_address(data.customer_address,\"address\");\n                          \t    cur_frm.set_value(\"address\",data.address_display);\n                          \t    cur_frm.refresh_field(\"address\");\n                          \t    cur_frm.set_value(\"shipping_address_name\",data.shipping_address_name);\n                          \t    cur_frm.refresh_field(\"shipping_address_name\");\n                          \t    cur_frm.set_value(\"shipping_address\",data.shipping_address);\n                          \t    cur_frm.refresh_field(\"shipping_address\");\n                          \t    cur_frm.set_value(\"company_address\",data.company_address);\n                          \t    cur_frm.refresh_field(\"company_address\");\n                          \t    cur_frm.set_value(\"company_address_display\",data.company_address_display);\n                          \t    cur_frm.refresh_field(\"company_address_display\");\n                          \t    cur_frm.set_value(\"contact_display\",data.contact_display);\n                          \t    cur_frm.refresh_field(\"contact_dispaly\");\n                          \t    cur_frm.set_value(\"contact_mobile\",data.contact_mobile);\n                          \t    cur_frm.refresh_field(\"contact_mobile\");\n                        //   \t    cur_frm.set_value(\"place_of_supply\",doc.place_of_supply);\n                      \t\t// \tcur_frm.refresh_field(\"place_of_supply\");\n                          \t    \n              \t    \n                          \t    cur_frm.set_value(\"total_quantity\",data.total_qty);\n                          \t    cur_frm.refresh_field(\"total_quantity\");\n                          \t    cur_frm.set_value(\"total\",data.total);\n                          \t    cur_frm.refresh_field(\"total\");\n                          \t    cur_frm.set_value(\"net_total\",data.net_total);\n                          \t    cur_frm.refresh_field(\"net_total\");\n                          \t    cur_frm.set_value(\"base_total\",data.base_total);\n                          \t    cur_frm.refresh_field(\"base_total\");\n                          \t    cur_frm.set_value(\"base_net_total\",data.base_net_total);\n                          \t    cur_frm.refresh_field(\"base_net_total\");\n                          \t    cur_frm.set_value(\"total_net_weight\",data.total_net_weight);\n                          \t    cur_frm.refresh_field(\"total_net_weight\");\n                          \t    cur_frm.set_value(\"rounded_total\",data.rounded_total);\n                          \t    cur_frm.refresh_field(\"rounded_total\");\n                          \t    cur_frm.set_value(\"in_words\",data.in_words);\n                          \t    cur_frm.refresh_field(\"in_words\");\n                          \t    cur_frm.set_value(\"total_taxes_and_charges\",data.total_taxes_and_charges);\n                          \t    cur_frm.refresh_field(\"total_taxes_and_charges\");\n                          \t    \n              \t    \n              \t    \n              \t    \n              \t    \n                          \t    let items = data.items;\n                          \t    frm.doc.items=[]\n                          \t    items.forEach(function(each){\n                          \t        var child = frm.add_child(\"items\");\n                          \t        //console.log(each)\n                          \t        child.actual_qty = each.actual_qty;\n                          \t        child.additional_notes = each.additional_notes;\n                          \t        child.against_blanket_order = each.against_blanket_order;\n                          \t        child.amount = each.amount;\n                          \t        child.base_amount = each.base_amount;\n                          \t        child.base_net_amount = each.base_net_amount;\n                          \t        child.base_net_rate = each.base_net_rate;\n                          \t        child.base_price_list_rate = each.base_price_list_rate;\n                          \t        child.base_rate = each.base_rate;\n                          \t        child.base_rate_with_margin = each.base_rate_with_margin;\n                          \t        child.blanket_order = each.blanket_order;\n                          \t        child.blanket_order_rate = each.blanket_order_rate;\n                          \t        child.brand = each.brand;\n                          \t        child.conversion_factor = each.conversion_factor;\n                          \t        child.customer_item_code = each.customer_item_code;\n                          \t        child.description = each.description;\n                          \t        child.discount_amount = each.discount_amount;\n                          \t        child.discount_percentage = each.discount_percentage;\n                          \t        child.docstatus = each.docstatus;\n                          \t        child.end_date = each.end_date;\n                          \t        child.gross_profit = each.gross_profit;\n                          \t        child.gst_hsn_code = each.gst_hsn_code;\n                          \t        child.image = each.image;\n                          \t        child.item_code = each.item_code;\n                          \t        child.item_group = each.item_group;\n                          \t        child.item_name = each.item_name;\n                          \t        child.is_non_gst = each.is_non_gst;\n                          \t        child.is_nil_exempt = each.is_nil_exempt;\n                          \t        child.is_free_item = each.is_free_item;\n                          \t        child.item_tax_rate = each.item_tax_rate;\n                          \t        child.item_tax_template = each.item_tax_template;\n                          \t        child.margin_rate_or_amount = each.margin_rate_or_amount;\n                          \t        child.margin_type = each.margin_type;\n                          \t        child.net_amount = each.net_amount;\n                          \t        child.net_rate = each.net_rate;\n                          \t        child.qty = each.qty;\n                          \t        child.rate = each.rate;\n                          \t        child.gst_hsn_code = each.gst_hsn_code;\n                          \t        child.opportunity_type = each.renewal_status;\n                          \t        child.start_date = each.start_date;\n                          \t        child.stock_qty = each.stock_qty;\n                          \t        child.stock_uom = each.stock_uom;\n                          \t        child.stock_uom_rate = each.stock_uom_rate;\n                          \t        child.tax_rate = each.tax_rate;\n                          \t        child.total_weight = each.total_weight;\n                          \t        child.uom = each.uom;\n                          \t        child.renewal_id =each.renewal_id;\n                          \t        child.valuation_rate = each.valuation_rate;\n                          \t        child.warehouse = each.warehouse;\n                          \t        child.weight_per_unit = each.weight_per_unit;\n                          \t        child.weight_uom = each.weight_uom;\n                          \t        frm.refresh_field(\"items\");\n                          \t        \n                          \t        \n                          \t        \n                          \t        \n                          \t    })\n              \t    \n              \t    \n                          \t    cur_frm.set_value(\"tax_category\",data.tax_category);\n                          \t    cur_frm.refresh_field(\"tax_category\");\n                          \t    cur_frm.set_value(\"taxes_and_charges\",data.taxes_and_charges);\n                          \t    cur_frm.refresh_field(\"taxes_and_charges\");\n                          \t    \n                          \t    \n                          \t    let taxes = data.taxes;\n                          \t    frm.doc.taxes = [];\n                          \t    taxes.forEach(function(each){\n                          \t        var tax_child = frm.add_child(\"taxes\");\n                          \t        //console.log(each);\n                          \t        tax_child.charge_type = each.charge_type;\n                          \t        tax_child.account_currency = each.account_currency;\n                          \t        tax_child.account_head = each.account_head;\n                          \t        tax_child.base_tax_amount = each.base_tax_amount;\n                          \t        tax_child.base_tax_amount_after_discount_amount = each.base_tax_amount_after_discount_amount;\n                          \t        tax_child.base_total = each.base_total;\n                          \t        tax_child.charge_type = each.charge_type;\n                          \t        tax_child.cost_center = each.cost_center;\n                          \t        tax_child.description = each.description;\n                          \t        tax_child.docstatus = each.docstatus;\n                          \t        tax_child.doctype = each.doctype;\n                          \t        tax_child.dont_recompute_tax = each.dont_recompute_tax;\n                          \t        tax_child.included_in_paid_amount = each.included_in_paid_amount;\n                          \t        tax_child.included_in_print_rate = each.included_in_print_rate;\n                          \t        tax_child.item_wise_tax_detail = each.item_wise_tax_detail;\n                          \t        tax_child.tax_amount = each.tax_amount;\n                          \t        tax_child.tax_amount_after_discount_amount = each.tax_amount_after_discount_amount;\n                          \t        tax_child.total = each.total;\n                          \t        frm.refresh_field(\"taxes\")\n                          \t    });\n                          \t    \n                          \t    cur_frm.set_value(\"grand_total\",data.grand_total);\n                          \t    cur_frm.refresh_field(\"grand_total\");\n                          \t    \n                          \t    let contact_list = data.contact_list;\n                          \t    frm.doc.contact_list = [];\n                          \t    contact_list.forEach(function(each){\n                          \t        var child = frm.add_child(\"contact_list\");\n                          \t        child.user_name = each.user_name;\n                          \t        child.email_id = each.email_id;\n                          \t        child.mobile_no = each.mobile_no;\n                          \t        child.designation = each.designation;\n                          \t        frm.refresh_field(\"contact_list\");\n                          \t    })\n              \t    \n                          \t    let sales_team = data.sales_team;\n                          \t    frm.doc.sales_team = [];\n                          \t    sales_team.forEach(function(each){\n                          \t        var child = frm.add_child(\"sales_team\")\n                          \t        child.sales_person = each.sales_person;\n                          \t        child.allocated_amount = each.allocated_amount;\n                          \t        child.allocated_percentage = each.allocated_percentage;\n                          \t        child.commission_rate = each.commission_rate;\n                          \t        child.contact_no = each.contact_no;\n                          \t        child.docstatus = each.docstatus;\n                          \t        child.mobile_no = each.mobile_no;\n                            \t\tchild.email_id = each.email_id;\n                          \t        child.incentives = each.incentives;\n                          \t        child.team_name = each.team_name;\n                          \t        frm.refresh_field(\"sales_team\")\n                          \t    });\n                          \t    \n                          \t    cur_frm.set_value(\"sales_person\",data.sales_person);\n                          \t    cur_frm.refresh_field(\"sales_person\");\n                          \t     cur_frm.set_value(\"team_name\",data.team_name)\n                          \t    cur_frm.refresh_field(\"team_name\");\n                          \t    \n                          \t    \n                          \t    let payment = data.payment_schedule;\n                          \t    cur_frm.set_value(\"payment_terms_template\",data.payment_terms_template);\n                          \t    cur_frm.refresh_field(\"payment_terms_template\");\n                          \t    frm.doc.payment_schedule = [];\n                          \t    payment.forEach(function(each){\n                          \t        let child = frm.add_child(\"payment_schedule\");\n                          \t        child.base_payment_amount = each.base_payment_amount;\n                          \t        child.description = each.description;\n                          \t        child.discount = each.discount;\n                          \t        child.discount_type = each.discount_type;\n                          \t        child.discounted_amount = each.discounted_amount;\n                          \t        child.due_date = each.due_date;\n                          \t        child.invoice_portion = each.invoice_portion;\n                          \t        child.mode_of_payment = each.mode_of_payment;\n                          \t        child.outstanding = each.outstanding;\n                          \t        child.paid_amount = each.paid_amount;\n                          \t        child.parentfield = each.parentfield;\n                          \t        child.payment_amount = each.payment_amount;\n                          \t        child.payment_term = each.payment_term;\n                          \t        frm.refresh_field(\"payment_schedule\")\n                          \t    })\n                          \t    \n                          \t    cur_frm.set_value(\"tc_name\",data.tc_name)\n                          \t    cur_frm.refresh_field(\"tc_name\");\n                          \t    cur_frm.set_value(\"terms\",data.terms)\n                          \t    cur_frm.refresh_field(\"terms\");\n      \t\t                }  \t\n      \t\t            }\n      \t\t        })    \n              \t    \n      \t\t\t}\n\t\t    });\n\t\t}\n\t\t\n\t\tif(frm.doc.customer !== undefined){\n\t\t    frm.set_query(\"user_name\",\"contact_list\",function(doc,cdt,cdn){\n              return{\n                  filters:{\n                      company_name: frm.doc.customer\n                  }\n              }\n          })\n\t\t}\n\t},\n\t\n\tcustomer: function(frm){\n\t    if(frm.doc.customer !== undefined){\n\t\t    frm.set_query(\"user_name\",\"contact_list\",function(doc,cdt,cdn){\n              return{\n                  filters:{\n                      company_name: frm.doc.customer\n                  }\n              }\n          })\n\t\t}\n\t}\n\t\n\t\n});\n\n// function get_address(address,field_name){\n//     frappe.call({\n//         method: \"frappe.client.get\",\n//   \t\targs: {\n//   \t\t\tdoctype: \"Address\",\n//   \t\t\tfilters: {\n//   \t\t\t\t\"name\": address\n//   \t\t\t},\n  \t\t\t\n//   \t\t},\n//   \t\tcallback: function(r){\n//   \t\t    console.log(r)\n//   \t\t}\n//     });\n// }\n\n\n\nfrappe.ui.form.on('Renewal Contacts',{\n    user_name:function(frm,cdt, cdn) {\n        \n        \n        var child = locals[cdt][cdn];\n\t\n\t    let person = child.user_name\n\t    \n  \t\tvar name_list = [];\t\t\n\t    if(person !== undefined){\n  \t\t\t\t    //console.log(\"hello\")\n  \t\t\t\t    //console.log(frm.doc.contact_person)\n  \t\t\t\t    frappe.call({\n  \t\t\t\t        method: \"frappe.client.get\",\n              \t\t\targs: {\n              \t\t\t\tdoctype: \"Contact\",\n              \t\t\t\tfilters: {\n              \t\t\t\t\t\"name\": person\n              \t\t\t\t}\n              \t\t\t\t\n              \t\t\t},\n              \t\t\tcallback: function(r){\n              \t\t\t    console.log(frm.doc.contact_list)\n              \t\t\t    \n              \t\t\t        \n                                \n                                child.mobile_no = r.message.phone;\n                                child.email_id = r.message.email_id;\n                                child.designation = r.message.designation;\n                                cur_frm.refresh_field(\"contact_list\");\n                  \t\t\t    \n                                \n        \n              \t\t\t}\n  \t\t\t\t    });\n  \t\t\t\t}\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2024-02-22 22:34:51.970144",
  "module": "Renewal Module",
  "name": "Quotation-Form",
  "script": "frappe.ui.form.on('Quotation', {\n    \n\tparty_name:function(frm) {\n\t   \n\t\tif(frm.doc.party_name !== undefined){\n\t\t  //  console.log(\"Error Here\");\n\t\t  //  console.log(frm.doc.party_name);\n\t\t    setTimeout(function() {\n    \t\t    frappe.call({\n    \t\t        method: \"frappe.client.get\",\n          \t\t\targs: {\n          \t\t\t\tdoctype: \"Customer\",\n          \t\t\t\tfilters: {\n          \t\t\t\t\t\"name\": frm.doc.party_name\n          \t\t\t\t\t\n          \t\t\t\t},\n          \t\t\t\t\n          \t\t\t},\n          \t\t\tcallback: function(r){\n          \t\t\t    //console.log(r.message);\n          \t\t\t    //console.log(frm.doc)\n          \t\t\t    var gst_category = r.message.gst_category;\n          \t\t\t   // console.log(gst_category);\n          \t\t\t   \n          \t\t\t        \n              \t\t\t    var data = r.message;\n              \t\t\t    var company = data.accounts[0].company;\n              \t\t\t    var address = company + \"-Billing\";\n              \t\t\t   // console.log(company);\n              \t\t\t   // console.log(r.message);\n              \t\t\t   // console.log(\"????\");\n              \t\t\t    cur_frm.set_value(\"tax_category\",r.message.tax_category);\n              \t\t\t    cur_frm.refresh_field(\"tax_category\");\n              \t\t\t    cur_frm.set_value(\"company\",company);\n              \t\t\t    cur_frm.refresh_field(\"company\");\n              \t\t\t    cur_frm.set_value(\"company_address\",address);\n              \t\t\t    cur_frm.refresh_field(\"company_address\");\n              \t\t\t    cur_frm.set_value(\"gst_treatment\",data.gst_category);\n              \t\t\t    cur_frm.refresh_field(\"gst_treatment\");\n              \t\t\t    cur_frm.set_value(\"gst_category\",data.gst_category);\n              \t\t\t    cur_frm.refresh_field(\"gst_category\");\n              \t\t\t    \n              \t\t\t    setTimeout(function() {\n              \t\t\t       // console.log(frm.doc.company_gst);\n                              \tif(frm.doc.company_address === \"64 Network Security - TN-Billing\"){\n                    \t\t        cur_frm.set_value(\"tc_name\",\"TN - Terms and Conditions\");\n                    \t\t        cur_frm.refresh_field(\"tc_name\");\n                    \t\t    }\n                    \t\t    else{\n                    \t\t        cur_frm.set_value(\"tc_name\",\"Standard_Terms and Conditions\");\n                    \t\t        cur_frm.refresh_field(\"tc_name\");\n                    \t\t    }\n                \t\t    \n                          \t}, 2000);    \n\t\t    \n          \t\t\t     \n          \t\t\t    \n          \t\t\t}\n    \t\t    });\n    \t\t    \n\t\t    }, 2000);  \n\t\t    \n\t\t    frm.set_query(\"user_name\",\"contact_list\",function(doc,cdt,cdn){\n              return{\n                  filters:{\n                      company_name: frm.doc.party_name\n                  }\n              }\n          })\n\t\t}\n\t},\n\t\n\trefresh:function(frm){\n\t    if(frm.doc.party_name !== undefined){\n\t\t    var customer_add = frm.doc.party_name+\"-Billing\";\n\t\t    \n\t\t    if ( frm.doc.__islocal ){\n\t\t        setTimeout(function() {\n    \t\t    frappe.call({\n    \t\t        method: \"frappe.client.get\",\n          \t\t\targs: {\n          \t\t\t\tdoctype: \"Customer\",\n          \t\t\t\tfilters: {\n          \t\t\t\t\t\"customer_name\": frm.doc.party_name\n          \t\t\t\t\t\n          \t\t\t\t}\n          \t\t\t\t\n          \t\t\t},\n          \t\t\tcallback: function(r){\n          \t\t\t   // console.log(r.message);\n          \t\t\t    //console.log(frm.doc)\n          \t\t\t    var gst_category = r.message.gst_category;\n          \t\t\t   // console.log(gst_category);\n          \t\t\t   \n          \t\t\t        \n              \t\t\t    var data = r.message;\n              \t\t\t    var company = data.accounts[0].company;\n              \t\t\t    var address = company + \"-Billing\";\n              \t\t\t   // console.log(company);\n              \t\t\t   // console.log(r.message.tax_category);\n              \t\t\t   // cur_frm.set_value(\"tax_category\",r.message.tax_category);\n              \t\t\t   // cur_frm.refresh_field(\"tax_category\");\n              \t\t\t   // cur_frm.set_value(\"company\",company);\n              \t\t\t   // cur_frm.refresh_field(\"company\");\n              \t\t\t    cur_frm.set_value(\"company_address\",address);\n              \t\t\t    cur_frm.refresh_field(\"company_address\");\n              \t\t\t    cur_frm.set_value(\"customer_address\",customer_add);\n              \t\t\t    cur_frm.refresh_field(\"customer_address\");\n              \t\t\t    cur_frm.set_value(\"gst_treatment\",data.gst_category);\n              \t\t\t    cur_frm.refresh_field(\"gst_treatment\");\n              \t\t\t    cur_frm.set_value(\"gst_category\",data.gst_category);\n              \t\t\t    cur_frm.refresh_field(\"gst_category\");\n          \t\t\t     \n          \t\t\t    \n          \t\t\t}\n    \t\t    });\n    \t\t    \n    \t\t    \n\t\t   }, 1000);\n\t\t    }\n\t\t        \n\t\t    \n\t\t    var start_date = frappe.datetime.get_today();\n    \t    //var start_date = frm.doc.start_date;\n    \t    console.log(start_date);\n    \t    \n    \t    \n            \n    \t    if ( frm.doc.__islocal ){\n    \t        setTimeout(function() {\n                frm.doc.taxes = [];\n                if(frm.doc.items.length > 0){\n                frm.doc.items.forEach(function(child){\n                    if(child.item_code !== \"\"){\n                        var start_date = frappe.datetime.get_today();\n                        console.log(frm.doc.opportunity);\n                        frappe.call({\n                            method:\"frappe.client.get\",\n                \t        args:{\n                \t            doctype:\"Opportunity\",\n                \t            filters:{\n                \t                \"name\":frm.doc.opportunity\n                \t            }\n                \t        },\n                \t        callback:function(r){\n                \t            console.log(r);\n                \t            var data = r.message.items;\n                \t            data.forEach(function(each){\n                \t                if(each.item_code === child.item_code && each.description === child.description){\n                \t                    var status = each.opportunity_type;\n                \t                    child.renewal_id = each.renewal_id;\n                \t                    console.log(each.price);\n                \t                    console.log(each.rate);\n                \t                    console.log(each.renewal_id)\n                \t                   \n                                \t    if(child.item_code !== \"\" && frm.doc.party_name !== undefined){\n                                \t   if( frm.doc.party_name !== undefined){\n                                \t        child.rate = each.rate;\n                                \t        child.description = each.description;\n                                \t        cur_frm.refresh_field(\"items\") ;\n                                \t        getting_items_data(child, start_date, status);\n                                \t        \n                                \t       // if(child.item_tax_template !== undefined){\n                                \t       //     console.log(child.item_tax_template.split(\" - \"));\n                                \t       //    // cur_frm.set_value(\"taxes_and_charges\",child.item_tax_template);\n                                        //         // cur_frm.refresh_field(\"taxes_and_charges\");\n                                \t       // var template_tax = child.item_tax_template.split(\" - \");\n                                            \n                                        //     let sales_tax = cur_frm.doc.taxes_and_charges.split(\" - \");\n                                        //     sales_tax[1] = template_tax[3];\n                                        //     var result = sales_tax.join(\" - \");\n                                        //     console.log(cur_frm.doc.taxes_and_charges.split(\"-\"))\n                                        //     console.log(result[0]);\n                                        //     console.log(result);\n                                        //     var gst_igst = sales_tax[0].split(\" \");\n                                        //     console.log(gst_igst)\n                                            \n                                            \n                                        //     if(gst_igst[2] !== template_tax[2] ){\n                                        //         console.log(\"its Enterd\")\n                                        //         gst_igst[2] = template_tax[2];\n                                        //         var final_tax = gst_igst.join(\" \");\n                                        //         sales_tax[0] = final_tax;\n                                        //         var result2 = sales_tax.join(\" - \");\n                                        //         console.log(result2)\n                                        //         cur_frm.set_value(\"taxes_and_charges\",result2);\n                                        //         cur_frm.refresh_field(\"taxes_and_charges\");\n                                        //     }\n                                        //     cur_frm.set_value(\"taxes_and_charges\",result);\n                                        //     cur_frm.refresh_field(\"taxes_and_charges\");\n                                \t       // }\n                                \t       // else{\n                                \t       //     let sales_tax1 = cur_frm.doc.taxes_and_charges.split(\" - \");\n                                \t       //     sales_tax1[1] = child.tax_rate+\"%\";\n                                        //         var result1 = sales_tax1.join(\" - \");\n                                \t       //     cur_frm.set_value(\"taxes_and_charges\",result1);\n                                        //         cur_frm.refresh_field(\"taxes_and_charges\");\n                                \t       // }\n                                \t        \n                                 \t    }\n                \t                    \n                \t                    \n                \t                    \n                 \t                }\n                 \t               }\n                \t            });\n                \t            \n                \t            \n                \t            \n                \t           \n                 \t        }\n                         });\n                        \n    \t\n                     }\n                 });\n             } \n            \n                frappe.call({\n                    method:\"frappe.client.get\",\n        \t        args:{\n        \t            doctype:\"Opportunity\",\n        \t            filters:{\n        \t                \"name\":frm.doc.opportunity\n        \t            }\n        \t        },\n        \t        callback:function(r){\n        \t            frm.doc.contact_list = [];\n        \t            let contact_list = r.message.contact_list;\n                  \t    contact_list.forEach(function(each){\n                  \t        var child = frm.add_child(\"contact_list\");\n                  \t        child.user_name = each.user_name;\n                  \t        child.email_id = each.email_id;\n                  \t        child.mobile_no = each.mobile_no;\n                  \t        child.designation = each.designation;\n                  \t        frm.refresh_field(\"contact_list\");\n                  \t    }) ;\n        \t        }\n                });\n    \t        }, 1000); \n                \n           }\n        \n        \n        \n    \t    \n    \t    \n    \t    \n    \t    \n\t\t    frm.fields_dict[\"items\"].grid.add_custom_button(__('Additional'),function() {\n    \t\t\t   \n    \t\t\t\n                    new frappe.ui.form.MultiSelectDialog({\n                        doctype: \"Renewal List\",\n                        \n                        target: this.cur_frm,\n                        \n                        setters: {\n                            product_name: null,\n                            status: 'Active',\n                            end_date:null\n                           \n                            //customer:customer.toString()\n                        },\n                        add_filters_group: 1,\n                        //date_field: \"transaction_date\",\n                        //allow_child_item_selection: 1,\n                        child_fieldname: \"items\",\n                        child_columns: [\"item_name\",\"item_code\", \"service_end_date\"],\n                        get_query() {\n                           // return query_args;\n                            return {\n                              filters: {\n                                  \"customer_name\": ['=', frm.doc.party_name],\n                                  docstatus: ['!=', 2]\n                                 \n                              }\n                            }\n                            \n                        },\n                        action(selections, args) {\n                            //console.log(args); // list of selected item names\n                            console.log(\"Selections \"+ selections);\n                            //console.log(len(child))\n                            var items = [];\n                            \n                            $.each(selections,function(i, d){\n                                \n                                var child = frm.add_child('items');\n                                console.log(\"d \"+d);\n                                frappe.call({\n                                    method:\"frappe.client.get\",\n                                    args:{\n                                        doctype:\"Renewal List\",\n                                        filters:{\n                                            \"name\":d\n                                        }\n                                    },\n                                    callback:function(res){\n                                        console.log(res.message);\n                                        var data = res.message;\n                                        var item_data = data.items[0];\n                                        //console.log(item_data);\n                                        var end_date = res.message.end_date;\n                                        console.log(\"items\"+frm.doc.items);\n                                        var item_list = frm.doc.items;\n                                        console.log(item_list);\n                                        if (start_date < end_date){\n                                            $.each(item_list,function(i, d){\n                                                console.log(\"r\"+ d);\n                                            });\n                                            if((frm.doc.items).includes(data.product_name)){\n                                                frappe.msgprint({\n                                                    title: __('Notification'),\n                                                    message: __('Added successfully')\n                                                    \n                                                });\n                                                \n                                            }    \n                                            else{\n                                                child.item_code = item_data.item_code;\n                                                child.item_name = item_data.item_name;\n                                                child.end_date = end_date;\n                                                child.start_date = start_date;\n                                                child.renewal_status = \"Additional\";\n                                                \n                                                child.uom = item_data.uom;\n                                                \n                                                child.conversion_factor = data.conversion_factor;\n                                                \n                                                child.description = item_data.description;\n                                                frm.refresh_field(\"items\");\n                                                \n                                                \n                                                \n                                                // to get months difference i wrote like this\n                                                \n                                                var diff = month_diff(new Date(start_date), new Date(end_date) )\n                                                //console.log(\"diff \"+ diff);\n                                                \n                                                //here we have to get price of item\n                                                frappe.model.get_value(\"Item Price\",{\"item_code\":data.product_name,\"price_list\":\"Standard Selling\"},\"price_list_rate\",function(d){\n                                                    //console.log(d.price_list_rate)\n                                                    frappe.call({\n                                                        method:\"frappe.client.get\",\n                                                        args:{\n                                                            doctype:\"Item\",\n                                                            filters:{\n                                                                \"name\":data.product_name,\n                                                                \n                                                            }\n                                                        },\n                                                        callback:function(r){\n                                                            //console.log(r.message);\n                                                            var item_tenure = r.message.years;\n                                                            var rate_amount = \"\";\n                                                            if (r.message.renewal_option === \"Yes\" ){\n                                                                if(r.message.years !== \"0\" ){\n                                                                    console.log(\"you are here\" + diff);\n                                                                    rate_amount = (parseFloat(d.price_list_rate)* parseFloat(diff)) / (parseFloat(r.message.years)*12);\n                                                                    //console.log(parseInt(item_price)* parseInt(diff) * parseInt(r.message.years) * 12)\n                                                                    \n                                                                    \n                                                                }\n                                                                if(r.message.months !== \"0\" ){\n                                                                    console.log(\"you are here\");\n                                                                    rate_amount = (parseFloat(d.price_list_rate)* parseFloat(diff)) / (parseFloat(r.message.months));\n                                                                    \n                                                                }\n                                                                child.rate = rate_amount;\n                                                                child.start_date = start_date;\n                                                                child.income_account = \"Sales - 6S\";\n                                                                frm.refresh_field(\"items\");\n                                                            \n                                                                \n                                                            }\n                                                        \n                                                        }\n                                                    });\n                                                });\n                                            \n                                            }   \n                                            \n                                        }\n                                        \n                                        frm.refresh_field(\"items\");\n                                         \n                                    }\n                                });\n                            });\n                            \n                        }\n                    });\n    \t\t\t\t\n            });\n            frm.fields_dict[\"items\"].grid.grid_buttons.find('.btn-custom').removeClass('btn-default').addClass('btn-primary');\n            \n            \n             frm.fields_dict[\"items\"].grid.add_custom_button(__('Renewal'),function(){\n\t\t      \n\t\t      new frappe.ui.form.MultiSelectDialog({\n                        doctype: \"Renewal List\",\n                        \n                        target: this.cur_frm,\n                        \n                        setters: {\n                            product_name: null,\n                            status: 'Active',\n                            end_date:null\n                           \n                           \n                        },\n                        add_filters_group: 1,\n                        \n                        child_fieldname: \"items\",\n                        child_columns: [\"item_name\",\"item_code\", \"service_end_date\"],\n                        get_query() {\n                           \n                            return {\n                              filters: {\n                                  \"customer_name\": ['=', frm.doc.party_name],\n                                  docstatus: ['!=', 2]\n                                 \n                              }\n                            }\n                            \n                        },\n                        action(selections, args) {\n                            console.log(args); // list of selected item names\n                            console.log(\"Selections \"+ selections);\n                            //console.log(len(child))\n                            var items = [];\n                            \n                            $.each(selections,function(i, d){\n                                \n                                var child = frm.add_child('items');\n                                console.log(\"d \"+d);\n                                frappe.call({\n                                    method:\"frappe.client.get\",\n                                    args:{\n                                        doctype: \"Renewal List\",\n                                        \"name\":d\n                                        \n                                    },\n                                    callback:function(res){\n                                        console.log(res.message);\n                                        var data = res.message;\n                                        var item_data = data.items[0];\n                                        console.log(item_data);\n                                        var end_date = res.message.end_date;\n                                        console.log(\"items\"+frm.doc.items);\n                                        var item_list = frm.doc.items;\n                                        console.log(item_list);\n                                        //if (start_date < end_date){\n                                            $.each(item_list,function(i, d){\n                                                console.log(\"r\"+ d);\n                                            });\n                                            \n                                            child.item_code = item_data.item_code;\n                                            child.item_name = item_data.item_name;\n                                            child.expected_date = end_date;\n                                            \n                                            child.opportunity_type = \"Renewal\";\n                                            \n                                            //getting price\n                                            getting_item_price(child);\n                                            \n                                            child.uom = item_data.uom;\n                                            child.renewal_id = d;\n                                            \n                                            child.description = item_data.description;\n                                            frm.refresh_field(\"items\");\n                                                \n                                                \n                                                \n                                                \n                                             \n                                            \n                                        //}\n                                        \n                                        frm.refresh_field(\"items\");\n                                         \n                                    }\n                                });\n                            });\n                            \n                        }\n                    });\n\t\t \n\t        });\n           frm.fields_dict[\"items\"].grid.grid_buttons.find('.btn-custom').removeClass('btn-default').addClass('btn-primary');\n            \n            \n            frm.set_query(\"user_name\",\"contact_list\",function(doc,cdt,cdn){\n              return{\n                  filters:{\n                      company_name: frm.doc.party_name\n                  }\n              }\n          })\n            \n            \n\t\t\n\t    }\n\t    \n\t    \n\t    let creator= \"\" ;\n        let name_of_team =\"\";\n        let email_user= \"\" ;\n        \n\t    if ( frm.doc.__islocal ){\n            \n            \n            email_user=frappe.user_info().email;\n            frappe.model.get_value('Employee',{'user_id':email_user},['employee_name','cell_number'],function(d){\n                frappe.model.get_value('Sales Person',{'employee':d.name},['parent_sales_person'],function(s){\n                //console.log('Employee Name', d.employee_name,s,s.sales_person_name);\n                    name_of_team = s.parent_sales_person;\n                    console.log(name_of_team);\n                    cur_frm.set_value('team_name',name_of_team);\n            \t\tcur_frm.refresh_fields(\"team_name\");\n            \t\tcur_frm.set_value(\"sales_person\", d.employee_name);\n            \t\tcur_frm.refresh_fields(\"sales_person\");\n            \t\t\n            \t\t\n            \t\tfrm.doc.sales_team = [];\n            \t\tvar child = frm.add_child(\"sales_team\");\n            \t\tchild.sales_person = d.employee_name;\n            \t\tchild.team_name = name_of_team;\n            \t\tchild.mobile_no = d.cell_number;\n                \tchild.email_id = email_user;\n            \t\tchild.allocated_percentage = 100;\n            \t\tfrm.refresh_field('sales_team');\n            \n                \n                    \n                });\n            });\n           }\n\t    \n\t    \n\t    if(frm.doc.status === \"Ordered\"){\n\t        frm.add_custom_button((\"COF\"),function(){\n\t            console.log(\"hello\")\n\t        },(\"Create\"));\n\t    }\n\t   \n\t  \n\t   var raised_by     = frappe.user_info().full_name;\n\t   console.log(raised_by)\n        var cur_time = frappe.datetime.now_datetime();\n        //cur_frm.set_value(\"raised_by\", raised_by);\n\t},\n\t\n\t\n\n\n\t\n\tcompany:function(frm){\n\t    if(frm.doc.company !== undefined && frm.doc.party_name !== undefined){\n\t        var address = frm.doc.company + \"-Billing\"\n\t        var customer_state = frm.doc.territory;\n\t        console.log(customer_state)\n\t        cur_frm.set_value(\"company_address\",address);\n          \tcur_frm.refresh_field(\"company_address\");\n          \t\n          \tfrappe.call({\n    \t\t        method: \"frappe.client.get\",\n          \t\t\targs: {\n          \t\t\t\tdoctype: \"Address\",\n          \t\t\t\tfilters: {\n          \t\t\t\t\t\"name\": address\n          \t\t\t\t\t\n          \t\t\t\t},\n          \t\t\t\t\n          \t\t\t},\n          \t\t\tcallback: function(r){\n          \t\t\t    var gst_state = r.message.gst_state;\n          \t\t\t    console.log(gst_state)\n          \t\t\t    var state_tag = frm.doc.company.split(\" - \")\n          \t\t\t    console.log(state_tag)\n          \t\t\t    \n          \t\t\t    if (frm.doc.company === \"VAARAAHI CAPITALS PRIVATE LIMITED\"){\n          \t\t\t        if(customer_state === gst_state){\n              \t\t\t        \n              \t\t\t        cur_frm.set_value(\"tax_category\",\"In-State\");\n              \t\t\t        cur_frm.refresh_field(\"tax_category\");\n              \t\t\t    }\n              \t\t\t    else{\n              \t\t\t        cur_frm.set_value(\"tax_category\",\"Out-State\");\n              \t\t\t        cur_frm.refresh_field(\"tax_category\");\n              \t\t\t    }\n          \t\t\t    }\n          \t\t\t    else{\n          \t\t\t        \n          \t\t\t    \n          \t\t\t    if(customer_state === gst_state){\n          \t\t\t        var tax_cat = \"In-State - \" + state_tag[1]\n          \t\t\t        cur_frm.set_value(\"tax_category\",tax_cat);\n          \t\t\t        cur_frm.refresh_field(\"tax_category\");\n          \t\t\t    }\n          \t\t\t    else{\n          \t\t\t        var tax_cat1 = \"Out-State - \" + state_tag[1]\n          \t\t\t        console.log(tax_cat1)\n          \t\t\t        cur_frm.set_value(\"tax_category\",tax_cat1);\n          \t\t\t        cur_frm.refresh_field(\"tax_category\");\n          \t\t\t    }\n          \t\t\t    }\n          \t\t\t}\n          \t\n          \t});\n          \t\n          \tsetTimeout(function() {\n              \tif(frm.doc.company_address === \"64 Network Security - TN-Billing\"){\n    \t\t        cur_frm.set_value(\"tc_name\",\"TN - Terms and Conditions\");\n    \t\t        cur_frm.refresh_field(\"tc_name\");\n    \t\t    }\n    \t\t    else{\n    \t\t        cur_frm.set_value(\"tc_name\",\"Standard_Terms and Conditions\");\n    \t\t        cur_frm.refresh_field(\"tc_name\");\n    \t\t    }\n\t\t    \n          \t}, 2000);    \n\t\t    \n          \t\t\t    \n\t   }\n\t}\n});\n\nfrappe.ui.form.on('Quotation', 'refresh', function(frm) {\n    if(frm.doc.__islocal){\n        cur_frm.set_value(\"valid_till\",frappe.datetime.add_days(frappe.datetime.nowdate(), 7))\n    }\n\t\n});\n\nfrappe.ui.form.on('Quotation Item', {\n    \n   \n\n\titem_code:function(frm, cdt, cdn){\n\t    var child = locals[cdt][cdn];\n\t    var start_date = frappe.datetime.get_today();\n\t    var status = child.renewal_status;\n\t    console.log(\"hi\")\n\t    \n\t    if (child.item_code !== \"\" && child.idx === 1 && frm.doc.party_name !== undefined){\n\t        cur_frm.doc.taxes = [];\n\t        //console.log(child)\n\t        console.log(\"hello world\");\n\t    }\n\t    \n\t    if(child.item_code !== \"\" && frm.doc.party_name !== undefined){\n\t        console.log(child)\n\t        \n\t        getting_items_data(child, start_date, status)\n\t    }\n\t    \n\t    \n    },\n    \n    start_date:function(frm,cdt, cdn){\n\t    var child = locals[cdt][cdn];\n\t    \n\t    \n\t    if (child.item_code !== \"\" && child.renewal_status === \"New\" && child.start_date !== undefined){\n\t            var date = child.start_date;\n        \t    \n        \t    frappe.call({\n        \t        method:\"frappe.client.get\",\n        \t        args:{\n        \t            doctype:\"Item\",\n        \t            filters:{\n        \t                \"name\":child.item_code\n        \t            }\n        \t        },\n        \t        callback:function(r){\n        \t   \n        \t            console.log(r.message);\n        \t            var data = r.message;\n        \t            var renewal = data.renewal_option;\n        \t            var tenure = data.tenure;\n        \t            var months = data.months;\n        \t            var years = data.years;\n        \t             \n        \t            var new_date = date.split(\"-\");\n        \t            \n        \t            if (renewal === \"Yes\" && tenure === \"Years\" && years !== \"0\"){\n                    \t    var final_year = get_year_end_date(new_date, years)\n                            \n                             child.end_date = final_year;\n                             \n    \t                }\n    \t                else if (renewal === \"Yes\" && tenure === \"Months\" && months !==\"0\"){\n    \t                     var final_date = get_month_end_date(new_date, months)\n                            \n                             child.end_date = final_date;\n    \t                }     \n    \t                else{\n    \t                    child.end_date = date;\n    \t                }\n    \t                frm.refresh_field(\"items\") ;\n        \t         \n        \t                \n        \t       }   \n        \t    });  \n\t    }\t    \n\n\t},\n\t\n\t\n});\n\nfrappe.ui.form.on('Sales Team', {\n\tsales_person:function(frm, cdt, cdn){\n\t    var child = locals[cdt][cdn];\n\t    console.log(child.sales_person);\n\t    frappe.model.get_value('Employee',{'employee_name':child.sales_person},'name',function(d){\n\t        console.log(d);\n    \t    frappe.model.get_value('Sales Person',{'employee':d.name},['parent_sales_person'],function(s){\n                //console.log('Employee Name', d.employee_name,s,s.sales_person_name);\n                console.log(s);\n                let name_of_team = s.parent_sales_person;\n                \n        \t\t\n        \t\t\n        \t\t\n        \t\tchild.team_name = name_of_team;\n        \t\t\n        \t\tcur_frm.refresh_field('sales_team');\n        \n                \n                    \n            });\n\t    });    \n\t}\n});\n\nfrappe.ui.form.on('Renewal Contacts',{\n    user_name:function(frm,cdt, cdn) {\n        \n        \n        var child = locals[cdt][cdn];\n\t\n\t    let person = child.user_name\n\t    \n  \t\tvar name_list = [];\t\t\n\t    if(person !== undefined){\n  \t\t\t\t    //console.log(\"hello\")\n  \t\t\t\t    //console.log(frm.doc.contact_person)\n  \t\t\t\t    frappe.call({\n  \t\t\t\t        method: \"frappe.client.get\",\n              \t\t\targs: {\n              \t\t\t\tdoctype: \"Contact\",\n              \t\t\t\tfilters: {\n              \t\t\t\t\t\"name\": person\n              \t\t\t\t}\n              \t\t\t\t\n              \t\t\t},\n              \t\t\tcallback: function(r){\n              \t\t\t    console.log(frm.doc.contact_list)\n              \t\t\t    \n              \t\t\t        \n                                \n                                child.mobile_no = r.message.phone;\n                                child.email_id = r.message.email_id;\n                                child.designation = r.message.designation;\n                                cur_frm.refresh_field(\"contact_list\");\n                  \t\t\t    \n                                \n        \n              \t\t\t}\n  \t\t\t\t    });\n  \t\t\t\t}\n\t}\n});\n\nfunction getting_items_data(child,start_date, status){\n    \n\t   \n\t   console.log(\"i am in getting data function\")\n\t  \n\t   \n       child.start_date = [];\n        child.end_date = [];\n        \n        \n        frappe.call({\n            method:\"frappe.client.get\",\n            args:{\n                doctype:\"Item\",\n                filters:{\n                    \"name\":child.item_code\n                }\n            },\n            callback:function(r){\n                console.log(\"its done\");\n                //console.log(r.message);\n                child.renewal_status = status;\n                child.tax_rate = r.message.tax_rate;\n      \t        //frm.refresh_field(\"items\")\n      \t    \n                var data = r.message;\n                var renewal = data.renewal_option;\n                var tenure = data.tenure;\n                var months = data.months;\n                 var years = data.years;\n                 \n                if (renewal === \"Yes\"){\n                    var new_date = start_date.split(\"-\");\n                     \n                     var final_year = \"\";\n                    if(tenure === \"Years\" && years !== \"0\"){\n                            \n                            final_year = get_year_end_date(new_date, years);\n                            \n                          \n                             //console.log(final_year);\n                             child.start_date = start_date;\n                             child.end_date = final_year;\n                             cur_frm.refresh_field(\"items\") ;\n    \n    \n                        \t                        \n                    }\n                    if (tenure === \"Months\" && months !==\"0\"){\n                        final_year = get_month_end_date(new_date, months)\n                    \n                        console.log(final_year);\n                        child.start_date = start_date;\n                        child.end_date = final_year;\n                        cur_frm.refresh_field(\"items\") ;\n                    }\n                        \t                \n               }\n                else{\n                    child.start_date = start_date;\n                    child.end_date = start_date;\n                    cur_frm.refresh_field(\"items\") ;\n                }\n            }\n        });\n        \n            \n            \n    \t  \n\t   \n}\n\nfunction month_diff(d1, d2) {\n    var months;\n    var year = (d2.getFullYear() - d1.getFullYear()) ;\n    \n    \n    \n    if (d2.getMonth() < d1.getMonth()){\n        \n        year = year -1;\n        months = (12 + d2.getMonth()) - d1.getMonth() + (year *12) + 1\n    }\n    else{\n        months = (d2.getMonth() - d1.getMonth()) + (year * 12) +1\n    }\n    \n    return months <= 0 ? 0 : months;\n}\n\nfunction get_year_end_date(new_date, years){\n    var new_year = \"\";\n    var end_date = \"\";\n    if(new_date[2] == \"01\"){\n    \t                            \n        if(new_date[1] === \"03\" ){\n             new_year = parseFloat(new_date[0]) + parseFloat(years) ;\n             if (new_year % 100 === 0 ){\n                 if(new_year % 400 === 0){\n                     new_date[2] = \"29\";\n                 } \n                 else{\n                     new_date[2] = \"28\";\n                 }\n             }\n             else if(new_year % 4 === 0){\n                 new_date[2] = \"29\";\n             }\n             else{\n                 new_date[2] = \"28\";\n             }\n             new_date[0] = new_year.toString();\n             new_date[1] = (parseInt(new_date[1]) - 1).toString();\n         }\n         else if(new_date[1] === \"01\" || new_date[1] ===\"02\" || new_date[1] ===\"04\" ||new_date[1] ===\"06\" || new_date[1] ===\"08\" || new_date[1] ===\"09\" ||  new_date[1] ===\"11\"){\n             if (new_date[1] === \"01\"){\n                 new_year = parseInt(new_date[0]) + parseInt(years) - 1 ;\n                \n                 new_date[0] = new_year.toString();\n                 new_date[1] = \"12\";\n             }\n             else{\n                 new_year = parseInt(new_date[0]) + parseInt(years) ;\n                 \n                 new_date[0] = new_year.toString();\n                 new_date[1] = (parseInt(new_date[1]) - 1).toString();\n             }\n             new_date[2] = \"31\";\n         }\n         else if(new_date[1] === \"05\" ||  new_date[1] ===\"07\" ||  new_date[1] ===\"10\" ||  new_date[1] ===\"12\") {\n             new_year = parseInt(new_date[0]) + parseInt(years) ;\n             \n             new_date[0] = new_year.toString();\n             new_date[1] = (parseInt(new_date[1]) - 1).toString();\n             new_date[2] = \"30\";\n             \n         }\n         end_date = new_date.join(\"-\");\n         return end_date;\n         \n     \n   }\n   \n    else{\n        new_year = parseInt(new_date[0]) + parseInt(years) ;\n        new_date[0] = new_year.toString();\n        new_date[2] = (parseInt(new_date[2]) - 1).toString();\n        new_date[1] = parseInt(new_date[1]).toString();\n        end_date = new_date.join(\"-\");\n        return end_date;\n        \n    }  \n}\n\nfunction get_month_end_date(new_date, months){\n    var month_date = []\n   Date.isLeapYear = function (year) { \n        return (((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0)); \n    };\n    \n    Date.getDaysInMonth = function (year, month) {\n        return [31, (Date.isLeapYear(year) ? 29 : 28), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month];\n    };\n    \n    Date.prototype.isLeapYear = function () { \n        return Date.isLeapYear(this.getFullYear()); \n    };\n    \n    Date.prototype.getDaysInMonth = function () { \n        return Date.getDaysInMonth(this.getFullYear(), this.getMonth());\n    };\n    \n    Date.prototype.addMonths = function (value) {\n        var n = this.getDate();\n        //console.log(typeof(value), value)\n        //console.log(n)\n        this.setDate(1);\n        if (value === 1 && n === 1){\n            console.log(\"error\")\n            this.setMonth(this.getMonth());\n            \n            var month = this.getMonth()\n            var year = this.getFullYear()\n            var new_month = \"\"\n            switch(month){\n            case 1:\n              new_date = Date.isLeapYear(year) ? 29 : 28;\n              break;\n            case 3: case 5: case 8: case 10:\n              new_date = 30;\n              break;\n            default:\n              new_date = 31;\n          }\n          console.log(new_date)\n          this.setDate(Math.min(new_date, this.getDaysInMonth()));\n          return this;\n        }\n        \n        else{\n            this.setMonth(this.getMonth() + value);\n            var new_value = this.getDaysInMonth()\n            console.log(\"new_value:\" + typeof(new_value))\n            this.setDate(Math.min(n-1, this.getDaysInMonth()));\n            return this;\n        }\n        \n    };\n    var myDate = new Date(new_date);\n    var result1 = myDate.addMonths(parseInt(months));\n    \n    month_date.push(result1.getFullYear());\n    month_date.push(result1.getMonth()+ 1);\n    month_date.push(result1.getDate());\n    \n    var final_year = month_date.join(\"-\");\n    \n    return final_year;\n}\n\n\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 1,
  "modified": "2024-01-29 13:34:37.070840",
  "module": "Renewal Module",
  "name": "Sales Order-Form",
  "script": "frappe.ui.form.on('Sales Order', {\n\trefresh(frm) {\n\t    \n\t\tif(frm.doc.customer !== undefined){\n\t\t    setTimeout(function() {\n    \t\t    frappe.call({\n    \t\t        method: \"frappe.client.get\",\n          \t\t\targs: {\n          \t\t\t\tdoctype: \"Customer\",\n          \t\t\t\tfilters: {\n          \t\t\t\t\t\"customer_name\": frm.doc.customer\n          \t\t\t\t\t\n          \t\t\t\t},\n          \t\t\t\t\n          \t\t\t},\n          \t\t\tcallback: function(r){\n          \t\t\t    console.log(r.message.tax_category);\n          \t\t\t    var data = r.message;\n          \t\t\t    var company = data.accounts[0].company;\n          \t\t\t    var address = company + \"-Billing\";\n          \t\t\t    console.log(company);\n          \t\t\t    cur_frm.set_value(\"tax_category\",r.message.tax_category);\n          \t\t\t    cur_frm.refresh_field(\"tax_category\");\n          \t\t\t    cur_frm.set_value(\"company\",company);\n          \t\t\t    cur_frm.refresh_field(\"company\");\n          \t\t\t    cur_frm.set_value(\"company_address\",address);\n          \t\t\t    cur_frm.refresh_field(\"company_address\");\n          \t\t\t    \n          \t\t\t    \n          \t\t\t}\n    \t\t    });\n\t\t    }, 1000) \n\t\t    \n\t\t    frm.set_query(\"user_name\",\"contact_list\",function(doc,cdt,cdn){\n              return{\n                  filters:{\n                      company_name: frm.doc.customer\n                  }\n              }\n          })\n            \n\t\t}\n\t\tif(frm.doc.cof_id !== undefined && frm.doc.__islocal){\n\t\t    let id = frm.doc.cof_id;\n\t\t    console.log(id);\n\t\t    frappe.call({\n\t\t        method: \"frappe.client.get\",\n      \t\t\targs: {\n      \t\t\t\tdoctype: \"Customer Order Form\",\n      \t\t\t\tfilters: {\n      \t\t\t\t\t\"name\": id\n      \t\t\t\t\t\n      \t\t\t\t},\n      \t\t\t\t\n      \t\t\t},\n      \t\t\tcallback: function(r){\n      \t\t\t    console.log(r.message);\n      \t\t\t    let data = r.message;\n      \t\t\t    cur_frm.set_value(\"company\",data.company_name);\n              \t    cur_frm.refresh_field(\"company\");\n              \t    cur_frm.set_value(\"customer\",data.customer);\n              \t    cur_frm.refresh_field(\"customer\");\n              \t    cur_frm.set_value(\"customer_address\",data.customer_address);\n              \t    cur_frm.refresh_field(\"customer_address\");\n              \t    \n              \t    cur_frm.set_value(\"shipping_address_name\",data.shipping_address_name);\n              \t    cur_frm.refresh_field(\"shipping_address_name\");\n              \t    \n              \t    cur_frm.set_value(\"company_address\",data.company_address);\n              \t    cur_frm.refresh_field(\"company_address\");\n              \t    \n            //   \t    cur_frm.set_value(\"place_of_supply\",doc.place_of_supply);\n          \t\t// \tcur_frm.refresh_field(\"place_of_supply\");\n              \t    \n              \t    cur_frm.set_value(\"po_no\",data.po_ref_number);\n              \t    cur_frm.refresh_field(\"po_no\");\n              \t    \n              \t    cur_frm.set_value(\"customer_po\",data.po_attachment);\n              \t    cur_frm.refresh_field(\"customer_po\");\n              \t    \n              \t //   cur_frm.set_value(\"gst_category\",data.gst_category);\n              \t //   cur_frm.refresh_field(\"gst_category\");\n              \t //   cur_frm.set_value(\"gst_treatment\",data.gst_treatment);\n              \t //   cur_frm.refresh_field(\"gst_treatment\");\n              \t    \n              \t    \n              \t    cur_frm.set_value(\"total_qty\",data.total_quantity);\n              \t    cur_frm.refresh_field(\"total_qty\");\n              \t    cur_frm.set_value(\"total\",data.total);\n              \t    cur_frm.refresh_field(\"total\");\n              \t    cur_frm.set_value(\"net_total\",data.net_total);\n              \t    cur_frm.refresh_field(\"net_total\");\n              \t    cur_frm.set_value(\"base_total\",data.base_total);\n              \t    cur_frm.refresh_field(\"base_total\");\n              \t    cur_frm.set_value(\"base_net_total\",data.base_net_total);\n              \t    cur_frm.refresh_field(\"base_net_total\");\n              \t    cur_frm.set_value(\"total_net_weight\",data.total_net_weight);\n              \t    cur_frm.refresh_field(\"total_net_weight\");\n              \t    cur_frm.set_value(\"rounded_total\",data.rounded_total);\n              \t    cur_frm.refresh_field(\"rounded_total\");\n              \t    cur_frm.set_value(\"in_words\",data.in_words);\n              \t    cur_frm.refresh_field(\"in_words\");\n              \t    cur_frm.set_value(\"total_taxes_and_charges\",data.total_taxes_and_charges);\n              \t    cur_frm.refresh_field(\"total_taxes_and_charges\");\n              \t    \n              \t    let items = data.items;\n              \t    frm.doc.items = [];\n              \t    items.forEach(function(each){\n              \t        var child = frm.add_child(\"items\");\n              \t        //console.log(each)\n              \t        child.actual_qty = each.actual_qty;\n              \t        child.additional_notes = each.additional_notes;\n              \t        child.against_blanket_order = each.against_blanket_order;\n              \t        child.amount = each.amount;\n              \t        child.base_amount = each.base_amount;\n              \t        child.base_net_amount = each.base_net_amount;\n              \t        child.base_net_rate = each.base_net_rate;\n              \t        child.base_price_list_rate = each.base_price_list_rate;\n              \t        child.base_rate = each.base_rate;\n              \t        child.base_rate_with_margin = each.base_rate_with_margin;\n              \t        child.blanket_order = each.blanket_order;\n              \t        child.blanket_order_rate = each.blanket_order_rate;\n              \t        child.brand = each.brand;\n              \t        child.conversion_factor = each.conversion_factor;\n              \t        child.customer_item_code = each.customer_item_code;\n              \t        child.description = each.description;\n              \t        child.discount_amount = each.discount_amount;\n              \t        child.discount_percentage = each.discount_percentage;\n              \t        //child.docstatus = each.docstatus;\n              \t        child.end_date = each.end_date;\n              \t        child.gross_profit = each.gross_profit;\n              \t        child.gst_hsn_code = each.gst_hsn_code;\n              \t        child.image = each.image;\n              \t        child.item_code = each.item_code;\n              \t        child.item_group = each.item_group;\n              \t        child.item_name = each.item_name;\n              \t        child.is_non_gst = each.is_non_gst;\n              \t        child.is_nil_exempt = each.is_nil_exempt;\n              \t        child.is_free_item = each.is_free_item;\n              \t        child.item_tax_rate = each.item_tax_rate;\n              \t        child.item_tax_template = each.item_tax_template;\n              \t        child.margin_rate_or_amount = each.margin_rate_or_amount;\n              \t        child.margin_type = each.margin_type;\n              \t        child.net_amount = each.net_amount;\n              \t        child.net_rate = each.net_rate;\n              \t        child.qty = each.qty;\n              \t        child.rate = each.rate;\n              \t        child.renewal_status = each.opportunity_type;\n              \t        child.start_date = each.start_date;\n              \t        child.stock_qty = each.stock_qty;\n              \t        child.stock_uom = each.stock_uom;\n              \t        child.stock_uom_rate = each.stock_uom_rate;\n              \t        child.tax_rate = each.tax_rate;\n              \t        child.total_weight = each.total_weight;\n              \t        child.uom = each.uom;\n              \t        child.valuation_rate = each.valuation_rate;\n              \t        child.warehouse = each.warehouse;\n              \t        child.weight_per_unit = each.weight_per_unit;\n              \t        child.weight_uom = each.weight_uom;\n              \t        child.prevdoc_docname=data.quotation_id;\n              \t        child.renewal_id = each.renewal_id;\n              \t        frm.refresh_field(\"items\");\n              \t        \n              \t        \n              \t        \n              \t        \n              \t    })\n              \t    \n              \t    \n              \t     \n              \t    \n              \t    cur_frm.set_value(\"tax_category\",data.tax_category);\n              \t    cur_frm.refresh_field(\"tax_category\");\n              \t    cur_frm.set_value(\"taxes_and_charges\",data.taxes_and_charges);\n              \t    cur_frm.refresh_field(\"taxes_and_charges\");\n              \t    \n              \t    \n              \t    let taxes = data.taxes;\n              \t    cur_frm.doc.taxes = []\n              \t    taxes.forEach(function(each){\n              \t        var tax_child = frm.add_child(\"taxes\");\n              \t        //console.log(each);\n              \t        tax_child.charge_type = each.charge_type;\n              \t        tax_child.account_currency = each.account_currency;\n              \t        tax_child.account_head = each.account_head;\n              \t        tax_child.base_tax_amount = each.base_tax_amount;\n              \t        tax_child.base_tax_amount_after_discount_amount = each.base_tax_amount_after_discount_amount;\n              \t        tax_child.base_total = each.base_total;\n              \t        tax_child.charge_type = each.charge_type;\n              \t        tax_child.cost_center = each.cost_center;\n              \t        tax_child.description = each.description;\n              \t        tax_child.docstatus = each.docstatus;\n              \t        tax_child.doctype = each.doctype;\n              \t        tax_child.dont_recompute_tax = each.dont_recompute_tax;\n              \t        tax_child.included_in_paid_amount = each.included_in_paid_amount;\n              \t        tax_child.included_in_print_rate = each.included_in_print_rate;\n              \t        tax_child.item_wise_tax_detail = each.item_wise_tax_detail;\n              \t        tax_child.tax_amount = each.tax_amount;\n              \t        tax_child.tax_amount_after_discount_amount = each.tax_amount_after_discount_amount;\n              \t        tax_child.total = each.total;\n              \t        frm.refresh_field(\"taxes\")\n              \t    });\n              \t    \n              \t    cur_frm.set_value(\"grand_total\",data.grand_total);\n              \t    cur_frm.refresh_field(\"grand_total\");\n              \t    \n      \t\t\t}\n\t\t    });\n\t\t}\n\t\t\n// \t\tif ( frm.doc.__islocal ){\n//             console.log(\"this is if cond\");\n//             let email_user=frappe.user_info().email;\n//             frappe.model.get_value('Employee',{'user_id':email_user},['employee_name','cell_number'],function(d){\n//                 console.log(d)\n//             frappe.model.get_value('Sales Person',{'employee':d.employee_name},['parent_sales_person'],function(s){\n//             //console.log('Employee Name', d.employee_name,s,s.sales_person_name);\n//             let name_of_team = s.parent_sales_person;\n//             console.log(\"hello\");\n            \n//     \t\tvar child = frm.add_child(\"sales_team\");\n//     \t\tchild.sales_person = d.employee_name;\n//     \t\tchild.team_name = name_of_team;\n//     \t\tchild.mobile_no = d.cell_number;\n//             child.email_id = email_user;\n//     \t\tchild.allocated_percentage = 100;\n//     \t\tfrm.refresh_field('sales_team');\n    \n            \n                \n//                 });\n//              });\n//          }\n\t},\n// \tGet place of supply using this refresh code\n// \trefresh(frm) {\n// \t\t// your code here\n\t\t\n// \t\tsetTimeout(function() {\n// \t\tif(frm.doc.shipping_address_name !== undefined){\n\t\t    \n// \t\t    frappe.call({\n//     \t\t        method: \"frappe.client.get\",\n//           \t\t\targs: {\n//           \t\t\t\tdoctype: \"Address\",\n//           \t\t\t\tfilters: {\n//           \t\t\t\t\t\"name\": frm.doc.shipping_address_name,\n          \t\t\t\t\t\n//           \t\t\t\t},\n          \t\t\t\t\n//           \t\t\t},\n//           \t\t\tcallback: function(d){\n//           \t\t\t    var data = d.message;\n//           \t\t\t    var place_of_supply = data.gst_state_number+\"-\"+data.gst_state;\n//           \t\t\t    cur_frm.set_value(\"place_of_supply\",place_of_supply);\n//               \t\t\tcur_frm.refresh_field(\"place_of_supply\");\n          \t\t\t    \n//           \t\t\t}\n// \t\t    });\t\t\t\n\t\t    \n// \t\t}\n// \t\t}, 1000);  \n// \t},\n\t\n\tcompany:function(frm){\n\t    if(frm.doc.company !== undefined && frm.doc.custommer !== undefined){\n\t        var address = frm.doc.company + \"-Billing\"\n\t        var customer_state = frm.doc.territory;\n\t        console.log(customer_state)\n\t        cur_frm.set_value(\"company_address\",address);\n          \tcur_frm.refresh_field(\"company_address\");\n          \t\n          \tfrappe.call({\n    \t\t        method: \"frappe.client.get\",\n          \t\t\targs: {\n          \t\t\t\tdoctype: \"Address\",\n          \t\t\t\tfilters: {\n          \t\t\t\t\t\"name\": address\n          \t\t\t\t\t\n          \t\t\t\t},\n          \t\t\t\t\n          \t\t\t},\n          \t\t\tcallback: function(r){\n          \t\t\t    var gst_state = r.message.gst_state;\n          \t\t\t    console.log(gst_state)\n          \t\t\t    var state_tag = frm.doc.company.split(\" - \")\n          \t\t\t    console.log(state_tag)\n          \t\t\t    \n          \t\t\t    if(customer_state === gst_state){\n          \t\t\t        var tax_cat = \"In-State - \" + state_tag[1]\n          \t\t\t        cur_frm.set_value(\"tax_category\",tax_cat);\n          \t\t\t        cur_frm.refresh_field(\"tax_category\");\n          \t\t\t    }\n          \t\t\t    else{\n          \t\t\t        var tax_cat1 = \"Out-State - \" + state_tag[1]\n          \t\t\t        console.log(tax_cat1)\n          \t\t\t        cur_frm.set_value(\"tax_category\",tax_cat1);\n          \t\t\t        cur_frm.refresh_field(\"tax_category\");\n          \t\t\t    }\n          \t\t\t}\n          \t\n          \t});\n          \t\t\t    \n\t   }\n\t}\n});\n\nfrappe.ui.form.on('Sales Order', {\n\trefresh: function(cur_frm) {\n\tcur_frm.add_custom_button(__('Proforma Invoice'), function(){\n\t\n\nfrappe.model.with_doctype('Proforma Invoice', function() {\n\tfrappe.model.with_doctype('Proforma Invoice', function() {\n\tvar mr = frappe.model.get_new_doc('Proforma Invoice');\n\tmr.customer = cur_frm.doc.customer;\n\tmr.sales_order_id=cur_frm.doc.name;\n\tmr.conversion_rate = cur_frm.doc.conversion_rate;\n\tmr.plc_conversion_rate = cur_frm.doc.plc_conversion_rate;\n\tmr.po_no = cur_frm.doc.po_no;\n\tmr.po_date = cur_frm.doc.po_date;\n\tmr.delivery_date = cur_frm.doc.delivery_date;\n\tmr.address_display = cur_frm.doc.address_display;\n\tmr.shipping_address = cur_frm.doc.shipping_address;\n\tmr.customer_address = cur_frm.doc.customer_address;\n\tmr.shipping_address_name = cur_frm.doc.shipping_address_name;\n\tmr.contact_display = cur_frm.doc.contact_display;\n\tmr.contact_mobile = cur_frm.doc.contact_mobile;\n\t\n\tmr.contact_person = cur_frm.doc.contact_person;\n\tmr.contact_email = cur_frm.doc.contact_email;\n\tmr.payment_terms = cur_frm.doc.payment_terms_template;\n\tmr.sales_order = cur_frm.doc.name;\n\tmr.customer_group = cur_frm.doc.customer_group;\n\tmr.territory = cur_frm.doc.territory;\n\tmr.billing_address_gstin = cur_frm.doc.billing_address_gstin;\n\tmr.total = cur_frm.doc.total;\n\tmr.place_of_supply = cur_frm.doc.place_of_supply;\n\tmr.internal_order_no = cur_frm.doc.internal_order_no;\n\tmr.schedule_date = frappe.datetime.nowdate();\n    mr.taxes_applicable = cur_frm.doc.taxes_applicable;\n    mr.other_charge_calculation = cur_frm.doc.other_charge_calculation;\n \tmr.taxes_and_charges = cur_frm.doc.taxes_and_charges; \n \tmr.terms = cur_frm.doc.terms;\n\tmr.in_words = cur_frm.doc.in_words;\n \tmr.tc_name = cur_frm.doc.tc_name; \n \tmr.total_taxes_and_charges = cur_frm.doc.total_taxes_and_charges; \n \tmr.grand_total = cur_frm.doc.grand_total; \n \tmr.base_grand_total = cur_frm.doc.base_grand_total;\n \tmr.base_net_total = cur_frm.doc.base_net_total;\n \tmr.net_total = cur_frm.doc.net_total;\n \tmr.debit_to = cur_frm.debit_to;\n \tmr.payment_terms_template = cur_frm.doc.payment_terms_template;\n\tvar items = cur_frm.get_field('items').grid.get_selected_children();\n\tvar sales_team = cur_frm.get_field('sales_team').grid.get_selected_children();\n\tvar taxes = cur_frm.get_field('taxes').grid.get_selected_children();\n\tvar payment_schedule = cur_frm.get_field('payment_schedule').grid.get_selected_children();\n\t\t\n\tif(!items.length) {\n\t\titems = cur_frm.doc.items;\n\t}\n\tif(!taxes.length) {\n\t\ttaxes = cur_frm.doc.taxes;\n\t}\t\n\tif(!sales_team.length) {\n\t\tsales_team = cur_frm.doc.sales_team;\n\t}\t\n\tif(!payment_schedule.length) {\n\t\tpayment_schedule = cur_frm.doc.payment_schedule;\n\t}\t\n\t\n\titems.forEach(function(item) {\n\t\t\tvar mr_item = frappe.model.add_child(mr, 'items');\n\t\t\tmr_item.item_code = item.item_code;\n\t\t\tmr_item.item_name = item.item_name;\n\t\t\tmr_item.delivery_date = item.delivery_date;\n\t\t\tmr_item.description = item.description;\n\t\t\tmr_item.qty = item.qty;\n\t\t\tmr_item.uom = item.uom;\n\t\t\tmr_item.no = item.no;\n\t\t\tmr_item.remarks = item.remarks;\n            mr_item.stock_qty = item.stock_qty;\n\t\t\tmr_item.stock_uom = item.stock_uom;\n\t\t\tmr_item.conversion_factor = item.conversion_factor;\n\t\t\tmr_item.price_list_rate = item.price_list_rate;\n\t\t\tmr_item.last_purchase_rate = item.last_purchase_rate;\n\t\t\tmr_item.base_price_list_rate = item.base_price_list_rate;\n\t\t\tmr_item.discount_percentage = item.discount_percentage;\n\t\t\tmr_item.item_tax_template = item.item_tax_template;\n\t\t\tmr_item.sum = item.sum;\n\t\t\tmr_item.rate = item.po_rate;\n\t\t\tmr_item.rate = item.rate;\n\t\t\tmr_item.amount = item.amount;\n\t\t\tmr_item.base_rate = item.base_rate;\n\t\t\tmr_item.base_amount=item.base_amount;\n\t\t\tmr_item.warehouse = item.warehouse;\n\t\t\tmr_item.bom = item.bom;\n\t\t\tmr_item.project = item.project;\n\t\t\tmr_item.taxes = item.taxes;\n\t\t\n            \n\t\t});\n\t\t\n\t\ttaxes.forEach(function(tax) {\n\t\t\tvar mr_taxes = frappe.model.add_child(mr, 'taxes');\n\t\t\tmr_taxes.charge_type = tax.charge_type;\n\t\t\tmr_taxes.description = tax.description;\n\t\t\tmr_taxes.account_head = tax.account_head;\n\t\t\tmr_taxes.rate = tax.rate;\n\t\t\tmr_taxes.tax_amount = tax.tax_amount;\n\t\t\tmr_taxes.total = tax.total;\n\t\t});\n\t\t\n\t\tsales_team.forEach(function(sale) {\n\t\t\tvar sales = frappe.model.add_child(mr, 'sales_team');\n\t\t\tsales.sales_person = sale.sales_person;\n\t\t\tsales.allocated_percentage = sale.allocated_percentage;\n\t\t\tsales.allocated_amount = sale.allocated_amount;\n\t\t\tsales.incentives = sale.incentives;\n\t\t});\n\t\t\n\t\tpayment_schedule.forEach(function(pay) {\n\t\t\tvar pays = frappe.model.add_child(mr, 'payment_schedule');\n\t\t\tpays.payment_term = pay.payment_term;\n\t\t\tpays.due_date = pay.due_date;\n\t\t\tpays.invoice_portion = pay.invoice_portion;\n\t\t\tpays.payment_amount = pay.payment_amount;\n\t\t});\t\t\n\n\t\n\tfrappe.set_route('Form', 'Proforma Invoice', mr.name);\n\n});\n\n});\n\t});\n}\n});\n\nfrappe.ui.form.on('Sales Order Item', {\n\titem_code:function(frm, cdt, cdn){\n\t    var child = locals[cdt][cdn];\n\t    console.log(child);\n\t    //console.log(frm.doc.items)\n\t   // if (item_code === \"\" && child.idx === \"1\"){\n\t   //     frm.doc.taxes = []\n\t   // }\n\t    if (child.item_code !== \"\" && child.idx === 1){\n\t        frm.doc.taxes = []\n\t        //console.log(child)\n\t        console.log(\"hello world\")\n\t    }\n\t    \n\t    setTimeout(function() {\n\t        \n    \t    if(child.item_code !== \"\"){\n    \t        console.log(frm.doc.taxes);\n    \t        \n    \t        frm.doc.taxes.forEach(function(each){\n    \t            //console.log(each)\n    \t            var account = each.account_head.split(\" - \")\n    \t            //console.log(account)\n    \t            var account_list = account[0].split(\" \")\n    \t            console.log(account_list)\n    \t            if(account_list.includes(\"2.5%\") && frm.doc.taxes){\n    \t                each.rate = \"2.5\";\n    \t                frm.refresh_field('taxes');\n    \t            }\n    \t            if(account_list.includes(\"5%\")){\n    \t                each.rate = \"5\";\n    \t                frm.refresh_field('taxes');\n    \t            }\n    \t            if(account_list.includes(\"6%\")){\n    \t                each.rate = \"6\";\n    \t                frm.refresh_field('taxes');\n    \t            }\n    \t            if(account_list.includes(\"9%\")){\n    \t                each.rate = \"9\";\n    \t                frm.refresh_field('taxes');\n    \t            }\n    \t            if(account_list.includes(\"12%\")){\n    \t                each.rate = \"12\";\n    \t                frm.refresh_field('taxes');\n    \t            }\n    \t            if(account_list.includes(\"14%\")){\n    \t                each.rate = \"14\";\n    \t                frm.refresh_field('taxes');\n    \t            }\n    \t            if(account_list.includes(\"18%\")){\n    \t                each.rate = \"18\";\n    \t                frm.refresh_field('taxes');\n    \t            }\n    \t            if(account_list.includes(\"28%\")){\n    \t                each.rate = \"28\";\n    \t                frm.refresh_field('taxes');\n    \t            }\n    \t        });\n    \t    }\n\t    }, 1000)    \n    }\n});\n\nfrappe.ui.form.on('Sales Team', {\n\tsales_person:function(frm, cdt, cdn){\n\t    var child = locals[cdt][cdn];\n\t    console.log(child.sales_person);\n\t    frappe.model.get_value('Employee',{'employee_name':child.sales_person},'name',function(d){\n\t        console.log(d);\n    \t    frappe.model.get_value('Sales Person',{'employee':d.name},['parent_sales_person'],function(s){\n                //console.log('Employee Name', d.employee_name,s,s.sales_person_name);\n                console.log(s);\n                let name_of_team = s.parent_sales_person;\n                \n        \t\t\n        \t\t\n        \t\t\n        \t\tchild.team_name = name_of_team;\n        \t\t\n        \t\tcur_frm.refresh_field('sales_team');\n        \n                \n                    \n            });\n\t    });    \n\t}\n});\n\nfrappe.ui.form.on('Renewal Contacts',{\n    user_name:function(frm,cdt, cdn) {\n        \n        \n        var child = locals[cdt][cdn];\n\t\n\t    let person = child.user_name\n\t    \n  \t\tvar name_list = [];\t\t\n\t    if(person !== undefined){\n  \t\t\t\t    //console.log(\"hello\")\n  \t\t\t\t    //console.log(frm.doc.contact_person)\n  \t\t\t\t    frappe.call({\n  \t\t\t\t        method: \"frappe.client.get\",\n              \t\t\targs: {\n              \t\t\t\tdoctype: \"Contact\",\n              \t\t\t\tfilters: {\n              \t\t\t\t\t\"name\": person\n              \t\t\t\t}\n              \t\t\t\t\n              \t\t\t},\n              \t\t\tcallback: function(r){\n              \t\t\t    console.log(frm.doc.contact_list)\n              \t\t\t    \n              \t\t\t        \n                                \n                                child.mobile_no = r.message.phone;\n                                child.email_id = r.message.email_id;\n                                child.designation = r.message.designation;\n                                cur_frm.refresh_field(\"contact_list\");\n                  \t\t\t    \n                                \n        \n              \t\t\t}\n  \t\t\t\t    });\n  \t\t\t\t}\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2023-05-25 18:34:20.796642",
  "module": "Renewal Module",
  "name": "Sales Invoice-Form",
  "script": "frappe.ui.form.on('Sales Invoice', {\n\trefresh(frm) {\n\t    //frm.clear_table(\"items\");\n\t    \n\t    var customer = frm.doc.customer;\n\t    console.log(customer);\n\t    if (customer !== undefined){\n    \t    var start_date = frappe.datetime.get_today();\n    \t    //var start_date = frm.doc.start_date;\n    \t    console.log(start_date);\n    \t\tfrm.fields_dict[\"items\"].grid.add_custom_button(__('Additional'), \n    \t\t\tfunction() {\n    \t\t\t   \n    \t\t\t\n                    new frappe.ui.form.MultiSelectDialog({\n                        doctype: \"Renewal List\",\n                        \n                        target: this.cur_frm,\n                        \n                        setters: {\n                            product_name: null,\n                            status: 'Active',\n                            end_date:null\n                           \n                            //customer:customer.toString()\n                        },\n                        add_filters_group: 1,\n                        //date_field: \"transaction_date\",\n                        //allow_child_item_selection: 1,\n                        child_fieldname: \"items\",\n                        child_columns: [\"item_name\",\"item_code\", \"service_end_date\"],\n                        get_query() {\n                           // return query_args;\n                            return {\n                              filters: {\n                                  \"customer_name\": ['=', frm.doc.customer],\n                                  docstatus: ['!=', 2]\n                                 \n                              }\n                            }\n                            \n                        },\n                        action(selections, args) {\n                            //console.log(args); // list of selected item names\n                            console.log(\"Selections \"+ selections);\n                            //console.log(len(child))\n                            var items = [];\n                            \n                            $.each(selections,function(i, d){\n                                \n                                var child = frm.add_child('items');\n                                console.log(\"d \"+d);\n                                frappe.call({\n                                    method:\"frappe.client.get\",\n                                    args:{\n                                        doctype:\"Renewal List\",\n                                        filters:{\n                                            \"name\":d\n                                        }\n                                    },\n                                    callback:function(res){\n                                        console.log(res.message);\n                                        var data = res.message;\n                                        var item_data = data.items[0];\n                                        //console.log(item_data);\n                                        var end_date = res.message.end_date;\n                                        console.log(\"items\"+frm.doc.items);\n                                        var item_list = frm.doc.items;\n                                        console.log(item_list);\n                                        if (start_date < end_date){\n                                            $.each(item_list,function(i, d){\n                                                console.log(\"r\"+ d);\n                                            });\n                                            if((frm.doc.items).includes(data.product_name)){\n                                                frappe.msgprint({\n                                                    title: __('Notification'),\n                                                    message: __('Added successfully'),\n                                                    \n                                                });\n                                                \n                                            }    \n                                            else{\n                                                child.item_code = item_data.item_code;\n                                                child.item_name = item_data.item_name;\n                                                child.end_date = end_date;\n                                                \n                                                child.newadd = \"Additional\";\n                                                child.renewal_id = item_data.renewal_id;\n                                                child.uom = item_data.uom;\n                                                \n                                                child.conversion_factor = data.conversion_factor;\n                                                \n                                                child.description = item_data.description;\n                                                frm.refresh_field(\"items\");\n                                                \n                                                \n                                                \n                                                // to get months difference i wrote like this\n                                                \n                                                var diff = month_diff(new Date(start_date), new Date(end_date) )\n                                                //console.log(\"diff \"+ diff);\n                                                \n                                                //here we have to get price of item\n                                                frappe.model.get_value(\"Item Price\",{\"item_code\":data.product_name,\"price_list\":\"Standard Selling\"},\"price_list_rate\",function(d){\n                                                    //console.log(d.price_list_rate)\n                                                    frappe.call({\n                                                        method:\"frappe.client.get\",\n                                                        args:{\n                                                            doctype:\"Item\",\n                                                            filters:{\n                                                                \"name\":data.product_name,\n                                                                \n                                                            }\n                                                        },\n                                                        callback:function(r){\n                                                            //console.log(r.message);\n                                                            var item_tenure = r.message.years;\n                                                            var rate_amount = \"\";\n                                                            if (r.message.renewal_option === \"Yes\" ){\n                                                                if(r.message.years !== \"0\" ){\n                                                                    console.log(\"you are here\" + diff);\n                                                                    rate_amount = (parseInt(d.price_list_rate)* parseInt(diff)) / (parseInt(r.message.years)*12);\n                                                                    //console.log(parseInt(item_price)* parseInt(diff) * parseInt(r.message.years) * 12)\n                                                                    \n                                                                    \n                                                                }\n                                                                if(r.message.months !== \"0\" ){\n                                                                    console.log(\"you are here\");\n                                                                    rate_amount = (parseInt(d.price_list_rate)* parseInt(diff)) / (parseInt(r.message.months));\n                                                                    \n                                                                }\n                                                                child.rate = rate_amount;\n                                                                child.start_date = start_date;\n                                                                child.income_account = \"Sales - 6S\";\n                                                                frm.refresh_field(\"items\");\n                                                            \n                                                                \n                                                            }\n                                                        \n                                                        }\n                                                    });\n                                                });\n                                            \n                                            }   \n                                            \n                                        }\n                                        \n                                        frm.refresh_field(\"items\");\n                                         \n                                    }\n                                });\n                            });\n                            \n                        }\n                    });\n    \t\t\t\t\n            });\n            frm.fields_dict[\"items\"].grid.grid_buttons.find('.btn-custom').removeClass('btn-default').addClass('btn-primary');\n            \n            \n            \t\n\t\t    setTimeout(function() {\n    \t\t    frappe.call({\n    \t\t        method: \"frappe.client.get\",\n          \t\t\targs: {\n          \t\t\t\tdoctype: \"Customer\",\n          \t\t\t\tfilters: {\n          \t\t\t\t\t\"customer_name\": frm.doc.customer\n          \t\t\t\t\t\n          \t\t\t\t},\n          \t\t\t\t\n          \t\t\t},\n          \t\t\tcallback: function(r){\n          \t\t\t    console.log(r.message);\n          \t\t\t    var data = r.message\n          \t\t\t    var company = data.accounts[0].company;\n          \t\t\t    var address = company + \"-Billing\"\n          \t\t\t    console.log(company)\n          \t\t\t   // frm.doc.sales_team = []\n          \t\t\t   // var child = frm.add_child('sales_team');\n          \t\t\t   // r.message.sales_team.forEach(function(each){\n          \t\t\t   //     child.sales_person = each.sales_person;\n          \t\t\t   //     child.\n          \t\t\t   // })\n          \t\t\t    \n          \t\t\t    cur_frm.set_value(\"tax_category\",r.message.tax_category);\n          \t\t\t    cur_frm.refresh_field(\"tax_category\");\n          \t\t\t    cur_frm.set_value(\"company\",company);\n          \t\t\t    cur_frm.refresh_field(\"company\");\n          \t\t\t    cur_frm.set_value(\"company_address\",address);\n          \t\t\t    cur_frm.refresh_field(\"company_address\");\n          \t\t\t    \n          \t\t\t    \n          \t\t\t}\n    \t\t    });\n\t\t    }, 2000) ; \n\t\t    \n\t\t    setTimeout(function() {\n  \t\t        console.log(frm.doc.company_gst);\n              \tif(frm.doc.company_address === \"64 Network Security - TN-Billing\"){\n    \t\t        cur_frm.set_value(\"tc_name\",\"TN - Terms and Conditions\");\n    \t\t        cur_frm.refresh_field(\"tc_name\");\n    \t\t    }\n    \t\t    else{\n    \t\t        cur_frm.set_value(\"tc_name\",\"Standard_Terms and Conditions\");\n    \t\t        cur_frm.refresh_field(\"tc_name\");\n    \t\t    }\n\t\t    \n          \t}, 1000);  \n\t\t    \n\t\t   frm.set_query(\"user_name\",\"contact_list\",function(doc,cdt,cdn){\n              return{\n                  filters:{\n                      company_name: frm.doc.customer\n                  }\n              }\n          })\n             \n\t\n\t    }  \n\t    \n\t    if ( frm.doc.__islocal ){\n\t        console.log(frm.doc);\n            console.log(\"this is if cond\");\n            var email_user=frappe.user_info().email;\n            console.log(email_user);\n            frappe.model.get_value('Employee',{'user_id':email_user},['employee_name','name','cell_number'],function(d){\n                console.log(d)\n            frappe.model.get_value('Sales Person',{'employee':d.name},['parent_sales_person'],function(s){\n            //console.log('Employee Name', d.employee_name,s,s.sales_person_name);\n           \n                    var name_of_team = s.parent_sales_person;\n                    console.log(name_of_team);\n                    \n            \t\t\n            \t\t\n            \t\tfrm.doc.accounts_team = [];\n            \t\tvar child = frm.add_child(\"accounts_team\");\n            \t\tchild.accounts_person = d.employee_name;\n            \t\tchild.team_name = name_of_team;\n            \t\tchild.mobile_no = d.cell_number;\n                    child.email_id = email_user;\n            \t\tchild.contribution_ = 100;\n            \t\tfrm.refresh_field('accounts_team');\n      \t\t\n            \n    \n            \n                \n                });\n             });\n             \n            if(frm.doc.customer !== undefined && frm.doc.items.length >= 0){\n                frm.doc.items.forEach(function(child){\n                    if(child.item_code !== \"\"){\n                        var start_date = frappe.datetime.get_today();\n                        child.start_date =  start_date;\n                        \n                        \n        \t    \n        \t    frappe.call({\n        \t        method:\"frappe.client.get\",\n        \t        args:{\n        \t            doctype:\"Item\",\n        \t            filters:{\n        \t                \"name\":child.item_code\n        \t            }\n        \t        },\n        \t        callback:function(r){\n        \t            console.log(r.message);\n        \t            console.log(\"hello\");\n        \t            var data = r.message;\n        \t            var renewal = data.renewal_option;\n        \t            var tenure = data.tenure;\n        \t            var months = data.months;\n        \t             var years = data.years;\n        \t             \n        \t            if (renewal === \"Yes\"){\n        \t                var new_date = start_date.split(\"-\");\n        \t                 \n        \t                 var final_year = \"\";\n        \t                if(tenure === \"Years\" && years !== \"0\"){\n        \t                        \n        \t                        final_year = get_year_end_date(new_date, years);\n        \t                        \n                                  \n                                     //console.log(final_year);\n                                     child.start_date = start_date;\n                                     child.end_date = final_year;\n                                     frm.refresh_field(\"items\") ;\n        \n        \n                                \t                        \n        \t                }\n        \t                if (tenure === \"Months\" && months !==\"0\"){\n        \t                    final_year = get_month_end_date(new_date, months)\n        \t                \n                                console.log(final_year);\n                                child.start_date = start_date;\n                                child.end_date = final_year;\n                                frm.refresh_field(\"items\") ;\n                            }\n                                \t                \n        \t           }\n        \t            else{\n        \t                child.start_date = start_date;\n                            child.end_date = start_date;\n                            frm.refresh_field(\"items\") ;\n        \t            }\n        \t        }\n        \t    });\n        \t\n    \t\n                    }\n                });\n            } \n         }\n        \n        \n         \n    //     else{\n    //          console.log(frm.doc.accounts_team[0].accounts_person);\n    //         var user = frm.doc.accounts_team[0].accounts_person;\n    //         console.log(\"we have to get sales user\");\n    //         //cur_frm.set_value(\"sales_person\", user);\n    //  \t\t//cur_frm.refresh_fields(\"sales_person\");\n       \n    //         frappe.call({\n    //             method:\"frappe.client.get\",\n\t   //         args: {\n\t   //             doctype:\"User\",\n\t\t  //          filters: {'full_name': user\n\t   // \t         },\n\t   //         },\n\t   //     callback: function(r) {\n\t   //         email_user = r.message.name;\n\t            \n\t   //         console.log(email_user);\n\t           \n\t            \n\t   //              frappe.model.get_value('Employee',{'user_id':email_user},'name',function(d){\n\t   //                  console.log(d);\n\t   //                  console.log(d.name);\n\t                     \n    // \t               frappe.model.get_value('Sales Person',{'employee':d.name},['parent_sales_person'],function(s){\n    //                     console.log(s);\n    //                     //console.log('Employee Name', d.name,d.employee_name,s,s.sales_person_name);\n    //                     name_of_team = s.parent_sales_person;\n    //                     //console.log(name_of_team)\n    //                     cur_frm.set_value('team_name',name_of_team);\n    //             \t\tcur_frm.refresh_fields(\"team_name\");\n    //             \t\tcur_frm.set_value(\"creator\", user);\n    //             \t\tcur_frm.refresh_fields(\"creator\");\n\t\t\n        \n                        \n    //                     });\n    //                  });\n    //             }\n    //       });\n    //     } \n\t},\n\t\n\n\t    \n\n});\n\nfrappe.ui.form.on('Sales Invoice Item',{\n    item_code:function(frm,cdt, cdn) {\n        //console.log(frm)\n        \n        var start_date = frappe.datetime.get_today();\n        //console.log(start_date);\n    \tvar child = locals[cdt][cdn];\n    \t//console.log(child.item_code)\n    \t\n    \tif (child.item_code !== \"\"){\n    \t    //console.log(child);\n        \tchild.start_date = [];\n            child.end_date = [];\n        \tvar newadd = child.newadd;\n        \t//console.log(newadd);\n        \t//var end_date = child.end_date;\n        \t//console.log(end_date);\n        \t\n        \tvar item_code = child.item_code;\n        \tvar item_name = child.item_name;\n        \t//console.log(item_code);\n        \t\n        \tif(child.newadd == \"New\" ){\n        \t    \n        \t    frappe.call({\n        \t        method:\"frappe.client.get\",\n        \t        args:{\n        \t            doctype:\"Item\",\n        \t            filters:{\n        \t                \"name\":item_code\n        \t            }\n        \t        },\n        \t        callback:function(r){\n        \t            //console.log(r.message);\n        \t            var data = r.message;\n        \t            var renewal = data.renewal_option;\n        \t            var tenure = data.tenure;\n        \t            var months = data.months;\n        \t             var years = data.years;\n        \t             \n        \t            if (renewal === \"Yes\"){\n        \t                var new_date = start_date.split(\"-\");\n        \t                 \n        \t                 var final_year = \"\";\n        \t                if(tenure === \"Years\" && years !== \"0\"){\n        \t                        \n        \t                        final_year = get_year_end_date(new_date, years);\n        \t                        \n                                  \n                                     //console.log(final_year);\n                                     child.start_date = start_date;\n                                     child.end_date = final_year;\n                                     frm.refresh_field(\"items\") ;\n        \n        \n                                \t                        \n        \t                }\n        \t                if (tenure === \"Months\" && months !==\"0\"){\n        \t                    final_year = get_month_end_date(new_date, months)\n        \t                \n                                console.log(final_year);\n                                child.start_date = start_date;\n                                child.end_date = final_year;\n                                frm.refresh_field(\"items\") ;\n                            }\n                                \t                \n        \t           }\n        \t            else{\n        \t                child.start_date = start_date;\n                            child.end_date = start_date;\n                            frm.refresh_field(\"items\") ;\n        \t            }\n        \t        }\n        \t    });\n        \t}\n    \t}\n    \t\n    \tif (child.item_code !== \"\" && child.idx === 1){\n\t        frm.doc.taxes = []\n\t        //console.log(child)\n\t        console.log(\"hello world\")\n\t    }\n\t    \n\t    setTimeout(function() {\n\t        \n    \t    if(child.item_code !== \"\"){\n    \t        console.log(frm.doc.taxes);\n    \t        \n    \t        frm.doc.taxes.forEach(function(each){\n    \t            //console.log(each)\n    \t            var account = each.account_head.split(\" - \")\n    \t            //console.log(account)\n    \t            var account_list = account[0].split(\" \")\n    \t            console.log(account_list)\n    \t            if(account_list.includes(\"2.5%\") && frm.doc.taxes){\n    \t                each.rate = \"2.5\";\n    \t                frm.refresh_field('taxes');\n    \t            }\n    \t            if(account_list.includes(\"5%\")){\n    \t                each.rate = \"5\";\n    \t                frm.refresh_field('taxes');\n    \t            }\n    \t            if(account_list.includes(\"6%\")){\n    \t                each.rate = \"6\";\n    \t                frm.refresh_field('taxes');\n    \t            }\n    \t            if(account_list.includes(\"9%\")){\n    \t                each.rate = \"9\";\n    \t                frm.refresh_field('taxes');\n    \t            }\n    \t            if(account_list.includes(\"12%\")){\n    \t                each.rate = \"12\";\n    \t                frm.refresh_field('taxes');\n    \t            }\n    \t            if(account_list.includes(\"14%\")){\n    \t                each.rate = \"14\";\n    \t                frm.refresh_field('taxes');\n    \t            }\n    \t            if(account_list.includes(\"18%\")){\n    \t                each.rate = \"18\";\n    \t                frm.refresh_field('taxes');\n    \t            }\n    \t            if(account_list.includes(\"28%\")){\n    \t                each.rate = \"28\";\n    \t                frm.refresh_field('taxes');\n    \t            }\n    \t        });\n    \t    }\n\t    }, 3000)    \n\t},\n\t\n\tstart_date:function(frm,cdt, cdn){\n\t    var child = locals[cdt][cdn];\n\t    \n\t    \n\t    if (child.item_code !== \"\" && child.newadd === \"New\" && child.start_date !== undefined){\n\t            var date = child.start_date;\n        \t    \n        \t    frappe.call({\n        \t        method:\"frappe.client.get\",\n        \t        args:{\n        \t            doctype:\"Item\",\n        \t            filters:{\n        \t                \"name\":child.item_code\n        \t            }\n        \t        },\n        \t        callback:function(r){\n        \t            console.log(r.message);\n        \t            var data = r.message;\n        \t            var renewal = data.renewal_option;\n        \t            var tenure = data.tenure;\n        \t            var months = data.months;\n        \t            var years = data.years;\n        \t             \n        \t            var new_date = date.split(\"-\");\n        \t            \n        \t            if (renewal === \"Yes\" && tenure === \"Years\" && years !== \"0\"){\n                    \t    var final_year = get_year_end_date(new_date, years)\n                            //console.log(final_year);\n                            // child.start_date = start_date;\n                             child.end_date = final_year;\n                             \n    \t                }\n    \t                else if (renewal === \"Yes\" && tenure === \"Months\" && months !==\"0\"){\n    \t                     var final_date = get_month_end_date(new_date, months)\n                            //console.log(final_year);\n                            // child.start_date = start_date;\n                             child.end_date = final_date;\n    \t                }     \n    \t                else{\n    \t                    child.end_date = date;\n    \t                }\n    \t                frm.refresh_field(\"items\") ;\n        \t                \n        \t       }   \n        \t    });  \n\t    }\t    \n\n\t}\n});\n\nfrappe.ui.form.on('Renewal Contacts',{\n    user_name:function(frm,cdt, cdn) {\n        \n        \n        var child = locals[cdt][cdn];\n\t\n\t    let person = child.user_name\n\t    \n  \t\tvar name_list = [];\t\t\n\t    if(person !== undefined){\n  \t\t\t\t    //console.log(\"hello\")\n  \t\t\t\t    //console.log(frm.doc.contact_person)\n  \t\t\t\t    frappe.call({\n  \t\t\t\t        method: \"frappe.client.get\",\n              \t\t\targs: {\n              \t\t\t\tdoctype: \"Contact\",\n              \t\t\t\tfilters: {\n              \t\t\t\t\t\"name\": person\n              \t\t\t\t}\n              \t\t\t\t\n              \t\t\t},\n              \t\t\tcallback: function(r){\n              \t\t\t    console.log(frm.doc.contact_list)\n              \t\t\t    \n              \t\t\t        \n                                \n                                child.mobile_no = r.message.phone;\n                                child.email_id = r.message.email_id;\n                                child.designation = r.message.designation;\n                                cur_frm.refresh_field(\"contact_list\");\n                  \t\t\t    \n                                \n        \n              \t\t\t}\n  \t\t\t\t    });\n  \t\t\t\t}\n\t}\n});\n\nfunction month_diff(d1, d2) {\n    var months;\n    var year = (d2.getFullYear() - d1.getFullYear()) ;\n    \n    \n    \n    if (d2.getMonth() < d1.getMonth()){\n        \n        year = year -1;\n        months = (12 + d2.getMonth()) - d1.getMonth() + (year *12) + 1\n    }\n    else{\n        months = (d2.getMonth() - d1.getMonth()) + (year * 12) +1\n    }\n    \n    return months <= 0 ? 0 : months;\n}\n\nfunction get_year_end_date(new_date, years){\n    var new_year = \"\";\n    var end_date = \"\";\n    if(new_date[2] == \"01\"){\n    \t                            \n        if(new_date[1] === \"03\" ){\n             new_year = parseInt(new_date[0]) + parseInt(years) ;\n             if (new_year % 100 === 0 ){\n                 if(new_year % 400 === 0){\n                     new_date[2] = \"29\";\n                 } \n                 else{\n                     new_date[2] = \"28\";\n                 }\n             }\n             else if(new_year % 4 === 0){\n                 new_date[2] = \"29\";\n             }\n             else{\n                 new_date[2] = \"28\";\n             }\n             new_date[0] = new_year.toString();\n             new_date[1] = (parseInt(new_date[1]) - 1).toString();\n         }\n         else if(new_date[1] === \"01\" || new_date[1] ===\"02\" || new_date[1] ===\"04\" ||new_date[1] ===\"06\" || new_date[1] ===\"08\" || new_date[1] ===\"09\" ||  new_date[1] ===\"11\"){\n             if (new_date[1] === \"01\"){\n                 new_year = parseInt(new_date[0]) + parseInt(years) - 1 ;\n                \n                 new_date[0] = new_year.toString();\n                 new_date[1] = \"12\";\n             }\n             else{\n                 new_year = parseInt(new_date[0]) + parseInt(years) ;\n                 \n                 new_date[0] = new_year.toString();\n                 new_date[1] = (parseInt(new_date[1]) - 1).toString();\n             }\n             new_date[2] = \"31\";\n         }\n         else if(new_date[1] === \"05\" ||  new_date[1] ===\"07\" ||  new_date[1] ===\"10\" ||  new_date[1] ===\"12\") {\n             new_year = parseInt(new_date[0]) + parseInt(years) ;\n             \n             new_date[0] = new_year.toString();\n             new_date[1] = (parseInt(new_date[1]) - 1).toString();\n             new_date[2] = \"30\";\n             \n         }\n         end_date = new_date.join(\"-\");\n         return end_date;\n         \n     \n   }\n   \n    else{\n        new_year = parseInt(new_date[0]) + parseInt(years) ;\n        new_date[0] = new_year.toString();\n        new_date[2] = (parseInt(new_date[2]) - 1).toString();\n        new_date[1] = parseInt(new_date[1]).toString();\n        end_date = new_date.join(\"-\");\n        return end_date;\n        \n    }  \n}\n\nfunction get_month_end_date(new_date, months){\n    var month_date = []\n   Date.isLeapYear = function (year) { \n        return (((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0)); \n    };\n    \n    Date.getDaysInMonth = function (year, month) {\n        return [31, (Date.isLeapYear(year) ? 29 : 28), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month];\n    };\n    \n    Date.prototype.isLeapYear = function () { \n        return Date.isLeapYear(this.getFullYear()); \n    };\n    \n    Date.prototype.getDaysInMonth = function () { \n        return Date.getDaysInMonth(this.getFullYear(), this.getMonth());\n    };\n    \n    Date.prototype.addMonths = function (value) {\n        var n = this.getDate();\n        //console.log(typeof(value), value)\n        //console.log(n)\n        this.setDate(1);\n        if (value === 1 && n === 1){\n            console.log(\"error\")\n            this.setMonth(this.getMonth());\n            \n            var month = this.getMonth()\n            var year = this.getFullYear()\n            var new_month = \"\"\n            switch(month){\n            case 1:\n              new_date = Date.isLeapYear(year) ? 29 : 28;\n              break;\n            case 3: case 5: case 8: case 10:\n              new_date = 30;\n              break;\n            default:\n              new_date = 31;\n          }\n          console.log(new_date)\n          this.setDate(Math.min(new_date, this.getDaysInMonth()));\n          return this;\n        }\n        \n        else{\n            this.setMonth(this.getMonth() + value);\n            var new_value = this.getDaysInMonth()\n            console.log(\"new_value:\" + typeof(new_value))\n            this.setDate(Math.min(n-1, this.getDaysInMonth()));\n            return this;\n        }\n        \n    };\n    var myDate = new Date(new_date);\n    var result1 = myDate.addMonths(parseInt(months));\n    // console.log(result1)\n    // console.log(result1.getFullYear())\n    // console.log(result1.getMonth())\n    // console.log(result1.getDate())\n    month_date.push(result1.getFullYear());\n    month_date.push(result1.getMonth()+ 1);\n    month_date.push(result1.getDate());\n    \n    var final_year = month_date.join(\"-\");\n    \n    return final_year;\n}\n\n\n\n\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2023-12-12 17:31:34.707110",
  "module": "Renewal Module",
  "name": "Customer-Form",
  "script": "frappe.ui.form.on('Customer', {\n    refresh: function(frm) { \n        let sales_person= \"\" ;\n        let name_of_team =\"\";\n        let email_user= \"\" ;\n        if ( frm.doc.__islocal ){\n            // console.log(\"this is if cond\");\n            email_user=frappe.user_info().email;\n            // console.log(email_user);\n            frappe.model.get_value('Employee',{'user_id':email_user},['employee_name','cell_number'],function(d){\n                // console.log(d);\n                //get_reports_to(d.reports_to)\n                \n            frappe.model.get_value('Sales Person',{'employee':d.name},['parent_sales_person'],function(s){\n            //console.log('Employee Name', d.employee_name,s,s.sales_person_name);\n            name_of_team = s.parent_sales_person;\n            \n            cur_frm.set_value('team_name',name_of_team);\n    \t\tcur_frm.refresh_fields(\"team_name\");\n    \t\tcur_frm.set_value(\"sales_person\", d.employee_name);\n    \t\tcur_frm.refresh_fields(\"sales_person\");\n    \t\tcur_frm.set_value(\"account_manager\", email_user);\n    \t\tcur_frm.refresh_fields(\"account_manager\");\n    \t\t\n    \t\tfrm.doc.sales_team = [];\n    \t\tvar child = frm.add_child(\"sales_team\");\n    \t\tchild.sales_person = d.employee_name;\n    \t\tchild.team_name = name_of_team;\n    \t\tchild.mobile_no = d.cell_number;\n            child.email_id = email_user;\n    \t\tchild.allocated_percentage = 100;\n    \t\tfrm.refresh_field('sales_team');\n    \t\t\n    \t\t\n                });\n            \n             });\n             \n             \n             \n         }\n         \n        \n     \n     \n        else{\n            //get_sales_teams_members(\"hello\");\n            // console.log(\"enter subscription\");\n            \n            var user = frm.doc.sales_team[0].sales_person;\n            \n    \n        }\n    },\n    \n//   before_save:function(frm){\n//       frappe.call({\n//           \t\t    method: \"frappe.client.get_list\",\n          \t\t    \n//           \t\t\targs: {\n//           \t\t\t\tdoctype: \"Renewal List\",\n//           \t\t\t\tfields:[\"product_name\",\"name\"],\n//           \t\t\t\tfilters: {\n//           \t\t\t\t\t\"customer_name\": frm.doc.customer_name,\n//           \t\t\t\t\t\"status\":\"Active\"\n          \t\t\t\t\n//           \t\t\t\t}\n          \t\t\t\t\n//           \t\t\t},\n//           \t\t\tcallback: function(r) {\n//           \t\t\t    var data = r.message;\n          \t\t\t    \n          \t\t\t    \n//           \t\t\t    console.log(r);\n          \t\t\t   \n//           \t\t\t    var active_items = [];\n//           \t\t\t    data.forEach(function(item){\n//           \t\t\t        //console.log(\"item \"+item.product_name)\n//           \t\t\t        if (active_items.includes(item.name)) {\n//                               //pass\n//                             }\n//                             else{\n//                               active_items.push(item.name);\n//                             }\n                          \n                          \n                         \n//           \t\t\t    });\n//           \t\t\t    console.log(\"d\" + active_items);\n//           \t\t\t    active_items.sort();\n//           \t\t\t    active_items.reverse();\n//           \t\t\t    console.log(active_items);\n//           \t\t\t    //set_field_options(\"active_subscription\",active_items)\n//           \t\t\t   active_items.forEach(function(each){\n//           \t\t\t       console.log(each);\n//           \t\t\t       frappe.call({\n//             \t            method: \"frappe.client.get\",\n              \t\t    \n//                   \t\t\targs: {\n//                   \t\t\t\tdoctype: \"Renewal List\",\n                  \t\t\t\t\n//                   \t\t\t\tfilters: {\n//                   \t\t\t\t\t\"customer_name\": frm.doc.customer_name,\n//                   \t\t\t\t\t\"name\":each,\n//                   \t\t\t\t\t\"status\":\"Active\"\n                  \t\t\t\t\n//                   \t\t\t\t}\n                  \t\t\t\t\n//                   \t\t\t},\n//                   \t\t\tcallback: function(r){\n//                   \t\t\t    //console.log(r.message)\n//                   \t\t\t    active_renewals(r.message.name);\n//                   \t\t\t}\n//             \t        });\n//           \t\t\t   }) ;\n          \t\t\t    \n//                     }\n                        \n          \t\t\t\n//           \t\t}); \n//       frappe.call({\n//           \t\t    method: \"frappe.client.get_list\",\n          \t\t    \n//           \t\t\targs: {\n//           \t\t\t\tdoctype: \"Renewal List\",\n//           \t\t\t\tfields:[\"product_name\"],\n//           \t\t\t\tfilters: {\n//           \t\t\t\t\t\"customer_name\": frm.doc.customer_name,\n//           \t\t\t\t\t\"status\":\"New Opp\"\n          \t\t\t\t\n//           \t\t\t\t}\n          \t\t\t\t\n//           \t\t\t},\n//           \t\t\tcallback: function(r) {\n//           \t\t\t    var data = r.message;\n          \t\t\t    \n          \t\t\t    \n//           \t\t\t    console.log(r);\n          \t\t\t   \n//           \t\t\t    var new_items = [];\n//           \t\t\t    data.forEach(function(item){\n//           \t\t\t        //console.log(\"item \"+item.product_name)\n//           \t\t\t        if (new_items.includes(item.product_name)) {\n//                               //pass\n//                             }\n//                             else{\n//                               new_items.push(item.product_name);\n//                             }\n                          \n                          \n                         \n//           \t\t\t    });\n//           \t\t\t    console.log(\"d\" + new_items);\n//           \t\t\t    //set_field_options(\"active_subscription\",active_items)\n//           \t\t\t   new_items.forEach(function(each){\n//           \t\t\t       console.log(each);\n//           \t\t\t       frappe.call({\n//             \t            method: \"frappe.client.get\",\n              \t\t    \n//                   \t\t\targs: {\n//                   \t\t\t\tdoctype: \"Renewal List\",\n                  \t\t\t\t\n//                   \t\t\t\tfilters: {\n//                   \t\t\t\t\t\"customer_name\": frm.doc.customer_name,\n//                   \t\t\t\t\t\"product_name\":each,\n//                   \t\t\t\t\t\"status\":\"New Opp\"\n                  \t\t\t\t\n//                   \t\t\t\t}\n                  \t\t\t\t\n//                   \t\t\t},\n//                   \t\t\tcallback: function(r){\n//                   \t\t\t    //console.log(r.message)\n//                   \t\t\t    new_renewals(r.message.name);\n//                   \t\t\t}\n//             \t        });\n//           \t\t\t   }) ;\n          \t\t\t    \n//                     }\n                        \n          \t\t\t\n//           \t\t});      \t\t\n//   },\n    \n    \n    customer_primary_address: function(frm){\n        // console.log(frm.doc);\n        var name = frm.doc.customer_primary_address;\n        if(name){\n            frappe.call({\n                \"method\": \"frappe.client.get\",\n                args:{\n                    doctype:\"Address\",\n                    name: name,\n                    address_type: \"Billing\"\n                },\n                callback:function(r){\n                    console.log(r);\n                    var data = r.message;\n                    \n                    setTimeout(function(){\n                        if(frm.doc.territory){\n                            var state = data.state;\n                            frappe.call({\n                              \"method\": \"frappe.client.get_list\",\n                                args: {\n                                    doctype: \"Company\",\n                                    \n                                    \n                                },\n                                callback: function(r){\n                                    console.log(r.message);\n                                    var company_states = [];\n                                    var i = 0;\n                                    r.message.forEach(function(each){\n                                        var name = each.name + \"-Billing\";\n                                        frappe.model.get_value('Address',{'name':name}, 'gst_state', function(d){\n                                            \n                                            \n                                            \n                                            i = i + 1;\n                                            if (d.gst_state === state){\n                                                list_of_gst_states(each.name,state);\n                                                \n                                                company_states.push(d.gst_state);\n                                                \n                                            }\n                                            else if (i === parseInt(r.message.length) && company_states.length === 0){\n                                                console.log(\"error\");\n                                                list_of_gst_states(\"64 Network Security Pvt Ltd - TG\",\"Telangana\");\n                                            }\n                                            \n                                            \n                                        });\n                                        \n                                    });\n                                    \n                                    \n                                }\n                            });\n                        }\n                    }, 4000);\n                }\n            })\n        }\n    },\n    \n    onload: function(frm) {\n\n        frm.get_field('active_renewals').grid.cannot_add_rows = true;\n        frm.get_field('new_renewals').grid.cannot_add_rows = true;\n        frm.get_field('managed_services').grid.cannot_add_rows = true;\n    },    \n    \n    territory:function(frm){\n        var territory = frm.doc.territory;\n        console.log(territory)\n        if(territory !== undefined){\n            if(territory === \"Telangana\"){\n                cur_frm.set_value(\"tax_category\",\"In-State - TG\");\n                cur_frm.refresh_field(\"tax_category\");\n            }\n            else if(territory === \"Tamil Nadu\"){\n                cur_frm.set_value(\"tax_category\",\"In-State - TN\");\n                cur_frm.refresh_field(\"tax_category\");\n            }\n            else{\n                cur_frm.set_value(\"tax_category\",\"Out-State - TG\");\n                cur_frm.refresh_field(\"tax_category\");\n            }\n        }\n    }\n});\n\n\n\nfrappe.ui.form.on('Sales Team', {\n\tsales_person:function(frm){\n\t    //console.log(frm);\n\t     //console.log(frm.doc.sales_team[0].sales_person);\n            var user = frm.doc.sales_team[0].sales_person;\n            //console.log(\"we have to get sales user\");\n            //cur_frm.set_value(\"sales_person\", user);\n     \t\t//cur_frm.refresh_fields(\"sales_person\");\n       \n            frappe.call({\n                method:\"frappe.client.get\",\n\t            args: {\n\t                doctype:\"User\",\n\t\t            filters: {'full_name': user\n\t    \t         },\n\t            },\n\t        callback: function(r) {\n\t            var email_user = r.message.name;\n\t            \n\t            //console.log(email_user);\n\t            //console.log(\"bdnvksndkvnksjdn\");\n\t            \n\t                 frappe.model.get_value('Employee',{'user_id':email_user},'name',function(d){\n\t                     //console.log(d);\n\t                     //console.log(d.name);\n\t                     \n    \t               frappe.model.get_value('Sales Person',{'employee':d.name},['parent_sales_person'],function(s){\n                        console.log(s);\n                        //console.log('Employee Name', d.name,d.employee_name,s,s.sales_person_name);\n                        var name_of_team = s.parent_sales_person;\n                        //console.log(name_of_team)\n                        cur_frm.set_value('team_name',name_of_team);\n                \t\tcur_frm.refresh_fields(\"team_name\");\n                \t\tcur_frm.set_value(\"sales_person\", user);\n                \t\tcur_frm.refresh_fields(\"sales_person\");\n                \t\t\n\t\t\n        \n                        \n                        });\n                     });\n                }\n          });\n          \n          \n\t}\n});\n\nfrappe.ui.form.on('Sales Team', {\n\tsales_person:function(frm, cdt, cdn){\n\t    var child = locals[cdt][cdn];\n\t    console.log(child.sales_person);\n\t    frappe.model.get_value('Employee',{'employee_name':child.sales_person},'name',function(d){\n\t        console.log(d);\n    \t    frappe.model.get_value('Sales Person',{'employee':d.name},['parent_sales_person'],function(s){\n                //console.log('Employee Name', d.employee_name,s,s.sales_person_name);\n                console.log(s);\n                let name_of_team = s.parent_sales_person;\n                \n        \t\t\n        \t\t\n        \t\t\n        \t\tchild.team_name = name_of_team;\n        \t\t\n        \t\tcur_frm.refresh_field('sales_team');\n        \n                \n                    \n            });\n\t    });    \n\t}\n});\n\n\n\n\n\n\nfunction active_renewals(name){\n    cur_frm.doc.active_renewals = []\n    frappe.call({\n        method: \"frappe.client.get\",\n        args:{\n            doctype: \"Renewal List\",\n      \t\tfilters: {\n      \t\t\t\"name\": name\n      \t\t\n      \t\t}\n          \n          },\n         \n          callback:function(res){\n              //console.log(res)\n              \n              var item = res.message\n              var child = cur_frm.add_child(\"active_renewals\")\n              child.item = item.product_name;\n              child.end_date = item.end_date;\n              child.start_date = item.start_date;\n              child.quantity = item.total_quantity;\n              child.amount = item.total_amount;\n              child.renewal_id=name;\n              cur_frm.refresh_field(\"active_renewals\");\n              \n          }\n    })\n}\n\nfunction new_renewals(name){\n    cur_frm.doc.new_renewals = []\n    frappe.call({\n        method: \"frappe.client.get\",\n        args:{\n            doctype: \"Renewal List\",\n      \t\tfilters: {\n      \t\t\t\"name\": name\n      \t\t\n      \t\t}\n          \n          },\n         \n          callback:function(res){\n              //console.log(res)\n              \n              var item = res.message\n              var child = cur_frm.add_child(\"new_renewals\")\n              child.item = item.product_name;\n              child.end_date = item.end_date;\n              child.start_date = item.start_date;\n              child.quantity = item.total_quantity;\n              child.amount = item.total_amount;\n              cur_frm.refresh_field(\"new_renewals\");\n              \n          }\n    })\n}\n\n\n\nfunction list_of_gst_states(company, state){\n    cur_frm.doc.accounts = []\n    frappe.call({\n        \"method\": \"frappe.client.get\",\n        args: {\n            doctype: \"Company\",\n            filters: {\n      \t\t\t\"name\": company\n      \t\t\n      \t\t}\n            \n        },\n        callback:function(r){\n            console.log(r);\n            \n            var child = cur_frm.add_child(\"accounts\");\n        \n            child.company = company;\n            child.account = r.message.default_receivable_account;\n            cur_frm.refresh_field(\"accounts\");\n            \n        }\n    })\n}\n\n\n\n\n\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Call List",
  "enabled": 1,
  "modified": "2023-03-26 13:47:22.339147",
  "module": "Renewal Module",
  "name": "Call List-Form",
  "script": "frappe.ui.form.on('Call List', {\n\trefresh(frm) {\n\t\t// your code here\n\t\tlet sales_person= \"\" ;\n        let name_of_team =\"\";\n        let email_user= \"\" ;\n        if ( frm.doc.__islocal ){\n            \n            email_user=frappe.user_info().email;\n            console.log(email_user);\n            frappe.model.get_value('Employee',{'user_id':email_user},['employee_name','cell_number'],function(d){\n                console.log(d);\n                //get_reports_to(d.reports_to)\n                \n            frappe.model.get_value('Sales Person',{'employee':d.name},['parent_sales_person'],function(s){\n            //console.log('Employee Name', d.employee_name,s,s.sales_person_name);\n            name_of_team = s.parent_sales_person;\n            console.log(s);\n            \n            \n    \t\t\n    \t\tfrm.doc.sales_team = [];\n    \t\tvar child = frm.add_child(\"sales_team\");\n    \t\tchild.sales_person = d.employee_name;\n    \t\tchild.team_name = name_of_team;\n    \t\tchild.mobile_no = d.cell_number;\n            child.email_id = email_user;\n    \t\tchild.allocated_percentage = 100;\n    \t\tfrm.refresh_field('sales_team');\n    \t\t\n    \t\t\n                });\n            \n             });\n             \n             \n             \n         }\n         \n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Supplier",
  "enabled": 1,
  "modified": "2023-03-26 13:46:08.427722",
  "module": "Renewal Module",
  "name": "Supplier",
  "script": "frappe.ui.form.on('Supplier', {\n// \trefresh(frm) {\n// \t\t// your code here\n\t\t\n// \t}\n    gstin:function(frm){\n        if(frm.doc.gstin !== undefined){\n            console.log(frm.doc.gstin)\n            frm.set_value(\"tax_id\",frm.doc.gstin);\n            frm.refresh_field(\"tax_id\");\n        }\n    }\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Supplier Quotation",
  "enabled": 1,
  "modified": "2023-03-26 13:47:01.063671",
  "module": "Renewal Module",
  "name": "Supplier Quotation",
  "script": "frappe.ui.form.on('Supplier Quotation', {\n\trefresh(frm) {\n\t\t// your code here\n\t\tconsole.log(\"hihihi\");\n\t\tif(frm.doc.opportunity !== undefined && frm.doc.__islocal && frm.doc.supplier !== undefined){\n\t\t    \n  \t\t    //console.log(frm.doc)\n  \t\t    setTimeout(function() {\n      \t\t    if(frm.doc.tax_category === \"In-State - TG\"){\n      \t\t        \n      \t\t        cur_frm.set_value(\"taxes_and_charges\",\"Input Tax GST - 18% - TG - 64NS-TG\");\n                    cur_frm.refresh_field(\"taxes_and_charges\");\n      \t\t    }\n      \t\t    else if(frm.doc.tax_category === \"In-State - TN\"){\n      \t\t        cur_frm.set_value(\"taxes_and_charges\",\"Input Tax GST - 18% - TN - 64NS-TN\");\n                    cur_frm.refresh_field(\"taxes_and_charges\");\n      \t\t    }\n      \t\t    if(frm.doc.tax_category === \"Out-State - TG\"){\n      \t\t        cur_frm.set_value(\"taxes_and_charges\",\"Input Tax IGST - 18% - TG - 64NS-TG\");\n                    cur_frm.refresh_field(\"taxes_and_charges\");\n      \t\t    }\n      \t\t    \n  \t\t    }, 2000);  \n          \t\t\n\t\t}\n\t\t\n\t},\n\t\n\tsupplier:function(frm){\n\t    \n\t    if(frm.doc.supplier !== undefined){\n\t\t    \n\t\t    console.log(frm.doc.supplier);\n\t\t    setTimeout(function() {\n    \t\t    frappe.call({\n    \t\t        method: \"frappe.client.get\",\n          \t\t\targs: {\n          \t\t\t\tdoctype: \"Supplier\",\n          \t\t\t\tfilters: {\n          \t\t\t\t\t\"name\": frm.doc.supplier\n          \t\t\t\t\t\n          \t\t\t\t},\n          \t\t\t\t\n          \t\t\t},\n          \t\t\tcallback: function(r){\n          \t\t\t    //console.log(r.message);\n          \t\t\t    //console.log(frm.doc)\n          \t\t\t    var gst_category = r.message.gst_category;\n          \t\t\t    console.log(gst_category);\n          \t\t\t   \n          \t\t\t        \n              \t\t\t    var data = r.message;\n              \t\t\t    var company = data.accounts[0].company;\n              \t\t\t    var address = company + \"-Billing\";\n              \t\t\t    console.log(company);\n              \t\t\t    console.log(r.message);\n              \t\t\t    console.log(\"????\");\n              \t\t\t    cur_frm.set_value(\"tax_category\",r.message.tax_category);\n              \t\t\t    cur_frm.refresh_field(\"tax_category\");\n              \t\t\t    cur_frm.set_value(\"company\",company);\n              \t\t\t    cur_frm.refresh_field(\"company\");\n              \t\t\t   \n              \t\t\t    \n              \t\t\t   \n              \t\t\t    \n              \t\t\t   // setTimeout(function() {\n              \t\t\t   //     console.log(frm.doc.company_gst);\n                    //           \tif(frm.doc.company_address === \"64 Network Security - TN-Billing\"){\n                    // \t\t        cur_frm.set_value(\"tc_name\",\"TN - Terms and Conditions\");\n                    // \t\t        cur_frm.refresh_field(\"tc_name\");\n                    // \t\t    }\n                    // \t\t    else{\n                    // \t\t        cur_frm.set_value(\"tc_name\",\"Standard_Terms and Conditions\");\n                    // \t\t        cur_frm.refresh_field(\"tc_name\");\n                    // \t\t    }\n                \t\t    \n                    //       \t}, 2000);    \n\t\t    \n          \t\t\t     \n          \t\t\t    \n          \t\t\t}\n    \t\t    });\n    \t\t    \n\t\t    }, 2000);  \n\t\t    \n\t\t    frm.set_query(\"user_name\",\"contacts_list\",function(doc,cdt,cdn){\n              return{\n                  filters:{\n                      company_name: frm.doc.supplier\n                  }\n              }\n          })\n\t\t}\n\t}\n\t\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "ORC List",
  "enabled": 1,
  "modified": "2024-01-24 11:15:39.491682",
  "module": "orc",
  "name": "orc list",
  "script": "frappe.ui.form.on('ORC List', {\n\trefresh(frm) {\n\t\t// your code here\n\t\tif(frm.doc.opportunity_id !== undefined && frm.doc.__islocal){\n\t\t    let id = frm.doc.opportunity_id;\n\t\t    console.log(id);\n\t\t    frappe.call({\n\t\t        method: \"frappe.client.get\",\n      \t\t\targs: {\n      \t\t\t\tdoctype: \"Opportunity\",\n      \t\t\t\tfilters: {\n      \t\t\t\t\t\"name\": id\n      \t\t\t\t\t\n      \t\t\t\t},\n      \t\t\t\t\n      \t\t\t},\n      \t\t\tcallback:function(res){\n      \t\t\t\t    let data = res.message;\n      \t\t\t\t    console.log(data);\n      \t\t\t\t    let items = data.items;\n      \t\t\t\t    console.log(items);\n      \t\t\t\t    frm.doc.items=[]\n                        items.forEach(function(each){\n                            \n                            console.log(each.orc)\n                            if(each.orc === 1){\n                                var child = frm.add_child(\"items\");\n                          \t        //console.log(each)\n                          \t        child.actual_qty = each.actual_qty;\n                          \t        child.additional_notes = each.additional_notes;\n                          \t        child.against_blanket_order = each.against_blanket_order;\n                          \t        child.amount = each.amount;\n                          \t        child.base_amount = each.base_amount;\n                          \t        child.base_net_amount = each.base_net_amount;\n                          \t        child.base_net_rate = each.base_net_rate;\n                          \t        child.base_price_list_rate = each.base_price_list_rate;\n                          \t        child.base_rate = each.base_rate;\n                          \t        child.base_rate_with_margin = each.base_rate_with_margin;\n                          \t        child.blanket_order = each.blanket_order;\n                          \t        child.blanket_order_rate = each.blanket_order_rate;\n                          \t        child.brand = each.brand;\n                          \t        child.conversion_factor = each.conversion_factor;\n                          \t        child.customer_item_code = each.customer_item_code;\n                          \t        child.description = each.description;\n                          \t        child.discount_amount = each.discount_amount;\n                          \t        child.discount_percentage = each.discount_percentage;\n                          \t        child.docstatus = each.docstatus;\n                          \t        child.end_date = each.end_date;\n                          \t        child.gross_profit = each.gross_profit;\n                          \t        child.gst_hsn_code = each.gst_hsn_code;\n                          \t        child.image = each.image;\n                          \t        child.item_code = each.item_code;\n                          \t        child.item_group = each.item_group;\n                          \t        child.item_name = each.item_name;\n                          \t        child.is_non_gst = each.is_non_gst;\n                          \t        child.is_nil_exempt = each.is_nil_exempt;\n                          \t        child.is_free_item = each.is_free_item;\n                          \t        child.item_tax_rate = each.item_tax_rate;\n                          \t        child.item_tax_template = each.item_tax_template;\n                          \t        child.margin_rate_or_amount = each.margin_rate_or_amount;\n                          \t        child.margin_type = each.margin_type;\n                          \t        child.net_amount = each.net_amount;\n                          \t        child.net_rate = each.net_rate;\n                          \t        child.qty = each.qty;\n                          \t        child.rate = each.rate;\n                          \t        child.renewal_status = each.renewal_status;\n                          \t        child.start_date = each.start_date;\n                          \t        child.stock_qty = each.stock_qty;\n                          \t        child.stock_uom = each.stock_uom;\n                          \t        child.stock_uom_rate = each.stock_uom_rate;\n                          \t        child.tax_rate = each.tax_rate;\n                          \t        child.total_weight = each.total_weight;\n                          \t        child.uom = each.uom;\n                          \t        child.valuation_rate = each.valuation_rate;\n                          \t        child.warehouse = each.warehouse;\n                          \t        child.weight_per_unit = each.weight_per_unit;\n                          \t        child.weight_uom = each.weight_uom;\n                          \t        child.commission_type = each.commission_type;\n                          \t        \n                          \t        if(each.commission_type === \"Value\"){\n                          \t            child.rate_value = each.rate_value;\n                          \t            child.commission_amount = each.rate_value;\n                          \t        }\n                          \t        if(each.commission_type === \"Unit Rate\"){\n                          \t            child.rate_value = each.rate_value;\n                          \t            child.commission_amount = (parseFloat(each.rate_value) * parseFloat(each.qty));\n                          \t        }\n                          \t        frm.refresh_field(\"items\");\n                          \t        \n                          \t        \n                            }     \n                          \t        \n                      \t    });\n      \t\t\t\t     \t    \n      \t\t\t\t}\n\t\t    });\n\t\t} \n\t\t\n\t\t\tif(frm.doc.sales_invoice_id !== undefined && frm.doc.__islocal){\n\t\t    let id = frm.doc.sales_invoice_id;\n\t\t    console.log(id);\n\t\t    frappe.call({\n\t\t        method: \"frappe.client.get\",\n      \t\t\targs: {\n      \t\t\t\tdoctype: \"Sales Invoice\",\n      \t\t\t\tfilters: {\n      \t\t\t\t\t\"name\": id\n      \t\t\t\t\t\n      \t\t\t\t},\n      \t\t\t\t\n      \t\t\t},\n      \t\t\tcallback:function(res){\n      \t\t\t\t    let data = res.message;\n      \t\t\t\t    console.log(data);\n      \t\t\t\t    let items = data.items;\n      \t\t\t\t    console.log(items);\n                        items.forEach(function(each){\n                            \n                            console.log(each.orc)\n                            if(each.orc === 1){\n                                var child = frm.add_child(\"items\");\n                          \t        //console.log(each)\n                          \t        child.actual_qty = each.actual_qty;\n                          \t        child.additional_notes = each.additional_notes;\n                          \t        child.against_blanket_order = each.against_blanket_order;\n                          \t        child.amount = each.amount;\n                          \t        child.base_amount = each.base_amount;\n                          \t        child.base_net_amount = each.base_net_amount;\n                          \t        child.base_net_rate = each.base_net_rate;\n                          \t        child.base_price_list_rate = each.base_price_list_rate;\n                          \t        child.base_rate = each.base_rate;\n                          \t        child.base_rate_with_margin = each.base_rate_with_margin;\n                          \t        child.blanket_order = each.blanket_order;\n                          \t        child.blanket_order_rate = each.blanket_order_rate;\n                          \t        child.brand = each.brand;\n                          \t        child.conversion_factor = each.conversion_factor;\n                          \t        child.customer_item_code = each.customer_item_code;\n                          \t        child.description = each.description;\n                          \t        child.discount_amount = each.discount_amount;\n                          \t        child.discount_percentage = each.discount_percentage;\n                          \t        child.docstatus = each.docstatus;\n                          \t        child.end_date = each.end_date;\n                          \t        child.gross_profit = each.gross_profit;\n                          \t        child.gst_hsn_code = each.gst_hsn_code;\n                          \t        child.image = each.image;\n                          \t        child.item_code = each.item_code;\n                          \t        child.item_group = each.item_group;\n                          \t        child.item_name = each.item_name;\n                          \t        child.is_non_gst = each.is_non_gst;\n                          \t        child.is_nil_exempt = each.is_nil_exempt;\n                          \t        child.is_free_item = each.is_free_item;\n                          \t        child.item_tax_rate = each.item_tax_rate;\n                          \t        child.item_tax_template = each.item_tax_template;\n                          \t        child.margin_rate_or_amount = each.margin_rate_or_amount;\n                          \t        child.margin_type = each.margin_type;\n                          \t        child.net_amount = each.net_amount;\n                          \t        child.net_rate = each.net_rate;\n                          \t        child.qty = each.qty;\n                          \t        child.rate = each.rate;\n                          \t        child.renewal_status = each.renewal_status;\n                          \t        child.start_date = each.start_date;\n                          \t        child.stock_qty = each.stock_qty;\n                          \t        child.stock_uom = each.stock_uom;\n                          \t        child.stock_uom_rate = each.stock_uom_rate;\n                          \t        child.tax_rate = each.tax_rate;\n                          \t        child.total_weight = each.total_weight;\n                          \t        child.uom = each.uom;\n                          \t        child.valuation_rate = each.valuation_rate;\n                          \t        child.warehouse = each.warehouse;\n                          \t        child.weight_per_unit = each.weight_per_unit;\n                          \t        child.weight_uom = each.weight_uom;\n                          \t        child.commission_type = each.commission_type;\n                          \t        \n                          \t        if(each.commission_type === \"Value\"){\n                          \t            child.rate_value = each.rate_value;\n                          \t            child.commission_amount = each.rate_value;\n                          \t        }\n                          \t        if(each.commission_type === \"Unit Rate\"){\n                          \t            child.rate_value = each.rate_value;\n                          \t            child.commission_amount = parseFloat(each.rate_value) * parseFloat(each.qty);\n                          \t        }\n                          \t        frm.refresh_field(\"items\");\n                          \t        \n                          \t        \n                            }     \n                          \t        \n                      \t    });\n      \t\t\t\t     \t    \n      \t\t\t\t}\n\t\t    });\n\t\t}  \n\t\t\n\t\tif(frm.doc.customer_name !== undefined){\n\t        frm.set_query(\"sales_partner\",function(){\n              return{\n                  filters:{\n                      customer_name: frm.doc.customer_name\n                  }\n              }\n          })\n\t    }\n\t    \n\t     if(frm.doc.sales_partner !== undefined){\n\t        frm.set_query(\"contact_person\",function(){\n              return{\n                  filters:{\n                      company_name: frm.doc.sales_partner\n                  }\n              }\n          })\n\t    }\n\t\t\n\t\n\t},\n\tsales_partner:function(frm){\n\t    if(frm.doc.sales_partner !== undefined){\n\t        frm.set_query(\"contact_person\",function(){\n              return{\n                  filters:{\n                      company_name: frm.doc.sales_partner\n                  }\n              }\n          })\n\t    }\n\t    \n\t},\n\t\n\tcontact_person:function(frm){\n\t    if(frm.doc.contact_person !== undefined && frm.doc.sales_partner !== undefined){\n\t        frappe.call({\n\t\t        method: \"frappe.client.get\",\n      \t\t\targs: {\n      \t\t\t\tdoctype: \"Sales Partner\",\n      \t\t\t\tfilters: {\n      \t\t\t\t\t\"name\": frm.doc.sales_partner\n      \t\t\t\t\t\n      \t\t\t\t},\n      \t\t\t\t\n      \t\t\t},\n      \t\t\tcallback:function(res){\n      \t\t\t    //console.log(res.message)\n      \t\t\t    let bank_details = res.message.bank_details;\n      \t\t\t    bank_details.forEach(function(each){\n      \t\t\t        \n      \t\t\t        if(each.person === frm.doc.contact_person){\n      \t\t\t            \n      \t\t\t            cur_frm.set_value(\"pan_number\",each.pan_number);\n      \t\t\t            cur_frm.refresh_field(\"pan_number\");\n      \t\t\t        }\n      \t\t\t    })\n      \t\t\t\t     \t    \n      \t\t\t}\n\t\t    });\n\t    }\n\t},\n\t\n\t\n\tbefore_save:function(frm){\n\t    var total_qty = 0;\n\t    var sub_total = 0;\n\t    var pan = frm.doc.pan_number;\n\t   // var total = 0;\n\t    frm.doc.items.forEach(function(each){\n\t        \n\t        total_qty =  total_qty + parseInt(each.qty);\n    \t    sub_total = sub_total + parseInt(each.commission_amount);\n    \t    \n    \t    \n    \t    \n\t    });\n\t    \n\t    cur_frm.set_value(\"total_qty\", total_qty);\n\t    cur_frm.set_value(\"sub_total\", sub_total);\n\t    cur_frm.refresh_field(\"total_qty\");\n\t    cur_frm.refresh_field(\"sub_total\");\n\t    \n\t    if (parseFloat(sub_total) >= 15000){\n\t        var tax = parseFloat(sub_total) * 0.05;\n            var grand_total = parseFloat(sub_total) - parseFloat(tax) ;\n            // console.log(total)\n            cur_frm.set_value(\"tds_tax\", tax);\n\t        cur_frm.refresh_field(\"tds_tax\");\n\t        cur_frm.set_value(\"grand_total\", grand_total);\n\t        cur_frm.refresh_field(\"grand_total\");\n\t   }\n\t    \n\t   // if(parseFloat(sub_total) >= 15000){\n\t   // var sales_partner = frm.doc.sales_partner;\n\t   // frappe.call({\n\t\t  //      method: \"frappe.client.get\",\n    //   \t\t\targs: {\n    //   \t\t\t\tdoctype: \"Sales Partner\",\n    //   \t\t\t\tfilters: {\n    //   \t\t\t\t\t\"name\": sales_partner\n      \t\t\t\t\t\n    //   \t\t\t\t},\n      \t\t\t\t\n    //   \t\t\t},\n    //   \t\t\tcallback:function(res){\n    //   \t\t\t    var data = res.message;\n    //   \t\t\t    var bank = data.bank_details\n    //   \t\t\t    var pan = \"\"\n    //   \t\t\t    bank.forEach(function(each){\n    //   \t\t\t        if(each.person === frm.doc.contact_person){\n    //   \t\t\t            pan = each.pan_number;\n      \t\t\t            \n    //   \t\t\t        }\n    //   \t\t\t    })\n    //   \t\t\t    console.log(pan)\n    //   \t\t\t    frappe.model.get_value('Fiscal Year',{'name':\"2023-2024\"},['year_start_date','year_end_date'],function(d){\n    //   \t\t\t       console.log(d)\n    //   \t\t\t        frappe.call({\n    //   \t\t\t            method: \"frappe.client.get_list\",\n    //   \t\t\t            args: {\n    //   \t\t\t                doctype:\"Journal Entry\",\n    //   \t\t\t                filters: {\n    //   \t\t\t                    \"posting_date\":[\">=\", d.year_start_date],\n    //                                 \"posting_date\":[\"<=\", d.year_end_date],\n    //                                 \"pan_number\":pan\n    //   \t\t\t                },\n    //   \t\t\t            },\n    //   \t\t\t            callback:function(j){\n    //   \t\t\t                console.log(j)\n    //   \t\t\t                var je_list = []\n    //   \t\t\t                var total = 0\n    //   \t\t\t                console.log(j.message.length)\n    //   \t\t\t                if(j.message.length === 0 && parseFloat(sub_total) >= 15000){\n    //   \t\t\t                    var tax = parseFloat(sub_total) * 0.05;\n  \t\t// \t                        var grand_total = parseFloat(sub_total) - parseFloat(tax) ;\n    //                     \t        console.log(total)\n    //                     \t        cur_frm.set_value(\"tds_tax\", tax);\n    //                     \t        cur_frm.refresh_field(\"tds_tax\");\n    //                     \t        cur_frm.set_value(\"grand_total\", grand_total);\n    //                     \t        cur_frm.refresh_field(\"grand_total\");\n    //   \t\t\t                }\n      \t\t\t                \n    //   \t\t\t                j.message.forEach(function(each){\n      \t\t\t                    \n    //   \t\t\t                    frappe.call({\n    //               \t\t\t            method: \"frappe.client.get\",\n    //               \t\t\t            args: {\n    //               \t\t\t                doctype:\"Journal Entry\",\n    //               \t\t\t                filters: {\n    //               \t\t\t                    name:each.name\n    //               \t\t\t                },\n    //               \t\t\t            },\n    //               \t\t\t            callback:function(amt){\n    //               \t\t\t                je_list.push(each.name)\n    //               \t\t\t               // console.log(j.message)\n    //               \t\t\t                var je = amt.message\n    //               \t\t\t                total = parseFloat(total) + parseFloat(je.total_debit);\n    //               \t\t\t               // console.log(je_list)\n    //               \t\t\t               // console.log(j.message.length)\n    //               \t\t\t                if(je_list.length === j.message.length){\n    //               \t\t\t                    console.log(total)\n    //               \t\t\t                    if(parseFloat(total) >= 15000 || parseFloat(sub_total) >= 15000){\n    //               \t\t\t                        var tax = parseFloat(sub_total) * 0.05;\n    //               \t\t\t                        var grand_total = parseFloat(sub_total) - parseFloat(tax) ;\n    //                                     \t        console.log(total)\n    //                                     \t        cur_frm.set_value(\"tds_tax\", tax);\n    //                                     \t        cur_frm.refresh_field(\"tds_tax\");\n    //                                     \t        cur_frm.set_value(\"grand_total\", grand_total);\n    //                                     \t        cur_frm.refresh_field(\"grand_total\");\n    //               \t\t\t                    }\n    //               \t\t\t                }\n                  \t\t\t                \n    //               \t\t\t            }\n                  \t\t\t            \n    //               \t\t\t        })\n                  \t\t\t        \n    //   \t\t\t                });\n      \t\t\t                \n    //   \t\t\t            }\n      \t\t\t            \n    //   \t\t\t        })\n      \t\t\t        \n    //   \t\t\t    })\n      \t\t\t    \n    //   \t\t\t}\n\t   // })\t\t\n\t   // }\n\t     else {\n\t       frappe.model.get_value('Fiscal Year',{'name':\"2023-2024\"},['year_start_date','year_end_date'],function(d){\n    \t       frappe.call({\n    \t           method:\"frappe.client.get_list\",\n      \t            args: {\n      \t                doctype:\"ORC List\",\n      \t                filters: {\n      \t                    \"creation\":[\">=\", d.year_start_date],\n                            \"creation\":[\"<=\", d.year_end_date],\n                            \"pan_number\":pan\n      \t                },\n      \t            },\n      \t            callback:function(data){\n      \t                console.log(\"data\")\n      \t                console.log(data)\n      \t                var orc = []\n      \t                var total = 0\n      \t                if(data.message.length === 0){\n      \t                    console.log(\"if condition\")\n  \t\t                    if (parseFloat(sub_total) >= 15000){\n  \t\t                        \n  \t\t                    \n  \t\t\t                     var tax = parseFloat(sub_total) * 0.05;\n                                  var grand_total = parseFloat(sub_total) - parseFloat(tax) ;\n                    \t            console.log(total)\n                    \t            cur_frm.set_value(\"tds_tax\", tax);\n                        \t        cur_frm.refresh_field(\"tds_tax\");\n                        \t        cur_frm.set_value(\"grand_total\", grand_total);\n                        \t        cur_frm.refresh_field(\"grand_total\");\n  \t\t                    }\n  \t\t                    else{\n  \t\t                        \n                    \t        cur_frm.set_value(\"grand_total\", grand_total);\n                    \t        cur_frm.refresh_field(\"grand_total\");\n  \t\t                    }\n  \t\t                }\n  \t\t                else{\n  \t\t                    console.log(\"else condition\")\n  \t\t                    data.message.forEach(function(each){\n  \t\t                        frappe.call({\n  \t\t                            method: \"frappe.client.get\",\n  \t\t                            args:{\n  \t\t                                doctype:\"ORC List\",\n  \t\t                                filters:{\n  \t\t                                    name : each.name\n  \t\t                                },\n  \t\t                            },\n  \t\t                            callback:function(res){\n  \t\t                                orc.push(each.name)\n  \t\t                                var r_data = res.message\n  \t\t                                total = parseFloat(total) + parseFloat(r_data.sub_total);\n  \t\t                                \n  \t\t                                if(orc.length === data.message.length){\n  \t\t                                    var final_total = total + sub_total;\n  \t\t                                    if(parseFloat(final_total) >= 15000){\n              \t\t\t                        var tax = parseFloat(sub_total) * 0.05;\n              \t\t\t                        var grand_total = parseFloat(sub_total) - parseFloat(tax) ;\n                                    \t        console.log(total)\n                                    \t        cur_frm.set_value(\"tds_tax\", tax);\n                                    \t        cur_frm.refresh_field(\"tds_tax\");\n                                    \t        cur_frm.set_value(\"grand_total\", grand_total);\n                                    \t        cur_frm.refresh_field(\"grand_total\");\n              \t\t\t                    }\n  \t\t                                }\n  \t\t                            }\n  \t\t                        })\n  \t\t                    })\n  \t\t                }\n      \t                \n      \t            }\n    \t       })\n\t       })    \n\t   }\n\t         \n\t}\n});\n\nfrappe.ui.form.on('ORC Item', {\n\t\n\trate_value:function(frm,cdt, cdn){\n\t   var data = locals[cdt][cdn];\n\t   console.log(data.rate_value)\n\t   let amount = 0;\n\t   if(data.commission_type === \"Unit Rate\"){\n\t       amount = parseFloat(data.qty) * parseFloat(data.rate_value);\n\t       data.commission_amount = amount;\n\t       \n    \t  \n\t   }\n\t   if(data.commission_type === \"Value\"){\n\t       amount = parseFloat(data.rate_value);\n\t       data.commission_amount = amount;\n\t       \n    \t  \n\t   }\n\t   cur_frm.refresh_field(\"items\");\n\t   \n\t}\n})\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Partner",
  "enabled": 1,
  "modified": "2023-04-12 15:14:55.576276",
  "module": "Renewal Module",
  "name": "Sales Partner",
  "script": "frappe.ui.form.on('Sales Partner', {\n\trefresh(frm) {\n\t\t// your code here\n\t\tif(frm.doc.partner_name !== undefined){\n\t\t    console.log(frm.doc.partner_name)\n\t\t    frm.set_query(\"person\",\"bank_details\",function(doc,cdt,cdn){\n              return{\n                  filters:{\n                      company_name: frm.doc.partner_name\n                  }\n              }\n          });\n\t\t}\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Journal Entry",
  "enabled": 1,
  "modified": "2024-02-24 15:48:30.844739",
  "module": "Renewal Module",
  "name": "Journal Entry",
  "script": "frappe.ui.form.on('Journal Entry', {\n\trefresh(frm) {\n\t\t// your code here\n\t\tif(frm.doc.company === \"64 Network Security Pvt Ltd - TG\"){\n\t\t    cur_frm.set_value(\"naming_series\",\"TG-JV-.YYYY.-.#####\");\n\t\t    frm.refresh_field(\"naming_series\");\n\t\t}\n\t\tif(frm.doc.company === \"64 Network Security Pvt Ltd - TN\"){\n\t\t    cur_frm.set_value(\"naming_series\",\"TN-JV-.YYYY.-.#####\");\n\t\t    frm.refresh_field(\"naming_series\");\n\t\t}\n\t\tif(frm.doc.company === \"VAARAAHI CAPITALS PRIVATE LIMITED\"){\n\t\t    cur_frm.set_value(\"naming_series\",\"VRH-JV-.YYYY.-.#####\");\n\t\t    frm.refresh_field(\"naming_series\");\n\t\t}\n\t\t\n\t\tif ( frm.doc.__islocal && frm.doc.orc_id !== undefined ){\n\t\t    frappe.call({\n    \t\t        method: \"frappe.client.get\",\n          \t\t\targs: {\n          \t\t\t\tdoctype: \"ORC List\",\n          \t\t\t\tfilters: {\n          \t\t\t\t\t\"name\": frm.doc.orc_id\n          \t\t\t\t\t\n          \t\t\t\t}\n          \t\t\t\t\n          \t\t\t},\n          \t\t\tcallback: function(r){\n          \t\t\t    frm.doc.accounts = []\n          \t\t\t    \n          \t\t\t    if(r.message.tds_tax > 0){\n          \t\t\t        \n          \t\t\t        for(let i = 1;i < 4; i++){\n          \t\t\t            let child = frm.add_child(\"accounts\");\n          \t\t\t            if(i == 1){\n          \t\t\t                child.account = \"Commission on Sales - 64NS-TG\";\n                  \t\t\t        child.debit_in_account_currency = r.message.grand_total;\n          \t\t\t            }\n          \t\t\t            if(i ==2){\n          \t\t\t                child.account = \"TDS Receivables - 64NS-TG\";\n                  \t\t\t        child.debit_in_account_currency = r.message.tds_tax;\n          \t\t\t            }\n          \t\t\t            if(i==3){\n          \t\t\t                child.account = \"Kotak Mahindra Bank - 64NS-TG\";\n                  \t\t\t        child.credit_in_account_currency = r.message.sub_total;\n          \t\t\t            }\n          \t\t\t        }\n          \t\t\t    }\n          \t\t\t    else{\n          \t\t\t        for(let i = 1;i < 3; i++){\n          \t\t\t            let child = frm.add_child(\"accounts\");\n          \t\t\t            if(i == 1){\n          \t\t\t                child.account = \"Commission on Sales - 64NS-TG\";\n                  \t\t\t        child.debit_in_account_currency = r.message.grand_total;\n          \t\t\t            }\n          \t\t\t            \n          \t\t\t            if(i==2){\n          \t\t\t                child.account = \"Kotak Mahindra Bank - 64NS-TG\";\n                  \t\t\t        child.credit_in_account_currency = r.message.sub_total;\n          \t\t\t            }\n          \t\t\t        }\n          \t\t\t    }\n          \t\t\t    \n          \t\t\t    \n          \t\t\t    \n          \t\t\t    \n          \t\t\t    frm.refresh_field(\"accounts\");\n          \t\t\t    cur_frm.set_value(\"pan_number\",r.message.pan_number);\n          \t\t\t    cur_frm.refresh_field(\"pan_number\");\n          \t\t\t}\n\t\t    })\t\t\n\t\t}\n\t},\n\tcompany:function(frm){\n\t    if(frm.doc.company === \"64 Network Security Pvt Ltd - TG\"){\n\t\t    cur_frm.set_value(\"naming_series\",\"TG-JV-.YYYY.-.#####\");\n\t\t    frm.refresh_field(\"naming_series\");\n\t\t}\n\t\tif(frm.doc.company === \"64 Network Security Pvt Ltd - TN\"){\n\t\t    cur_frm.set_value(\"naming_series\",\"TN-JV-.YYYY.-.#####\");\n\t\t    frm.refresh_field(\"naming_series\");\n\t\t}\n\t\tif(frm.doc.company === \"VAARAAHI CAPITALS PRIVATE LIMITED\"){\n\t\t    cur_frm.set_value(\"naming_series\",\"VCPL-2324J/.####\");\n\t\t    frm.refresh_field(\"naming_series\");\n\t\t}\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2024-01-24 12:14:13.624510",
  "module": "Renewal Module",
  "name": "Get Place of Supply",
  "script": "frappe.ui.form.on('Quotation', {\n\trefresh(frm) {\n\t\t// your code here\n\t\tif ( frm.doc.__islocal ){\n\t\t\n\t\tsetTimeout(function() {\n\t\tif(frm.doc.shipping_address_name !== undefined){\n\t\t    \n\t\t    frappe.call({\n    \t\t        method: \"frappe.client.get\",\n          \t\t\targs: {\n          \t\t\t\tdoctype: \"Address\",\n          \t\t\t\tfilters: {\n          \t\t\t\t\t\"name\": frm.doc.shipping_address_name,\n          \t\t\t\t\t\n          \t\t\t\t},\n          \t\t\t\t\n          \t\t\t},\n          \t\t\tcallback: function(d){\n          \t\t\t    var data = d.message;\n          \t\t\t    var place_of_supply = data.gst_state_number+\"-\"+data.gst_state;\n          \t\t\t    cur_frm.set_value(\"place_of_supply\",place_of_supply);\n              \t\t\tcur_frm.refresh_field(\"place_of_supply\");\n          \t\t\t    \n          \t\t\t}\n\t\t    });\t\t\t\n\t\t    \n\t\t}\n\t\t}, 2000);  \n\t\t}\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Order",
  "enabled": 0,
  "modified": "2024-01-23 12:25:26.662531",
  "module": null,
  "name": "get POS",
  "script": "frappe.ui.form.on('Purchase Order', {\n\trefresh(frm) {\n\t\t// your code here\n\t\t\n\t\tsetTimeout(function() {\n\t\tif(frm.doc.shipping_address_name !== undefined){\n\t\t    \n\t\t    frappe.call({\n    \t\t        method: \"frappe.client.get\",\n          \t\t\targs: {\n          \t\t\t\tdoctype: \"Address\",\n          \t\t\t\tfilters: {\n          \t\t\t\t\t\"name\": frm.doc.shipping_address_name,\n          \t\t\t\t\t\n          \t\t\t\t},\n          \t\t\t\t\n          \t\t\t},\n          \t\t\tcallback: function(d){\n          \t\t\t    var data = d.message;\n          \t\t\t    var place_of_supply = data.gst_state_number+\"-\"+data.gst_state;\n          \t\t\t    cur_frm.set_value(\"place_of_supply\",place_of_supply);\n              \t\t\tcur_frm.refresh_field(\"place_of_supply\");\n          \t\t\t    \n          \t\t\t}\n\t\t    });\t\t\t\n\t\t    \n\t\t}\n\t\t}, 2000);  \n\t}\n})",
  "view": "Form"
 }
]